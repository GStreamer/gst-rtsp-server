=== release 1.18.6 ===

2022-02-02 15:08:18 +0000  Tim-Philipp Müller <tim@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* gst-rtsp-server.doap:
	* meson.build:
	  Release 1.18.6

2021-10-07 13:00:10 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Unprepare suspended medias too
	  Previously suspended medias immediately reached the UNPREPARED state
	  without going through the media's unprepare() vfunc. This didn't allow
	  the media subclass to do any additional cleanup, and for example the
	  shutdown-eos property of GstRTSPMedia was ignored.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/221>

2022-01-20 17:13:36 -0600  Michael Gruner <michael.gruner@ridgerun.com>

	* examples/test-appsrc2.c:
	  gst-rtsp-server: Fix leak in appsrc2 example
	  In the need-data appsrc callback, a buffer is pulled from the
	  appsink. This buffer is then copied so that metadata is writable.
	  The copy is pushed to the appsrc but it doesn't take ownership
	  of the buffer so we need to manually unref it. The original buffer
	  is finally unreffed when the sample is freed.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/220>

2021-12-16 21:04:53 +0100  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: fix get_rates raciness
	  Prior to this patch, we considered that a stream was blocking
	  whenever a pad probe was triggered for either the RTP pad or
	  the RTCP pad.
	  This led to situations where we subsequently unblocked and expected
	  to find a segment on the RTP pad, which was racy.
	  Instead, we now only consider that the stream is blocking when
	  the pad probe for the RTP pad has triggered with a blockable object
	  (buffer, buffer list, gap event).
	  The RTCP pad is simply blocked without affecting the state of the
	  stream otherwise.
	  Fixes #929
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/218>

2021-10-06 18:19:29 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Only unprepare a media if it was not already unpreparing anyway
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/216>

2021-10-03 23:25:23 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-session.h:
	  rtsp-client: make sure sessmedia will not get freed while used
	  handle_*_request() functions were all retrieving the session media from
	  the session by calling gst_rtsp_session_get_media () which is a transfer-none
	  call. If a session timeout happens at that time, the session media may get freed
	  making the pointer invalid..
	  Fixes #757
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/215>

2021-10-05 19:37:40 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Also mark receive-only (RECORD) medias as prepared when unsuspending
	  Previously the status was only changed for other medias.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/214>

2021-10-01 13:51:37 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-session.c:
	  rtsp-session: Don't unref medias twice if it is removed inside gst_rtsp_session_filter() while the mutex is shortly released
	  Fixes https://gitlab.freedesktop.org/gstreamer/gstreamer/-/issues/757
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/213>

2021-09-09 00:13:01 +0100  Tim-Philipp Müller <tim@centricular.com>

	* docs/gst_plugins_cache.json:
	* meson.build:
	  Back to development

=== release 1.18.5 ===

2021-09-08 20:04:14 +0100  Tim-Philipp Müller <tim@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* docs/gst_plugins_cache.json:
	* gst-rtsp-server.doap:
	* meson.build:
	  Release 1.18.5

2021-05-04 20:47:18 -0400  Doug Nazar <nazard@nazar.ca>

	* gst/rtsp-server/rtsp-media-factory-uri.c:
	  rtsp-media: fix leak when adding converter
	  Free the previous caps before reusing the variable for the converter caps.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/205>

2021-05-04 20:45:19 -0400  Doug Nazar <nazard@nazar.ca>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: fix leak adding headers
	  gst_rtsp_message_add_header() makes a copy of the header, instead
	  of taking ownership.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/205>

2021-04-29 03:07:42 -0400  Doug Nazar <nazard@nazar.ca>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Ensure the bus watch is removed during unprepare
	  It's possible for the destruction of the source to be delayed.
	  Instead of relying on the dispose() to remove the bus watch, do
	  it ourselves.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/203>

2021-04-23 07:18:48 +0200  Edward Hervey <edward@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Add one more case to seek avoidance
	  This is an extension to the previous commit. There can also be cases where the
	  start position is not specified, in those cases we should also avoid doing
	  seeking unless it's forced.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/199>

2021-04-16 14:35:02 -0400  Doug Nazar <nazard@nazar.ca>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Improve skipping trickmode seek.
	  We can also skip the seek if the end range is already
	  correct.
	  Avoids initial seek on play start if playing full stream.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/198>

2021-03-15 19:49:29 +0000  Tim-Philipp Müller <tim@centricular.com>

	* docs/gst_plugins_cache.json:
	* meson.build:
	  Back to development

=== release 1.18.4 ===

2021-03-15 17:49:53 +0000  Tim-Philipp Müller <tim@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* docs/gst_plugins_cache.json:
	* gst-rtsp-server.doap:
	* meson.build:
	  Release 1.18.4

2021-02-15 12:07:15 +0000  Tim-Philipp Müller <tim@centricular.com>

	* tests/check/gst/rtspclientsink.c:
	  tests: rtspclientsink: fix some leaks
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/192>

2021-02-15 12:26:30 +0000  Tim-Philipp Müller <tim@centricular.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	  rtspclientsink: mark cached caps as maybe-leaked to make leaks tracer happy
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/192>

2021-02-15 12:07:45 +0000  Tim-Philipp Müller <tim@centricular.com>

	* tests/check/gst/rtspclientsink.c:
	  rtspclientsink: add unit test for potential shutdown deadlock
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/191>

2021-02-15 12:01:34 +0000  Tim-Philipp Müller <tim@centricular.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	  rtspclientsink: fix deadlock on shutdown before preroll
	  Fixes https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/issues/130
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/191>

2021-02-01 12:16:46 +0100  Branko Subasic <branko@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: avoid deadlock in send_func
	  Currently the send_func() runs in a thread of its own which is started
	  the first time we enter handle_new_sample(). It runs in an outer loop
	  until priv->continue_sending is FALSE, which happens when a TEARDOWN
	  request is received. We use a local variable, cont, which is initialized
	  to TRUE, meaning that we will always enter the outer loop, and at the
	  end of the outer loop we assign it the value of priv->continue_sending.
	  Within the outer loop there is an inner loop, where we wait to be
	  signaled when there is more data to send. The inner loop is exited when
	  priv->send_cookie has changed value, which it does when more data is
	  available or when a TEARDOWN has been received.
	  But if we get a TEARDOWN before send_func() is entered we will get stuck
	  in the inner loop because no one will increase priv->session_cookie
	  anymore.
	  By not entering the outer loop in send_func() if priv->continue_sending
	  is FALSE we make sure that we do not get stuck in send_func()'s inner
	  loop should we receive a TEARDOWN before the send thread has started.
	  Change-Id: I7338a0ea60ea435bb685f875965f5165839afa20
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/188>

2021-01-22 08:58:23 +0100  Branko Subasic <branko@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: cleanup transports during TEARDOWN
	  When tunneling RTP over RTSP the stream transports are stored in a hash
	  table in the GstRTSPClientPrivate struct. They are used for, among other
	  things, mapping channel id to stream transports when receiving data from
	  the client. The stream tranports are created and added to the hash table
	  in handle_setup_request(), but unfortuately they are not removed in
	  handle_teardown_request(). This means that if the client sends data on
	  the RTSP connection after it has sent the TEARDOWN, which is often the
	  case when audio backchannel is enabled, handle_data() will still be able
	  to map the channel to a session transport and pass the data along to it.
	  Which eventually leads to a failing assert in gst_rtsp_stream_recv_rtp()
	  because the stream is no longer joined to a bin.
	  We avoid this by removing the stream transports from the hash table when
	  we handle the TEARDOWN request.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/186>

2021-01-14 02:17:42 +0000  Tim-Philipp Müller <tim@centricular.com>

	* docs/gst_plugins_cache.json:
	* meson.build:
	  Back to development

=== release 1.18.3 ===

2021-01-13 21:12:06 +0000  Tim-Philipp Müller <tim@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* docs/gst_plugins_cache.json:
	* gst-rtsp-server.doap:
	* meson.build:
	  Release 1.18.3

2020-12-17 15:27:27 +0100  Tobias Ronge <tobiasr@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Only count senders when counting blocked streams
	  Only sender streams sends the GstRTSPStreamBlocking message, so only
	  these should be counted before setting media status to prepared.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/182>

2020-12-14 14:12:38 +1300  Lawrence Troup <lawrence.troup@teknique.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: Only unref client watch context on finalize, to avoid deadlock
	  Fixes https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/issues/127
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/179>

2020-12-06 23:57:09 +0000  Tim-Philipp Müller <tim@centricular.com>

	* docs/gst_plugins_cache.json:
	* meson.build:
	  Back to development

=== release 1.18.2 ===

2020-12-06 13:24:47 +0000  Tim-Philipp Müller <tim@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* docs/gst_plugins_cache.json:
	* gst-rtsp-server.doap:
	* meson.build:
	  Release 1.18.2

2020-11-18 20:36:50 +0100  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: collect a clock_rate when blocking
	  This lets us provide a clock_rate in a fashion similar to the
	  other code paths in get_rtpinfo()
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/175>

2020-11-03 16:56:28 +0100  David Phung <davidph@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-media: Ignore GstRTSPStreamBlocking from incomplete streams
	  To prevent cases with prerolling when the inactive stream prerolls first
	  and the server proceeds without waiting for the active stream, we will
	  ignore GstRTSPStreamBlocking messages from incomplete streams. When
	  there are no complete streams (during DESCRIBE), we will listen to all
	  streams.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/173>

2020-10-28 21:48:06 +0100  Kristofer Björkström <kristofb@axis.com>

	* tests/check/gst/media.c:
	* tests/check/meson.build:
	* tests/files/test.avi:
	  media test: Add test for seeking one active stream with a demuxer
	  Add another seek_one_active_stream test but with a demuxer. The demuxer
	  will flush both streams in opposed to the existing test which only
	  flushes the active stream. This will help exposing problems with the
	  prerolling process after a flushing seek.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/173>

2020-11-16 10:34:41 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Use guint64 for setting the size-time property on rtpstorage
	  Otherwise this will cause memory corruption as the property expects a 64
	  bit integer.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/172>

2020-09-28 22:03:47 +0200  David Phung <davidph@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Plug memory leak
	  The get-storage signal of rtpbin increases the ref count of the storage.
	  So we have to unref it after usage.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/171>

2020-09-11 15:46:41 +0200  Guiqin Zou <guiqinzu@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Get rates only on sender streams
	  When play a media with both sender and receiver stream, like ONVIF
	  back channel audio in, gst_rtsp_media_get_rates call
	  gst_rtsp_stream_get_rates for each stream to set the rates. But
	  gst_rtsp_stream_get_rates return false for the receiver steam, which
	  lead a g_assert crash.
	  Instead to get rates on all streams, now just get rates on sender
	  streams.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/170>

2020-10-27 12:34:42 +0000  Tim-Philipp Müller <tim@centricular.com>

	* docs/gst_plugins_cache.json:
	* meson.build:
	  Back to development

=== release 1.18.1 ===

2020-10-26 11:15:28 +0000  Tim-Philipp Müller <tim@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* docs/gst_plugins_cache.json:
	* gst-rtsp-server.doap:
	* meson.build:
	  Release 1.18.1

2020-10-08 22:17:16 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: make use of blocked_running_time in query_position
	  When blocking, the sink element will not have received a buffer
	  yet and the position query will fail. Instead, we make use of
	  the running time of the buffer we blocked on.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/163>

2020-10-06 00:04:17 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: collect rtp info when blocking
	  We don't unblock the stream anymore before replying to the
	  play request (883ddc72bb5bc57c95a9e167814d1ac53fe1b443),
	  so the sinks don't have a last-sample after potentially flush
	  seeking. seek_trickmode waits for preroll however, which means
	  the stream will block and wait for a first buffer. Subsequent
	  calls to get_rtpinfo() can thus make use of the information.
	  See https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/issues/115
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/163>

2020-09-05 00:30:42 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-server-internal.h:
	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-media: set a 0 storage size for TCP receivers
	  ulpfec correction is obviously useless when receiving a stream
	  over TCP, and in TCP modes the rtp storage receives non
	  timestamped buffers, causing it to queue buffers indefinitely,
	  until the queue grows so large that sanity checks kick in and
	  warnings start to get emitted.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/158>

2020-08-21 03:02:40 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: preroll on gap events
	  This allows negotiating a SDP with all streams present, but only
	  start sending packets at some later point in time
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/157>

2020-08-25 16:10:36 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: do not unblock on unsuspend
	  rtsp_media_unsuspend() is called from handle_play_request()
	  before sending the play response. Unblocking the streams here
	  was causing data to be sent out before the client was ready
	  to handle it, with obvious side effects such as initial packets
	  getting discarded, causing decoding errors.
	  Instead we can simply let the media streams be unblocked when
	  the state of the media is set to PLAYING, which occurs after
	  sending the play response.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/156>

2020-09-08 17:44:37 +0100  Tim-Philipp Müller <tim@centricular.com>

	* docs/gst_plugins_cache.json:
	* meson.build:
	  Back to development

=== release 1.18.0 ===

2020-09-08 00:08:29 +0100  Tim-Philipp Müller <tim@centricular.com>

	* .gitlab-ci.yml:
	* ChangeLog:
	* NEWS:
	* RELEASE:
	* docs/gst_plugins_cache.json:
	* gst-rtsp-server.doap:
	* meson.build:
	  Release 1.18.0

=== release 1.17.90 ===

2020-08-20 16:15:06 +0100  Tim-Philipp Müller <tim@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* docs/gst_plugins_cache.json:
	* gst-rtsp-server.doap:
	* meson.build:
	  Release 1.17.90

2020-08-03 19:34:30 +0300  Jordan Petridis <jordan@centricular.com>

	* gst/rtsp-server/rtsp-thread-pool.c:
	  rtsp-thread-pool.c: fix clang 10 warning
	  clang 10 is complaining about incompatible types due to the
	  glib typesystem.
	  ```
	  ../subprojects/gst-rtsp-server/gst/rtsp-server/rtsp-thread-pool.c:534:10: error: incompatible pointer types passing 'typeof ((((void *)0))) *' (aka 'void **') to parameter of type 'GThreadPool **' (aka 'struct _GThreadPool **') [-Werror,-Wincompatible-pointer-types]
	  ```
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/145>

2020-08-03 19:34:30 +0300  Jordan Petridis <jordan@centricular.com>

	* gst/rtsp-server/rtsp-thread-pool.c:
	  rtsp-thread-pool.c: fix clang 10 warning
	  clang 10 is complaining about incompatible types due to the
	  glib typesystem.
	  ```
	  ../subprojects/gst-rtsp-server/gst/rtsp-server/rtsp-thread-pool.c:534:10: error: incompatible pointer types passing 'typeof ((((void *)0))) *' (aka 'void **') to parameter of type 'GThreadPool **' (aka 'struct _GThreadPool **') [-Werror,-Wincompatible-pointer-types]
	  ```
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/145>

2020-07-15 11:19:40 +0200  Srimanta Panda <srimanta@axis.com>

	* gst/rtsp-server/rtsp-sdp.c:
	  rtsp-sdp: Fix resource leak in mikey messsage
	  Fixed a resource leak for mikey message while adding crypto session
	  failed.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/144>

2020-07-08 17:28:57 +0100  Tim-Philipp Müller <tim@centricular.com>

	* meson.build:
	* scripts/extract-release-date-from-doap-file.py:
	  meson: set release date from .doap file for releases
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/143>

2020-07-02 23:52:47 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: explicitly set caps on udpsrc elements
	  This causes them to send caps events before data flow, which is
	  usually a pretty correct thing to do!
	  Not doing so manifested in a bug where ssrcdemux wouldn't forward
	  the caps it had received with an extra ssrc field, as it hadn't
	  received any caps event.
	  Fixes #85
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/141>

2020-07-03 02:04:04 +0100  Tim-Philipp Müller <tim@centricular.com>

	* docs/gst_plugins_cache.json:
	* meson.build:
	  Back to development

=== release 1.17.2 ===

2020-07-03 00:33:54 +0100  Tim-Philipp Müller <tim@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* docs/gst_plugins_cache.json:
	* gst-rtsp-server.doap:
	* meson.build:
	  Release 1.17.2

2020-06-19 22:55:54 -0400  Thibault Saunier <tsaunier@igalia.com>

	* docs/gst_plugins_cache.json:
	  doc: Stop documenting properties from parents

2020-06-22 20:04:45 +0300  Sebastian Dröge <sebastian@centricular.com>

	* docs/gst_plugins_cache.json:
	  docs: Fix version in the plugins cache
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/138>

2020-06-22 12:33:32 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	  rtspclientsink: Don't call gst_ghost_pad_construct() anymore
	  It's deprecated, unneeded and doesn't do anything anymore.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/138>

2020-06-20 00:28:28 +0100  Tim-Philipp Müller <tim@centricular.com>

	* meson.build:
	  Back to development

=== release 1.17.1 ===

2020-06-19 19:24:38 +0100  Tim-Philipp Müller <tim@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* docs/gst_plugins_cache.json:
	* gst-rtsp-server.doap:
	* meson.build:
	  Release 1.17.1

2020-06-15 19:45:38 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Add/configure transports when completing the pipeline
	  Otherwise the transports are not set up yet during the PLAY request
	  handling when unsuspending (and thus unblocking) the media.
	  In case of live pipelines this then causes the first few packets to go
	  to the sinks before they know what to do with them, and they simply
	  discard them which is rather suboptimal in case of keyframes.
	  For non-live pipelines this is not a problem because the sink will still
	  be PAUSED and as such not send out the data yet but wait until it goes
	  to PLAYING, which is late enough.
	  Adding the transports multiple times is not a problem: if the transport
	  is already added it won't be added another time and TRUE will be
	  returned.
	  This fixes a regression introduced by a7732a68e8bc6b4ba15629c652056c240c624ff0
	  before 1.14.0.
	  Fixes https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/issues/107
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/135>

2020-06-15 19:45:21 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Fix misleading comment
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/135>

2020-06-15 18:29:13 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Make sure to also unblock pads when going to PLAYING while buffering
	  The pad probes are not needed anymore at this point and later when
	  reaching buffering 100% only the state is changed, no unblocking
	  happens.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/135>

2020-06-15 18:17:40 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Remove duplicated media_unblock() function
	  It does literally the same as media_streams_set_blocked(FALSE).
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/135>

2020-06-12 15:38:45 +0200  Lenny Jorissen <lennyjorissen@gmail.com>

	* examples/test-onvif-server.c:
	  test-onvif-server: cast ntp-offset property value to 64 bit
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/134>

2020-06-09 15:21:24 -0400  Thibault Saunier <tsaunier@igalia.com>

	* docs/gst_plugins_cache.json:
	  docs: Update plugins cache

2020-06-10 13:45:04 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* examples/test-onvif-server.c:
	* examples/test-onvif-server.h:
	* gst/rtsp-server/rtsp-onvif-media-factory.h:
	  onvif-media-factory: define autoptr cleanup function
	  And have the factory in the onvif-server example inherit from
	  GstRTSPOnvifMediaFactory.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/133>

2020-06-08 10:59:34 -0400  Thibault Saunier <tsaunier@igalia.com>

	* docs/gst_plugins_cache.json:
	  docs: Update plugins cache

2020-06-08 09:45:15 +0200  Guillaume Desmottes <guillaume.desmottes@collabora.com>

	* tests/check/gst/rtspserver.c:
	  tests: enforce I420 format
	  Test was not enforcing a video format on videotestsrc. I420 was picked as it
	  was the first format in GST_VIDEO_FORMATS_ALL which will no longer be
	  true (gst-plugins-base!689).
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/129>

2020-06-06 00:41:51 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	  plugins: uddate gst_type_mark_as_plugin_api() calls

2020-06-03 18:36:25 -0400  Thibault Saunier <tsaunier@igalia.com>

	* docs/meson.build:
	  doc: Require hotdoc >= 0.11.0

2020-05-27 17:00:05 +0300  Sebastian Dröge <sebastian@centricular.com>

	* docs/gst_plugins_cache.json:
	  docs: Update gst_plugins_cache.json

2020-05-30 23:23:51 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	  plugins: Use gst_type_mark_as_plugin_api() for all non-element plugin types

2020-05-27 23:38:06 +0100  Tim-Philipp Müller <tim@centricular.com>

	* gst/rtsp-server/meson.build:
	  meson: gir: remove bogus sources_top_dir kwarg
	  Doesn't actually exist. Was fixed differently in Meson
	  so that the user doesn't have to specify it.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/127>

2020-05-27 17:43:43 +0100  Tim-Philipp Müller <tim@centricular.com>

	* tests/check/meson.build:
	  tests: put registry into tests/check not the gst/ subdir
	  Underscorify the test name before setting GST_REGISTRY,
	  so the registry actually ends up in the current build dir
	  and not some subdir.
	  For consistency with the other modules, but should also
	  avoid problems on windows.
	  Also fix indentation of environment block.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/126>

2020-05-27 17:33:24 +0100  Tim-Philipp Müller <tim@centricular.com>

	* tests/check/meson.build:
	  tests: fix meson test env setup to make sure we use the right gst-plugin-scanner
	  If core is built as a subproject (e.g. as in gst-build), make sure to use
	  the gst-plugin-scanner from the built subproject. Without this, gstreamer
	  might accidentally use the gst-plugin-scanner from the install prefix if
	  that exists, which in turn might drag in gst library versions we didn't
	  mean to drag in. Those gst library versions might then be older than
	  what our current build needs, and might cause our newly-built plugins
	  to get blacklisted in the test registry because they rely on a symbol
	  that the wrongly-pulled in gst lib doesn't have.
	  This should fix running of unit tests in gst-build when invoking
	  meson test or ninja test from outside the devenv for the case where
	  there is an older or different-version gst-plugin-scanner installed
	  in the install prefix.
	  In case no gst-plugin-scanner is installed in the install prefix, this
	  will fix "GStreamer-WARNING: External plugin loader failed. This most
	  likely means that the plugin loader helper binary was not found or
	  could not be run. You might need to set the GST_PLUGIN_SCANNER
	  environment variable if your setup is unusual." warnings when running
	  the unit tests.
	  In the case where we find GStreamer core via pkg-config we use
	  a newly-added pkg-config var "pluginscannerdir" to get the right
	  directory. This has the benefit of working transparently for both
	  installed and uninstalled pkg-config files/setups.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/126>

2020-05-27 17:32:02 +0100  Tim-Philipp Müller <tim@centricular.com>

	* tests/check/meson.build:
	  tests: gst-plugins-base and -bad plugins are required for the unit tests
	  Make hard requirement until we have more fine-grained control
	  in the unit tests. Of course the presence of the .pc file doesn't
	  imply that the plugins we need are actually there, but it's at
	  least a step in the right direction.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/126>

2020-05-27 17:29:18 +0100  Tim-Philipp Müller <tim@centricular.com>

	* tests/check/meson.build:
	  tests: pick up rtsp-server plugins from build directory only
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/126>

2020-05-26 15:31:22 +0200  Ludvig Rappe <ludvigr@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: wait for all GstRTSPStreamBlocking messages
	  Make sure rtsp-media have received a GstRTSPStreamBlocking message from
	  each active stream when checking if all streams are blocked.
	  Without this change there will be a race condition when using two or
	  more streams and rtsp-media receives a GstRTSPStreamBlocking message
	  from one of the streams. This is because rtsp-media then checks if all
	  streams are blocked by calling gst_rtsp_stream_is_blocking() for each
	  stream. This function call returns TRUE if the stream has sent a
	  GstRTSPStreamBlocking message, however, rtsp-media may have yet to
	  receive this message. This would then result in that rtsp-media
	  erroneously thinks it is blocking all streams which could result in
	  rtsp-media changing state, from PREPARING to PREPARED. In the case of a
	  preroll, this could result in that rtsp-media thinks that the pipeline
	  is prerolled even though that might not be the case.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/124>

2020-05-04 13:43:00 +0200  Ludvig Rappe <ludvigr@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: update expected_async_done during suspend
	  Set expected_async_done to FALSE in default_suspend() if a state change
	  occurs and the return value from set_target_state() is something other
	  than GST_STATE_CHANGE_ASYNC.
	  Without this change there is a risk that expected_async_done will be
	  TRUE even though no asynchronous state change is taking place. This
	  could happen if the pipeline is set to PAUSED using
	  media_set_pipeline_state_locked(), an asynchronous state change starts
	  and then the media is suspended (which could result in a state change,
	  aborting the asynchronous state change). If the media is suspended
	  before the asynchronous state change ends then expected_async_done will
	  be TRUE but no asynchronous state change is taking place.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/123>

2020-05-25 13:49:45 +0200  Kristofer Björkström <kristofb@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: Fix race condition in rtsp ctrl timeout by WeakRef client
	  There was a race condition where client was being finalized and
	  concurrently in some other thread the rtsp ctrl timout was relying on
	  client data that was being freed.
	  When rtsp ctrl timeout is setup, a WeakRef on Client is set.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/121>

2015-03-03 14:42:07 +0100  Gregor Boirie <gregor.boirie@parrot.com>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media-factory: complete DSCP QoS setting support
	  add dscp_qos setting support at factory and media level to setup IP DSCP
	  field of bounded UDP sinks.
	  Fixes https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/issues/6
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/120>

2020-05-14 10:08:32 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: Fix some race conditions around timeout source removal
	  We always need to take the lock while accessing it as otherwise another
	  thread might've removed it in the meantime. Also when destroying and
	  creating a new one, ensure that the mutex is not shortly unlocked in
	  between as during that time another one might potentially be created
	  already.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/119>

2020-05-03 16:29:31 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-media: Mark out parameters accordingly in gst_rtsp_media_get_rates()
	  And the same for gst_rtsp_stream_get_rates().
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/118>

2020-05-03 10:17:41 +0000  Tim-Philipp Müller <tim@centricular.com>

	* examples/test-onvif-server.c:
	  examples: test-onvif-server: fix compiler warnings on raspbian
	  Fix printf format for 64-bit variables.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/117>

2020-05-01 10:42:17 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-stream-transport.c:
	* gst/rtsp-server/rtsp-stream-transport.h:
	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream-transport: Fix accidental API/ABI breakage with message_sent callbacks
	  The old API is preserved now and new API was added that provides the
	  additional parameter to the callback.
	  Fixes https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/issues/104
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/116>

2020-04-28 23:33:49 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: Store the timeout source by pointer instead of id
	  That way we don't have to retrieve it again from the main context when
	  destroying it but can directly do so.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/115>

2020-04-28 23:16:18 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: Clean up watch/watch context and related state consistently
	  And assert that it was cleaned up properly before the client is
	  finalized. If something is still around when the client is shut down
	  then something went very wrong before.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/115>

2020-04-27 23:25:22 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	* tests/check/gst/rtspserver.c:
	  rtsp-client: Combine the pre-session and post-session timeout
	  They previously used the same state but different mechanisms and
	  functions, which was difficult to follow, error prone and simply
	  confusing.
	  Also adjust the test for the post-session timeout a bit to be less racy
	  now that the timing has slightly changed.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/115>

2020-04-27 19:47:15 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: Don't ever close the client connection directly when a session is torn down
	  There might be other sessions that are running over the same RTSP
	  connection and we should not simply close the client directly if one of
	  them is torn down.
	  By default the connection will be closed once the client closes it or
	  the OS does. This behaviour can be adjusted with the
	  post-session-timeout property, which allows to close it automatically
	  from the server side after all sessions are gone and the given timeout
	  is reached.
	  This reverts the previous commit.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/115>

2020-04-27 13:49:55 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: If the TEARDOWN response can be sent directly, directly close the client
	  Instead of closing it never at all. Previously there was only code that
	  closed the client asynchronously if sending the response happened
	  asynchrously at a later time.
	  Thanks to Christian M for debugging this issue.
	  Fixes https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/issues/102
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/merge_requests/114>

2020-03-23 14:51:28 +0100  Michael Olbrich <m.olbrich@pengutronix.de>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: use mcast_udpsink[0] last-sample if available for rtpinfo
	  Otherwise no sink is found for multicast sreams and the less accurate
	  fallback is used to determine the current sequence number and timestamp.

2020-03-23 16:06:43 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-auth.c:
	  rtsp-auth: Fix NULL pointer dereference when handling an invalid basic Authorization header
	  When using the basic authentication scheme, we wouldn't validate that
	  the authorization field of the credentials is not NULL and pass it on
	  to g_hash_table_lookup(). g_str_hash() however is not NULL-safe and will
	  dereference the NULL pointer and crash.
	  A specially crafted (read: invalid) RTSP header can cause this to
	  happen.
	  As a solution, check for the authorization to be not NULL before
	  continuing processing it and if it is simply fail authentication.
	  This fixes CVE-2020-6095 and TALOS-2020-1018.
	  Discovered by Peter Wang of Cisco ASIG.

2020-03-09 14:17:34 +0100  Göran Jönsson <goranjn@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: Use watch_context before unref
	  Move the usage of priv->watch_context to beginning of function
	  gst_rtsp_client_finalize. Instead of use it after
	  g_main_context_unref (priv->watch_context).

2020-02-14 14:59:43 +0100  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: fix deadlock on transport removal
	  We cannot take the RTSPStream lock while holding a transport backlog
	  lock, as remove_transport may be called externally, which will
	  take first the RTSPStream lock then the transport backlog lock.

2020-02-14 14:59:25 +0100  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-server-internal.h:
	* gst/rtsp-server/rtsp-stream-transport.c:
	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: clear backlog when removing transport
	  This ensures we don't end up calling any of transports' callbacks
	  with a potentially unreffed user_data (in practice, a client that
	  may have been removed)

2020-02-06 22:46:18 +0100  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: marshal calls to send_tcp_message to a single thread
	  In order to address the race condition pointed out at
	  https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/merge_requests/108#note_403579
	  we get rid of the send thread pool, and instead spawn and manage
	  a single thread to pull samples from app sinks and add them to
	  the transport's backlogs.
	  Additionally, we now also always go through the backlogs in order
	  to simplify the logic.

2020-02-05 20:28:19 +0100  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-server-internal.h:
	* gst/rtsp-server/rtsp-stream-transport.c:
	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: properly protect TCP backlog access
	  Fixes #97
	  We cannot hold stream->lock while pushing data, but need
	  to consistently check the state of the backlog both from
	  the send_tcp_message function and the on_message_sent function,
	  which may or may not be called from the same thread.
	  This commit introduces internal API to allow for potentially
	  recursive locking of transport streams, addressing a race
	  condition where the RTSP stream could push items out of order
	  when popping them from the backlog.

2020-02-22 00:41:32 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Sink pipeline in gst_rtsp_media_take_pipeline()
	  It's taken ownership of by the media, and returned with `transfer none`
	  from the GstRTSPMedia::create_pipeline() vfunc. If we don't sink it
	  first then any bindings will wrongly take ownership of the pipeline once
	  it arrives in bindings code.

2020-02-05 16:51:14 +0100  Bastian Bouchardon <bastian.bouchardon@gmail.com>

	* examples/test-onvif-client.c:
	  Add initialization for context and params (gchar *) Insert define (DEFAULT_*) into help to have to modify only the constants

2020-02-03 12:30:14 +0000  Marc Leeman <marc.leeman@gmail.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: fix default latency

2020-01-15 17:06:41 +0100  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: make closing more thread safe
	  + Take the watch lock prior to using priv->watch
	  + Flush both the watch and connection before closing / unreffing
	  gst_rtsp_connection_close() is not threadsafe on its own, this is
	  a workaround at the client level, where we control both the watch
	  and the connection

2020-01-23 16:41:26 +0200  Jordan Petridis <jordan@centricular.com>

	* gst/rtsp-server/rtsp-latency-bin.c:
	  rtsp-latency-bin: replace G_TYPE_INSTANCE_GET_PRIVATE as it's been deprecated
	  from glib
	  ```
	  Deprecated: 2.58: Use %G_ADD_PRIVATE and the generated
	  `your_type_get_instance_private()` function instead
	  ```

2019-12-17 16:08:19 +0100  Zoltán Imets <zoltani@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* tests/check/gst/rtspserver.c:
	  rtsp-client: add property post-session-timeout
	  This is a TCP connection timeout for client connections, in seconds.
	  If a positive value is set for this property, the client connection
	  will be kept alive for this amount of seconds after the last session
	  timeout. For negative values of this property the connection timeout
	  handling is delegated to the system (just as it was before).
	  Fixes #83

2020-01-11 22:58:48 +0100  Mark Nauwelaerts <mnauw@users.sourceforge.net>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: check for NULL transports prior to ref'ing

2020-01-09 14:10:44 +0100  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-server-internal.h:
	* gst/rtsp-server/rtsp-stream-transport.c:
	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: fix checking of TCP backpressure
	  The internal index of our appsinks, while it can be used to
	  determine whether a message is RTP or RTCP, is not necessarily
	  the same as the interleaved channel. Let the stream-transport
	  determine the channel to check backpressure for, the same way
	  it determines the channel according to whether it is sending
	  RTP or RTCP.

2019-12-10 19:16:51 -0500  Olivier Crête <olivier.crete@collabora.com>

	* gst/rtsp-server/rtsp-session.c:
	  rtsp-session: Butcher the file to please gst-indent in the CI
	  This should be reverted once the CI has an updated gst-indent.

2019-12-10 18:39:32 -0500  Olivier Crête <olivier.crete@collabora.com>

	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-session.h:
	* gst/rtsp-sink/gstrtspclientsink.c:
	* gst/rtsp-sink/gstrtspclientsink.h:
	  rtsp-session & client: Remove deprecated GTimeVal
	  GTimeVal won't work past 2038

2019-12-12 17:56:18 +0100  Nicola Murino <nicola.murino@gmail.com>

	* gst/rtsp-server/rtsp-auth.c:
	  rtsp-auth: fix default token leak

2019-12-09 14:17:05 +0100  Adam x Nilsson <adamni@axis.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	  gstrtspclientsink: unref transports when closing bin
	  Fixes #91

2019-12-06 10:44:35 +0100  Kristofer Bjorkstrom <kristofb@pc36402-1937.se.axis.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Force seek when flush flag is set
	  The commit "rtsp-client: define all seek accuracy flags from
	  setup_play_mode" changed the behaviour of when doing a seek.
	  Before that commit, having the flush flag set would result in a seek
	  (forced seek).
	  Even if no seek was needed. One reason to force seek is to flush old buffers
	  created in Describe requests.
	  Thus adding force seek also for flush flag will result in play request
	  with fresh buffers.

2019-11-21 17:12:45 +0100  Edward Hervey <edward@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: Revitalize dead code
	  Leftover from 65d9aa327cd1844934836249cd4463edf09c725d
	  CID: 1455379

2019-11-27 15:22:35 +0100  Edward Hervey <bilboed@bilboed.com>

	* gst/rtsp-server/rtsp-sdp.c:
	  rtsp-sdp: Don't try to use non-initialized values
	  Only attempt to use the various timing values iif gst_rtsp_stream_get_info()
	  returns TRUE. Also avoid the whole clock signalling block if we're not
	  dealing with senders.
	  CID: 1439524
	  CID: 1439536
	  CID: 1439520

2019-11-01 12:01:41 +0100  Adam x Nilsson <adamni@axis.com>

	* gst/rtsp-server/rtsp-stream-transport.c:
	* gst/rtsp-server/rtsp-stream.c:
	* tests/check/gst/stream.c:
	  rtsp-stream: Removing invalid transports returns false
	  When removing transports an assertion was that the transports passed in
	  for removal are present in the list, however that can't be assumed.
	  As an example if a transport was removed from a thread running
	  send_tcp_message, the main thread can try to remove the same transport
	  again if it gets a handle_pause_request. This will not effect the
	  transport list but it will effect n_tcp_transports as it will be
	  decrement and then have the wrong value.

2019-11-06 14:17:48 +0100  Zoltán Imets <zoltani@axis.com>

	* tests/check/gst/client.c:
	  client test: add scale and speed negative tests
	  Negative tests for scale and speed should be done as well, verify that
	  the response code is "400 Bad request" when a bad request is done.

2019-08-29 07:34:26 +0200  Niels De Graef <nielsdegraef@gmail.com>

	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-session-pool.c:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-sink/gstrtspclientsink.c:
	  Don't pass default GLib marshallers for signals
	  By passing NULL to `g_signal_new` instead of a marshaller, GLib will
	  actually internally optimize the signal (if the marshaller is available
	  in GLib itself) by also setting the valist marshaller. This makes the
	  signal emission a bit more performant than the regular marshalling,
	  which still needs to box into `GValue` and call libffi in case of a
	  generic marshaller.
	  Note that for custom marshallers, one would use
	  `g_signal_set_va_marshaller()` with the valist marshaller instead.

2019-09-05 19:51:06 -0400  Xavier Claessens <xavier.claessens@collabora.com>

	* gst/rtsp-server/rtsp-mount-points.c:
	  GstRTSPMountPoints: Remove any existing factory before adding a new one
	  The documentation of gst_rtsp_mount_points_add_factory() says "Any
	  previous mount point will be freed" which was true when it was
	  implemented using a GHashTable. But in 2012 it got rewrote using a
	  GSequence and since then it could have 2 factories for the same path.
	  Which one gets used is random, depending on the sorting order of 2
	  identical items.

2019-10-15 19:08:32 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-server-internal.h:
	* gst/rtsp-server/rtsp-stream-transport.c:
	* gst/rtsp-server/rtsp-stream-transport.h:
	* gst/rtsp-server/rtsp-stream.c:
	  stream: refactor TCP backpressure handling
	  The previous implementation stopped sending TCP messages to
	  all clients when a single one stopped consuming them, which
	  obviously created problems for shared media.
	  Instead, we now manage a backlog in stream-transport, and slow
	  clients are removed once this backlog exceeds a maximum duration,
	  currently hardcoded.
	  Fixes #80

2019-10-18 00:42:12 +0100  Tim-Philipp Müller <tim@centricular.com>

	* meson.build:
	  meson: build gir even when cross-compiling if introspection was enabled explicitly
	  This can be made to work in certain circumstances when
	  cross-compiling, so default to not building g-i stuff
	  when cross-compiling, but allow it if introspection was
	  enabled explicitly via -Dintrospection=enabled.
	  See gstreamer/gstreamer#454 and gstreamer/gstreamer#381.

2019-10-18 09:19:59 +0200  Göran Jönsson <goranjn@axis.com>

	* gst/rtsp-server/rtsp-session.c:
	  rtsp-session: clean up comment extra-timeout

2019-10-17 12:15:42 +0200  Muhammet Ilendemli <mi@tailored-apps.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: Generate correct URI for MIKEY in ANNOUNCE responses
	  Instead of hardcoding the URI, take the actual URI (and especially the correct port)
	  from the RTSP context.
	  Fixes #84

2019-10-16 13:20:54 +0000  Kristofer <kristofer.bjorkstrom@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  rtsp-client: Lock shared media
	  For shared media we got race conditions. Concurrently rtsp clients might
	  suspend or unsuspend the shared media and thus change the state without
	  the clients expecting that.
	  By introducing a lock that can be taken by callers such as rtsp_client
	  one can force rtsp clients calling, eg. PLAY, SETUP and that uses shared media,
	  to handle the media sequentially thus allowing one client to finish its
	  rtsp call before another client calls on the same media.
	  https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/issues/86
	  Fixes #86

2019-10-15 07:33:29 +0200  Göran Jönsson <goranjn@axis.com>

	* gst/rtsp-server/rtsp-session.c:
	  rtsp-session: add property extra-timeout
	  Extra time to add to the timeout, in seconds. This only
	  affects the time until a session is considered timed out
	  and is not signalled in the RTSP request responses.
	  Only the value of the timeout property is signalled in the
	  request responses.

2019-10-07 12:13:47 +0200  Adam x Nilsson <adamni@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream : fix race condition in send_tcp_message
	  If one thread is inside the send_tcp_message function and are done
	  sending rtp or rtcp messages so the n_outstanding variable is zero
	  however have not exit the loop sending the messages. While sending its
	  messages, transports have been added or removed to the transport list,
	  so the cache should be updated. If now an additional thread comes to
	  the function send_tcp_message and trying to send rtp messages it will
	  first destroy the rtp cache that is still being iterated trough by the
	  first thread.
	  Fixes #81

2019-05-24 14:32:50 +0200  Tim-Philipp Müller <tim@centricular.com>

	* .gitignore:
	* .gitmodules:
	* Makefile.am:
	* autogen.sh:
	* common:
	* configure.ac:
	* docs/.gitignore:
	* examples/.gitignore:
	* examples/Makefile.am:
	* gst/Makefile.am:
	* gst/rtsp-server/.gitignore:
	* gst/rtsp-server/Makefile.am:
	* gst/rtsp-sink/Makefile.am:
	* pkgconfig/.gitignore:
	* pkgconfig/Makefile.am:
	* tests/.gitignore:
	* tests/Makefile.am:
	* tests/check/Makefile.am:
	  Remove autotools build
	  Replaced by Meson.
	  Maybe we can now use the meson pkgconfig module
	  for .pc files? (Does it support uninstalled now?)

2019-10-07 10:27:36 +0200  Göran Jönsson <goranjn@axis.com>

	* tests/check/gst/client.c:
	  client: fix test mem leak in attach_rate_tweaking_probe

2019-10-07 10:14:52 +0200  Göran Jönsson <goranjn@axis.com>

	* tests/check/gst/media.c:
	  media: remove memleak in test test_media_seek

2019-10-07 10:07:54 +0200  Göran Jönsson <goranjn@axis.com>

	* tests/check/gst/rtspserver.c:
	  rtspserver: Remove memleak in test test_double_play

2019-09-17 13:45:57 +0200  Adam x Nilsson <adamni@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Use lock in gst_rtsp_media_is_receive_only

2018-10-29 17:02:41 +0100  David Svensson Fors <davidsf@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	* tests/check/gst/rtspserver.c:
	  rtsp-media: Unblock all streams
	  When unsuspending and going to PLAYING, unblock all streams instead of
	  only those that are linked (the linked streams are the ones for which
	  SETUP has been called). GST_FLOW_NOT_LINKED will be returned when
	  pushing buffers on unlinked streams.
	  This change is because playback using single-threaded demuxers like
	  matroska-demux could be blocked if SETUP was not called for all media.
	  Demuxers that use GstFlowCombiner (including gstoggdemux, gstavidemux,
	  gstflvdemux, qtdemux, and matroska-demux) will handle
	  GST_FLOW_NOT_LINKED automatically.
	  Fixes #39

2019-09-11 07:08:37 +0200  Göran Jönsson <goranjn@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	* tests/check/gst/rtspserver.c:
	  rtsp-media: Wait on async when needed.
	  Wait on asyn-done when needed in gst_rtsp_media_seek_trickmode.
	  In the unit test the pause from adjust_play_mode will cause a preroll
	  and after that async-done will be produced.
	  Without this patch there are no one consuming this async-done and when
	  later when seek fluch is done in gst_rtsp_media_seek_trickmode then it
	  wait for async-done. But then it wrongly find the async-done prodused by
	  adjus_play_mode and continue executing without waiting for the preroll
	  to finish.

2019-09-30 15:13:15 +0200  Kristofer Bjorkstrom <kristofb@pc36402-1937.se.axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: RTP Info when completed_sender
	  Change condition that should be fulfilled regarding RTPInfo.
	  Replace !gst_rtsp_media_is_receive_only with
	  gst_rtsp_media_has_completed_sender. It is more correct to actually look
	  for a sender pipeline that is complete. Only then a RTPInfo should
	  exist.
	  gst_rtsp_media_is_receive_only gives different answears depending on
	  state of server.
	  If Describe is called wth URL+options for backchannel SDP will give only
	  audio and only backchannel a=sendonly
	  If Describe is called on URL+options that gives both audio and video
	  direction from server to client, pipelines are created. Thus
	  receive_only will return false, even though Setup only would setup
	  backchannel.
	  RTP-Info is only for outgoing streams. Thus one should look if outgoing
	  streams are complete.

2019-09-25 09:14:08 +0000  Kristofer <kristofer.bjorkstrom@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* tests/check/gst/client.c:
	  rtsp-client: RTP Info exists conditionally in PLAY
	  If RTP Info is missing and it is not a receiver only, eg. audio
	  backchannel. Then return GST_RTSP_STS_INTERNAL_SERVER_ERROR.
	  In rfc2326 it says RTP-info is req. but in RFC7826 it is conditional.
	  Since 1.14 there is audio backchannel support. Thus RTP-info is
	  conditional now. When audio backchannel only mode, there is no RTP-info.
	  Fixes #82

2019-09-05 16:23:26 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* examples/test-onvif-client.c:
	  test-onvif-client: remove unused query

2019-08-30 14:00:52 +0200  Kristofer Björkström <kristofb@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: RTP Info must exist in PLAY response
	  If RTP Info is missing. Then return GST_RTSP_STS_INTERNAL_SERVER_ERROR
	  Fixes #76

2019-08-29 21:37:24 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* examples/test-onvif-client.c:
	  test-onvif-client: perform accurate seeks
	  See https://gitlab.freedesktop.org/gstreamer/gst-plugins-good/merge_requests/336
	  Also, modify how we compute the position: position queries in
	  PAUSED mode fail to account for the newly-prerolled frame, leading
	  to frame skips when performing seeks in that state. Instead,
	  compute the current position from the last sample.

2019-08-21 14:57:25 +0200  Göran Jönsson <goranjn@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* tests/check/gst/rtspserver.c:
	  Use complete streams for scale and speed.
	  Without this patch it's always stream0 that is used to get segment event
	  that is used to set scale and speed. This even if client not doing SETUP
	  for stream0. At least in suspend mode reset this not working since then
	  it's just random if send_rtp_sink have got any segment event. There are
	  no check if send_rtp_sink for stream0 got any data before media is
	  prerolled after PLAY request.

2019-08-26 22:24:12 +1000  Matthew Waters <matthew@centricular.com>

	* examples/test-onvif-server.c:
	* examples/test-onvif-server.h:
	  examples/onvif-server: fix werror build with clang
	  ../subprojects/gst-rtsp-server/examples/test-onvif-server.c:346:65: warning: implicit conversion from enumeration type 'const GstSegmentFlags' to different enumeration type 'GstSeekFlags' [-Wenum-conversion]
	  self->incoming_segment->format, self->incoming_segment->flags,
	  ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
	  ../subprojects/gst-rtsp-server/examples/test-onvif-server.c:53:1: warning: unused function 'REPLAY_IS_BIN' [-Wunused-function]
	  G_DECLARE_FINAL_TYPE (ReplayBin, replay_bin, REPLAY, BIN, GstBin);
	  ^
	  /usr/include/glib-2.0/gobject/gtype.h:1407:26: note: expanded from macro 'G_DECLARE_FINAL_TYPE'
	  static inline gboolean MODULE##_IS_##OBJ_NAME (gpointer ptr) {                                         \
	  ^
	  <scratch space>:77:1: note: expanded from here
	  REPLAY_IS_BIN
	  ^
	  ../subprojects/gst-rtsp-server/examples/test-onvif-server.c:525:1: warning: unused function 'ONVIF_FACTORY' [-Wunused-function]
	  G_DECLARE_FINAL_TYPE (OnvifFactory, onvif_factory, ONVIF, FACTORY,
	  ^
	  /usr/include/glib-2.0/gobject/gtype.h:1405:33: note: expanded from macro 'G_DECLARE_FINAL_TYPE'
	  static inline ModuleObjName * MODULE##_##OBJ_NAME (gpointer ptr) {                                     \
	  ^
	  <scratch space>:9:1: note: expanded from here
	  ONVIF_FACTORY
	  ^
	  ../subprojects/gst-rtsp-server/examples/test-onvif-server.c:525:1: warning: unused function 'ONVIF_IS_FACTORY' [-Wunused-function]
	  /usr/include/glib-2.0/gobject/gtype.h:1407:26: note: expanded from macro 'G_DECLARE_FINAL_TYPE'
	  static inline gboolean MODULE##_IS_##OBJ_NAME (gpointer ptr) {                                         \
	  ^
	  <scratch space>:12:1: note: expanded from here
	  ONVIF_IS_FACTORY
	  ^

2019-08-23 16:21:36 +1000  Matthew Waters <matthew@centricular.com>

	* docs/meson.build:
	  meson: Don't generate doc cache when no plugins are enabled
	  Fixes gst-build with -Dauto-features=disabled -Drtsp_server=enabled

2019-08-16 13:38:01 -0400  Xavier Claessens <xavier.claessens@collabora.com>

	* examples/test-onvif-client.c:
	  test-onvif-client: stdin is not defined in MSVC

2019-08-12 18:03:36 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: add missing Since tag

2019-08-08 15:52:53 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* examples/test-onvif-client.c:
	  test-onvif-client: STDIN_FILENO is not portable
	  If not defined, define it to _fileno(stdin) on Windows, 0
	  everywhere else

2019-08-07 21:04:33 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* examples/test-onvif-server.c:
	  test-onvif-server: downgrade logging

2019-07-27 05:14:49 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* examples/meson.build:
	* examples/test-onvif-client.c:
	* examples/test-onvif-server.c:
	  examples: add ONVIF client / server example

2019-07-27 05:14:28 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	  rtsp-client: define all seek accuracy flags from setup_play_mode
	  We then pass those to adjust_play_mode, which needs to operate
	  on the "final" seek flags, as previously the code in rtsp-media
	  was assuming that accuracy seek flags (accurate / key_unit) should
	  not be set if the flags passed to the seek method were already set.

2019-07-22 19:32:43 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media-factory-uri.c:
	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Try to get dynamic payloaders by name from their bin first
	  First try "pay", then "pay_%s" (where %s == pad name). And only then
	  fall back to the code that simply takes the first payloader that is
	  found.
	  The current code usually works (but is racy) because it will always take
	  the payloader that was last added (due to g_list_prepend() when adding
	  elements) in pad-added and that's usually the correct one. But if a new
	  payloader is added between pad-added and us trying to get it, we would
	  get the wrong payloader.

2019-07-17 15:51:08 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* tests/check/gst/client.c:
	  client test: expect any port in transport
	  setup_multicast_client sets a 5000-5010 range for the client
	  ports, it is incorrect to expect the transport to always use
	  5000-5001
	  Fixes #73

2019-07-15 17:06:42 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* tests/check/gst/onvif.c:
	  onvif tests: use g_cond_wait() correctly
	  g_cond_wait() has to be called in a loop until required conditions
	  are met
	  Fixes #71

2019-06-28 12:28:41 +0200  Göran Jönsson <goranjn@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Not wait on receiver streams when pre-rolling
	  Without this patch there are problem pre-rolling when using audio back
	  channel.
	  Without this patch a probe will be created for all streams including
	  the stream for audio backchannel. To pre-roll all this pads have to
	  receive data. Since the stream for audio backchannel is a receiver this
	  will never happen.
	  The solution is to never create any probes for streams that are for
	  incomming data and instead set them as blocking already from beginning.

2019-06-25 13:19:44 +0100  Tim-Philipp Müller <tim@centricular.com>

	* gst/rtsp-server/rtsp-onvif-media-factory.c:
	* gst/rtsp-server/rtsp-onvif-media.c:
	  onvif-media: fix "void function returning a value" compiler warning

2019-06-12 22:19:27 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: make sure streams are blocked when sending seek
	  The recent ONVIF work exposed a race condition when dealing with
	  multiple streams: one of the sinks may preroll before other streams
	  have started flushing. This led to the pipeline posting async-done
	  prematurely, when some streams were actually still in the middle
	  of performing a flushing seek. The newly-added code looks up a
	  sticky segment event on the first stream in order to respond to
	  the PLAY request with accurate Scale and Speed headers. In the
	  failure condition, the first stream was flushing, and thus had
	  no sticky segment event, leading to the PLAY request failing,
	  and in turn the test.

2019-06-07 10:51:19 +0200  Michael Bunk <bunk@iat.uni-leipzig.de>

	* docs/README:
	* gst/rtsp-server/rtsp-media-factory-uri.h:
	  Fix typos

2019-04-05 00:48:07 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-onvif-client.c:
	* gst/rtsp-server/rtsp-onvif-client.h:
	* gst/rtsp-server/rtsp-onvif-media-factory.c:
	* gst/rtsp-server/rtsp-onvif-media-factory.h:
	* gst/rtsp-server/rtsp-onvif-media.c:
	* gst/rtsp-server/rtsp-onvif-server.h:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	* tests/check/gst/media.c:
	* tests/check/gst/onvif.c:
	* tests/check/meson.build:
	  onvif: Implement and test the Streaming Specification
	  https://www.onvif.org/specs/stream/ONVIF-Streaming-Spec.pdf

2018-11-05 15:34:20 +0100  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  rtsp-client: add gst_rtsp_client_get_stream_transport()
	  This will be used in the onvif tests in order to validate the
	  data transmitted over TCP: for streaming to continue after a
	  data message has been provided to client->send_func, the client
	  is responsible for marking the message as sent on the relevant
	  stream transport.

2018-11-07 00:33:01 +0100  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: Scale implies TRICK_MODE

2018-11-07 00:32:29 +0100  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: compare booleans, not pointers to them

2018-11-13 21:28:45 +0100  Nikita Bobkov <NikitaDBobkov@gmail.com>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-stream.c:
	* tests/check/gst/media.c:
	  Reverse playback support
	  GStreamer plays segment from stop to start when doing reverse playback.
	  RTSP implies that media should be played from start of Range header to
	  its stop. Hence we swap start and stop times before passing them to
	  gst_element_seek.
	  Also make gst_rtsp_stream_query_stop always return value that can be
	  used as stop time of Range header.

2018-10-12 08:53:04 +0200  Branko Subasic <branko@subasic.net>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* tests/check/gst/client.c:
	  rtsp-client: add support for Scale and Speed header
	  Add support for the RTSP Scale and Speed headers by setting the rate in
	  the seek to (scale*speed). We then check the resulting segment for rate
	  and applied rate, and use them as values for the Speed and Scale headers
	  respectively.
	  https://bugzilla.gnome.org/show_bug.cgi?id=754575

2018-10-01 18:51:49 +0200  Branko Subasic <branko@subasic.net>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  rtsp-client: allow sub classes to adjust the seek
	  Adds a new virtual function, adjust_play_mode(), that allows
	  sub classes to adjust the seek done on the media. The sub class can
	  modify the values of the the seek flags and the rate.
	  https://bugzilla.gnome.org/show_bug.cgi?id=754575

2018-09-27 19:09:01 +0200  Branko Subasic <branko@subasic.net>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	* tests/check/gst/media.c:
	  rtsp-media: allow specifying rate when seeking
	  Add new function gst_rtsp_media_seek_full_with_rate() which allows the
	  caller to specify the rate for the seek. Also added functions in
	  rtsp-stream and rtsp-media for retreiving current rate and applied rate.
	  https://bugzilla.gnome.org/show_bug.cgi?id=754575

2019-06-02 21:39:33 +0200  Niels De Graef <niels.degraef@barco.com>

	* configure.ac:
	* meson.build:
	  meson: Bump minimal GLib version to 2.44
	  This means we can use some newer features and get rid of some
	  boilerplate code using the G_DECLARE_* macros.
	  As discussed on IRC, 2.44 is old enough by now to start depending on it.

2019-05-31 18:53:36 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* docs/libs/.gitignore:
	* docs/libs/Makefile.am:
	* docs/libs/gst-rtsp-server-docs.sgml:
	* docs/libs/gst-rtsp-server-sections.txt:
	* docs/libs/gst-rtsp-server.types:
	  docs: remove obsolete gtk-doc related files

2019-05-29 23:20:09 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	  doc: remove xml from comments

2019-05-16 09:23:53 -0400  Thibault Saunier <tsaunier@igalia.com>

	* docs/gst_plugins_cache.json:
	* docs/meson.build:
	  docs: Stop building the doc cache by default
	  And update the cache
	  Fixes https://gitlab.freedesktop.org/gstreamer/gst-docs/issues/36

2019-05-13 22:59:57 -0400  Thibault Saunier <tsaunier@igalia.com>

	* docs/gst_plugins_cache.json:
	  docs: Update plugins documentation cache

2019-04-23 12:30:02 -0400  Thibault Saunier <tsaunier@igalia.com>

	* docs/meson.build:
	* gst/rtsp-server/rtsp-context.c:
	* gst/rtsp-server/rtsp-session-pool.c:
	  doc: Fix some docstrings

2018-10-22 11:29:24 +0200  Thibault Saunier <tsaunier@igalia.com>

	* .gitignore:
	* Makefile.am:
	* configure.ac:
	* docs/Makefile.am:
	* docs/gst_plugins_cache.json:
	* docs/index.md:
	* docs/meson.build:
	* docs/plugin-index.md:
	* docs/plugin-sitemap.txt:
	* docs/sitemap.md:
	* docs/sitemap.txt:
	* docs/version.entities.in:
	* gst/rtsp-server/meson.build:
	* gst/rtsp-sink/meson.build:
	* meson.build:
	* meson_options.txt:
	  docs: Port to hotdoc

2019-04-23 15:09:34 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-client.h:
	  rtsp-server: Fix various Since markers

2019-04-23 15:01:32 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-sdp.c:
	* gst/rtsp-server/rtsp-session-media.c:
	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-server: Add various Since: 1.14 markers

2019-04-23 14:38:05 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-stream-transport.c:
	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-server: Add various missing Since: 1.16 markers

2019-04-15 20:54:24 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	  rtspclientsink: Set async-handling=false for the internal bins
	  Without this we can easily run into a race condition with async state changes:
	  - the pipeline is doing an async state change
	  - we set the internal bins to PLAYING but that's ignored because an
	  async state change is currently pending
	  - the async state change finishes but does not change the state of the
	  internal bins because of locked_state==TRUE
	  - the internal bins stay in PAUSED forever

2019-04-15 20:51:30 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	  rtspclientsink: Use write_messages() API to send buffer lists in one go
	  And to write messages with multiple memories also via writev().

2019-03-27 16:21:03 +0100  Kristofer Bjorkstrom <kristofb@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-server-object.h:
	* gst/rtsp-server/rtsp-server.c:
	  rtsp-client: Handle Content-Length limitation
	  Add functionality to limit the Content-Length.
	  API addition, Enhancement.
	  Define an appropriate request size limit and reject requests
	  exceeding the limit with response status 413 Request Entity Too Large
	  Related to !182

2019-04-19 10:40:29 +0100  Tim-Philipp Müller <tim@centricular.com>

	* RELEASE:
	* configure.ac:
	* meson.build:
	  Back to development

=== release 1.16.0 ===

2019-04-19 00:34:54 +0100  Tim-Philipp Müller <tim@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* configure.ac:
	* gst-rtsp-server.doap:
	* meson.build:
	  Release 1.16.0

2019-04-15 20:33:01 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	  rtspclientsink: Notify the stream transport about each written message
	  Otherwise it will never try to send us the next one: it tries to keep
	  exactly one message in-flight all the time.
	  In gst-rtsp-server this is done asynchronously via the GstRTSPWatch but
	  in the client sink we always write data out synchronously.

2019-04-02 08:05:03 +0200  Göran Jönsson <goranjn@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp_server: Free thread pool before clean transport cache
	  If not waiting for free thread pool before clean transport caches, there
	  can be a crash if a thread is executing in transport list loop in
	  function send_tcp_message.
	  Also add a check if priv->send_pool in on_message_sent to avoid that a
	  new thread is pushed during wait of free thread pool. This is possible
	  since when waiting for free thread pool mutex have to be unlocked.

=== release 1.15.90 ===

2019-04-11 00:35:55 +0100  Tim-Philipp Müller <tim@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* configure.ac:
	* gst-rtsp-server.doap:
	* meson.build:
	  Release 1.15.90

2019-04-10 10:32:53 +0200  Ulf Olsson <ulfo@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Add support for GCM (RFC 7714)
	  Follow-up to !198

2019-03-28 00:27:37 +0100  Erlend Eriksen <erlend_ne@hotmail.com>

	* gst/rtsp-server/rtsp-session-pool.c:
	  session pool: fix missing klass-> in klass->create_session

2019-03-23 19:16:17 +0000  Tim-Philipp Müller <tim@centricular.com>

	* meson.build:
	  g-i: pass --quiet to g-ir-scanner
	  This suppresses the annoying 'g-ir-scanner: link: cc ..' output
	  that we get even if everything works just fine.
	  We still get g-ir-scanner warnings and compiler warnings if
	  we pass this option.

2019-03-23 19:15:48 +0000  Tim-Philipp Müller <tim@centricular.com>

	* meson.build:
	  g-i: silence 'nested extern' compiler warnings when building scanner binary
	  We need a nested extern in our init section for the scanner binary
	  so we can call gst_init to make sure GStreamer types are initialised
	  (they are not all lazy init via get_type functions, but some are in
	  exported variables). There doesn't seem to be any other mechanism to
	  achieve this, so just remove that warning, it's not important at all.

2019-03-21 11:49:10 +0000  Tim-Philipp Müller <tim@centricular.com>

	* meson.build:
	  meson: pass -Wno-unused to compiler if gstreamer debug system is disabled

2019-03-14 07:37:26 +0100  Göran Jönsson <goranjn@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	* tests/check/gst/media.c:
	  rtsp-media: Handle set state when preparing.
	  Handle the situation when  a call to gst_rtsp_media_set_state is done
	  when media status is preparing.
	  Also add unit test for this scenario.
	  The unit test simulate on a media level when two clients share a (live)
	  media.
	  Both clients have done SETUP and got responses. Now client 1 is doing
	  play and client 2 is just closing the connection.
	  Then without patch there are a problem when
	  client1 is calling gst_rtsp_media_unsuspend in handle_play_request.
	  And client2 is doing closing connection we can end up in a call
	  to gst_rtsp_media_set_state when
	  priv->status == GST_RTSP_MEDIA_STATUS_PREPARING and all the logic for
	  shut down media is jumped over .
	  With this patch and this scenario we wait until
	  priv->status == GST_RTSP_MEDIA_STATUS_PREPARED and then continue to
	  execute after that and now we will execute the logic for
	  shut down media.

2019-03-04 09:13:30 +0000  Tim-Philipp Müller <tim@centricular.com>

	* NEWS:
	* RELEASE:
	* configure.ac:
	* meson.build:
	  Back to development

=== release 1.15.2 ===

2019-02-26 11:58:53 +0000  Tim-Philipp Müller <tim@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* configure.ac:
	* gst-rtsp-server.doap:
	* meson.build:
	  Release 1.15.2

2019-02-19 09:45:08 +0100  Göran Jönsson <goranjn@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	* tests/check/gst/client.c:
	  rtsp-media: Fix multicast use case with common media
	  Use case
	  client 1: SETUP
	  client 1: PLAY
	  client 2: SETUP
	  client 1: TEARDOWN
	  client 2: PLAY
	  client 2: TEARDOWN

2019-01-16 12:59:11 +0100  Göran Jönsson <goranjn@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  rtsp-server: remove recursive behavior
	  Introduce a threadpool to send rtp and rtcp to avoid recursive behavior.

2019-01-25 14:22:42 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: Only allow to set either a send_func or send_messages_func but not both
	  And route all messages through the send_func if no send_messages_func
	  was provided.
	  We otherwise break backwards compatibility.

2018-09-17 22:18:46 +0300  Sebastian Dröge <sebastian@centricular.com>

	* docs/libs/gst-rtsp-server-sections.txt:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-client: Add support for sending buffer lists directly
	  Fixes https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/issues/29

2018-06-27 12:17:07 +0200  Sebastian Dröge <sebastian@centricular.com>

	* docs/libs/gst-rtsp-server-sections.txt:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-stream-transport.c:
	* gst/rtsp-server/rtsp-stream-transport.h:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-sink/gstrtspclientsink.c:
	  rtsp-server: Add support for buffer lists
	  This adds new functions for passing buffer lists through the different
	  layers without breaking API/ABI, and enables the appsink to actually
	  provide buffer lists.
	  This should already reduce CPU usage and potentially context switches a
	  bit by passing a whole buffer list from the appsink instead of
	  individual buffers. As a next step it would be necessary to
	  a) Add support for a vector of data for the GstRTSPMessage body
	  b) Add support for sending multiple messages at once to the
	  GstRTSPWatch and let it be handled internally
	  c) Adding API to GOutputStream that works like writev()
	  Fixes https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/issues/29

2018-12-04 14:12:04 +0100  Benjamin Berg <bberg@redhat.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: Fix crash in close handler
	  The close handler could trigger a crash because it invalidated the
	  watch_context while still leaving a source attached to it which would be
	  cleaned up at a later point.

2019-01-29 14:42:35 +0100  Edward Hervey <edward@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Use cached address when allocating sockets
	  If an address/port was previously decided upon (ex: multicast in the
	  SDP), then use that instead of re-creating another one
	  Fixes https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/issues/57

2018-12-27 11:28:17 +0100  Lars Wiréen <larswi@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Fix race codition in finish_unprepare
	  The previous fix for race condition around finish_unprepare where the
	  function could be called twice assumed that the status wouldn't change
	  during execution of the function. This assumption is incorrect as the
	  state may change, for example if an error message arrives from the
	  pipeline bus.
	  Instead a flag keeping track on whether the finish_unprepare function
	  is currently executing is introduced and checked.
	  Fixes https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/issues/59

=== release 1.15.1 ===

2019-01-17 02:26:48 +0000  Tim-Philipp Müller <tim@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* configure.ac:
	* gst-rtsp-server.doap:
	* meson.build:
	  Release 1.15.1

2018-12-05 15:07:25 +0100  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  Add source elements to the pipeline before activation
	  In plug_src we changed the element state before adding it to
	  the owner container. This prevented the pipeline from intercepting
	  a GST_STREAM_STATUS_TYPE_CREATE message from the pad in order
	  to assign a custom task pool.
	  Fixes https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/issues/53

2018-12-05 17:24:59 -0300  Thibault Saunier <tsaunier@igalia.com>

	* common:
	  Automatic update of common submodule
	  From ed78bee to 59cb678

2018-11-20 19:12:09 +0100  Ingo Randolf <ingo.randolf@servus.at>

	* examples/test-appsrc.c:
	  examples: test-appsrc: fix coding style error

2018-11-20 11:07:48 +0100  Ingo Randolf <ingo.randolf@servus.at>

	* examples/test-appsrc.c:
	  examples: test-appsrc: fix buffer leak

2018-11-17 19:19:54 +0100  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Update priv->blocked when linked streams are unblocked.
	  Media is considered to be blocked when all streams that belong to
	  that media are blocked.
	  This patch solves the problem of inconsistent updates of
	  priv->blocked that are not synchronized with the media state.

2018-11-17 18:18:27 +0100  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Don't block streams before seeking
	  Before the seek operation is performed on media, it's required that
	  its pipeline is prepared <=> the pipeline is in the PAUSED state.
	  At this stage, all transport parts (transport sinks) have been successfully
	  added to the pipeline and there is no need for blocking the streams.

2018-11-17 16:11:53 +0100  Patricia Muscalu <patricia@axis.com>

	* tests/check/gst/rtspserver.c:
	  tests: rtspserver: Add shared media test case for TCP

2018-11-06 18:21:54 +0100  Linus Svensson <linussn@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Use seqnum-offset for rtpinfo
	  The sequence number in the rtpinfo is supposed to be the first RTP
	  sequence number. The "seqnum" property on a payloader is supposed to be
	  the number from the last processed RTP packet. The sequence number for
	  payloaders that inherit gstrtpbasepayload will not be correct in case of
	  buffer lists. In order to fix the seqnum property on the payloaders
	  gst-rtsp-server must get the sequence number for rtpinfo elsewhere and
	  "seqnum-offset" from the "stats" property contains the value of the
	  very first RTP packet in a stream. The server will, however, try to look
	  at the last simple in the sink element and only use properties on the
	  payloader in case there no sink elements yet, and by looking at the last
	  sample of the sink gives the server full control of which RTP packet it
	  looks at. If the payloader does not have the "stats" property, "seqnum"
	  is still used since "seqnum-offset" is only present in as part of
	  "stats" and this is still an issue not solved with this patch.
	  Needed for gst-plugins-base!17

2018-11-06 18:10:56 +0100  Linus Svensson <linussn@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Plug memory leak
	  Attaching a GSource to a context will increase the refcount. The idle
	  source will never be free'd since the initial reference is never
	  dropped.

2018-11-12 16:06:39 +0200  Jordan Petridis <jordan@centricular.com>

	* .gitlab-ci.yml:
	  Add Gitlab CI configuration
	  This commit adds a .gitlab-ci.yml file, which uses a feature
	  to fetch the config from a centralized repository. The intent is
	  to have all the gstreamer modules use the same configuration.
	  The configuration is currently hosted at the gst-ci repository
	  under the gitlab/ci_template.yml path.
	  Part of https://gitlab.freedesktop.org/gstreamer/gstreamer-project/issues/29

2018-11-05 05:56:35 +0000  Matthew Waters <matthew@centricular.com>

	* .gitmodules:
	* gst-rtsp-server.doap:
	  Update git locations to gitlab

2018-11-01 14:20:16 +0100  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/meson.build:
	  meson: add new onvif types

2018-11-01 12:49:51 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/meson.build:
	  Add ONVIF subclass headers to the installed headers in meson.build too

2018-11-01 11:29:01 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-server-object.h:
	* gst/rtsp-server/rtsp-server.h:
	  rtsp-server: Declare GstRTSPServer struct before anything else
	  It's needed by all kinds of other headers, including the ones that are
	  required for defining the GstRTSPServer struct itself and its API.

2018-11-01 10:23:02 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-onvif-client.h:
	* gst/rtsp-server/rtsp-onvif-media-factory.h:
	* gst/rtsp-server/rtsp-onvif-media.h:
	* gst/rtsp-server/rtsp-onvif-server.h:
	  Mark all ONVIF-specific subclasses as Since 1.14

2018-11-01 10:18:22 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/Makefile.am:
	* gst/rtsp-server/meson.build:
	* gst/rtsp-server/rtsp-context.h:
	* gst/rtsp-server/rtsp-onvif-server.c:
	* gst/rtsp-server/rtsp-onvif-server.h:
	* gst/rtsp-server/rtsp-server-object.h:
	* gst/rtsp-server/rtsp-server-prelude.h:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	* gst/rtsp-server/rtsp-session.h:
	  Include ONVIF types from single-include rtsp-server.h
	  ... by actually making it a single-include header and moving everything
	  related to the GstRTSPServer type to rtsp-server-object.h instead.
	  Otherwise there are too many circular includes.
	  https://bugzilla.gnome.org/show_bug.cgi?id=797361

2018-10-18 07:25:05 +0200  Göran Jönsson <goranjn@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-latency-bin.c:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  rtsp-stream: use idle source in on_message_sent
	  When the underlying layers are running on_message_sent, this sometimes
	  causes the underlying layer to send more data, which will cause the
	  underlying layer to run callback on_message_sent again. This can go on
	  and on.
	  To break this chain, we introduce an idle source that takes care of
	  sending data if there are more to send when running callback
	  https://bugzilla.gnome.org/show_bug.cgi?id=797289

2018-10-20 16:14:53 +0200  Edward Hervey <edward@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: Remove timeout GSource on cleanup
	  Avoids ending up with races where a timeout would still be around
	  *after* a client was gone. This could happen rather easily in
	  RTSP-over-HTTP mode on a local connection, where each RTSP message
	  would be sent as a different HTTP connection with the same tunnelid.
	  If not properly removed, that timeout would then try to free again
	  a client (and its contents).

2018-10-04 14:31:59 +0100  Tim-Philipp Müller <tim@centricular.com>

	* gst/rtsp-server/Makefile.am:
	  autotools: fix distcheck

2018-09-12 11:55:15 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/Makefile.am:
	* gst/rtsp-server/meson.build:
	* gst/rtsp-server/rtsp-latency-bin.c:
	* gst/rtsp-server/rtsp-latency-bin.h:
	* gst/rtsp-server/rtsp-onvif-media.c:
	  onvif: encapsulate onvif part into a bin
	  ...and thus do not let onvif affect pipelines latency
	  https://bugzilla.gnome.org/show_bug.cgi?id=797174

2018-09-27 19:57:13 +0200  Patricia Muscalu <patricia@dovakhiin.com>

	* tests/check/gst/client.c:
	  tests: client: Avoid bind() failures in tests
	  https://bugzilla.gnome.org/show_bug.cgi?id=797059

2018-09-06 16:17:33 +0200  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	* tests/check/gst/client.c:
	* tests/check/gst/mediafactory.c:
	  New property for socket binding to mcast addresses
	  By default the multicast sockets are bound to INADDR_ANY,
	  as it's not allowed to bind sockets to multicast addresses
	  in Windows. This default behaviour can be changed by setting
	  bind-mcast-address property on the media-factory object.
	  https://bugzilla.gnome.org/show_bug.cgi?id=797059

2018-09-24 09:36:21 +0100  Tim-Philipp Müller <tim@centricular.com>

	* configure.ac:
	* gst/rtsp-server/Makefile.am:
	* gst/rtsp-server/meson.build:
	* gst/rtsp-server/rtsp-address-pool.c:
	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-context.c:
	* gst/rtsp-server/rtsp-media-factory-uri.c:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-mount-points.c:
	* gst/rtsp-server/rtsp-params.c:
	* gst/rtsp-server/rtsp-permissions.c:
	* gst/rtsp-server/rtsp-sdp.c:
	* gst/rtsp-server/rtsp-server-prelude.h:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-session-media.c:
	* gst/rtsp-server/rtsp-session-pool.c:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-stream-transport.c:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-thread-pool.c:
	* gst/rtsp-server/rtsp-token.c:
	* meson.build:
	  libs: fix API export/import and 'inconsistent linkage' on MSVC
	  Export rtsp-server library API in headers when we're building the
	  library itself, otherwise import the API from the headers.
	  This fixes linker warnings on Windows when building with MSVC.
	  Fix up some missing config.h includes when building the lib which
	  is needed to get the export api define from config.h
	  https://bugzilla.gnome.org/show_bug.cgi?id=797185

2018-09-19 14:31:56 +0200  Edward Hervey <edward@centricular.com>

	* gst/rtsp-server/rtsp-media-factory.c:
	  rtsp-media-factory: Add missing break statements
	  This resulted in warnings/assertions whenever one accessed the
	  max-mcast-ttl property.
	  CID #1439515
	  CID #1439523

2018-09-19 12:21:30 +0100  Tim-Philipp Müller <tim@centricular.com>

	* meson.build:
	* meson_options.txt:
	  meson: add gobject-cast-checks, glib-asserts, glib-checks options

2018-09-19 12:17:57 +0100  Tim-Philipp Müller <tim@centricular.com>

	* gst/meson.build:
	* meson_options.txt:
	* tests/check/meson.build:
	  meson: add option to disable build of rtspclientsink plugin

2018-09-19 12:10:14 +0100  Tim-Philipp Müller <tim@centricular.com>

	* meson_options.txt:
	  meson: re-arrange options

2018-09-01 11:21:15 +0530  Nirbheek Chauhan <nirbheek@centricular.com>

	* meson.build:
	* meson_options.txt:
	* tests/check/meson.build:
	* tests/meson.build:
	  meson: Use feature option for tests option
	  This was somehow missed the last time around.

2018-08-31 14:42:15 +0530  Nirbheek Chauhan <nirbheek@centricular.com>

	* gst/rtsp-server/meson.build:
	* meson.build:
	  meson: Maintain macOS ABI through dylib versioning
	  Requires Meson 0.48, but the feature will be ignored on older versions
	  so it's safe to add it without bumping the requirement.
	  Documentation:
	  https://github.com/mesonbuild/meson/blob/master/docs/markdown/Reference-manual.md#shared_library

2018-08-31 17:20:47 +1000  Matthew Waters <matthew@centricular.com>

	* gst/rtsp-sink/meson.build:
	* meson.build:
	  meson: add pkg-config file for the rtspclientsink plugin

2018-08-17 09:54:27 +0200  David Svensson Fors <davidsf@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* tests/check/gst/client.c:
	  rtsp-client: Avoid reuse of channel numbers for interleaved
	  If a (strange) client would reuse interleaved channel numbers in
	  multiple SETUP requests, we should not accept them. The channel
	  numbers are used for looking up stream transports in the
	  priv->transports hash table, and transports disappear from the table
	  if channel numbers are reused.
	  RFC 7826 (RTSP 2.0), Section 18.54, clarifies that it is OK for the
	  server to change the channel numbers suggested by the client.
	  https://bugzilla.gnome.org/show_bug.cgi?id=796988

2018-08-17 09:54:27 +0200  David Svensson Fors <davidsf@axis.com>

	* tests/check/gst/client.c:
	  rtsp-client: Add unit test of SETUP for RTSP/RTP/TCP
	  Allow regex for matching transport header against expected pattern.
	  https://bugzilla.gnome.org/show_bug.cgi?id=796988

2018-08-15 18:57:27 +0530  Nirbheek Chauhan <nirbheek@centricular.com>

	* tests/check/meson.build:
	  meson: There is no gstreamer-plugins-good-1.0.pc
	  There is no installed version of that, only an uninstalled version.

2018-08-14 14:31:55 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	* tests/check/gst/stream.c:
	  Fix indentation again

2018-07-26 12:01:16 +0200  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	* tests/check/gst/client.c:
	* tests/check/gst/stream.c:
	  stream: Added a list of multicast client addresses
	  When media is shared, the same media stream can be sent
	  to multiple multicast groups. Currently, there is no API
	  to retrieve multicast addresses from the stream.
	  When calling gst_rtsp_stream_get_multicast_address() function,
	  only the first multicast address is returned.
	  With this patch, each multicast destination requested in SETUP
	  will be stored in an internal list (call to
	  gst_rtsp_stream_add_multicast_client_address()).
	  The list of multicast groups requested by the clients can be
	  retrieved by calling gst_rtsp_stream_get_multicast_client_addresses().
	  There still exist some problems with the current implementation
	  in the multicast case:
	  1) The receiving part is currently only configured with
	  regard to the first multicast client (see
	  https://bugzilla.gnome.org/show_bug.cgi?id=796917).
	  2) Secondly, of security reasons, some constraints should be
	  put on the requested multicast destinations (see
	  https://bugzilla.gnome.org/show_bug.cgi?id=796916).
	  Change-Id: I6b060746e472a0734cc2fd828ffe4ea2956733ea
	  https://bugzilla.gnome.org/show_bug.cgi?id=793441

2018-07-25 15:33:18 +0200  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	* tests/check/gst/client.c:
	  stream: Choose the maximum ttl value provided by multicast clients
	  The maximum ttl value provided so far by the multicast clients
	  will be chosen and reported in the response to the current
	  client request.
	  Change-Id: I5408646e3b5a0a224d907ae215bdea60c4f1905f
	  https://bugzilla.gnome.org/show_bug.cgi?id=793441

2018-02-23 14:34:32 +0100  Patricia Muscalu <patricia@dovakhiin.com>

	* gst/rtsp-server/rtsp-stream.c:
	* tests/check/gst/client.c:
	  rtsp-stream: Don't require address pool in the transport specific case
	  If "transport.client-settings" parameter is set to true, the client is
	  allowed to specify destination, ports and ttl.
	  There is no need for pre-configured address pool.
	  Change-Id: I6ae578fb5164d78e8ec1e2ee82dc4eaacd0912d1
	  https://bugzilla.gnome.org/show_bug.cgi?id=793441

2018-07-24 14:02:40 +0200  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* tests/check/gst/client.c:
	  client: Don't reserve multicast address in the client setting case
	  When two multicast clients request specific transport
	  configurations, and "transport.client-settings" parameter is
	  set to true, it's wrong to actually require that these two
	  clients request the same multicast group.
	  Removed test_client_multicast_invalid_transport_specific test
	  cases as they wrongly require that the requested destination
	  address is supposed to be present in the address pool, also in
	  the case when "transport.client-settings" parameter is set to true.
	  Change-Id: I4580182ef35996caf644686d6139f72ec599c9fa
	  https://bugzilla.gnome.org/show_bug.cgi?id=793441

2018-07-24 09:35:46 +0200  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	* tests/check/gst/mediafactory.c:
	  Add new API for setting/getting maximum multicast ttl value
	  Change-Id: I5ef4758188c14785e17fb8fbf42a3dc0cb054233
	  https://bugzilla.gnome.org/show_bug.cgi?id=793441

2018-07-31 21:17:41 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: avoid duplicating the first multicast client
	  In dcb4533fedae3ac62bc25a916eb95927b7d69aec , we made it so
	  clients were dynamically added and removed to the multicast
	  udp sinks, as such we should no longer add a first client in
	  set_multicast_socket_for_udpsink
	  https://bugzilla.gnome.org/show_bug.cgi?id=793441

2018-08-14 14:25:53 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  Revert "rtsp-stream: avoid duplicating the first multicast client"
	  This reverts commit 33570944401747f44d8ebfec535350651413fb92.
	  Commits where accidentially squashed together

2018-08-14 14:25:42 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	* tests/check/gst/client.c:
	* tests/check/gst/mediafactory.c:
	  Revert "Add new API for setting/getting maximum multicast ttl value"
	  This reverts commit 7f0ae77e400fb8a0462a76a5dd2e63e12c4a2e52.
	  Commits where accidentially squashed together

2018-08-14 14:25:37 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	* tests/check/gst/client.c:
	  Revert "rtsp-stream: Don't require address pool in the transport specific case"
	  This reverts commit a9db3e7f092cfeb5475e9aa24b1e91906c141d52.
	  Commits where accidentially squashed together

2018-08-14 14:25:14 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	* tests/check/gst/client.c:
	* tests/check/gst/stream.c:
	  Revert "stream: Choose the maximum ttl value provided by multicast clients"
	  This reverts commit 499e437e501215849d24cdaa157e0edf4de097d0.
	  Commits where accidentially squashed together

2018-08-14 14:10:56 +0300  Sebastian Dröge <sebastian@centricular.com>

	* examples/test-auth-digest.c:
	  examples: Fix indentation

2018-07-25 15:33:18 +0200  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	* tests/check/gst/client.c:
	* tests/check/gst/stream.c:
	  stream: Choose the maximum ttl value provided by multicast clients
	  The maximum ttl value provided so far by the multicast clients
	  will be chosen and reported in the response to the current
	  client request.
	  https://bugzilla.gnome.org/show_bug.cgi?id=793441

2018-02-23 14:34:32 +0100  Patricia Muscalu <patricia@dovakhiin.com>

	* gst/rtsp-server/rtsp-stream.c:
	* tests/check/gst/client.c:
	  rtsp-stream: Don't require address pool in the transport specific case
	  If "transport.client-settings" parameter is set to true, the client is
	  allowed to specify destination, ports and ttl.
	  There is no need for pre-configured address pool.
	  https://bugzilla.gnome.org/show_bug.cgi?id=793441

2018-07-24 09:35:46 +0200  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	* tests/check/gst/client.c:
	* tests/check/gst/mediafactory.c:
	  Add new API for setting/getting maximum multicast ttl value
	  https://bugzilla.gnome.org/show_bug.cgi?id=793441

2018-07-31 21:17:41 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: avoid duplicating the first multicast client
	  In dcb4533fedae3ac62bc25a916eb95927b7d69aec , we made it so
	  clients were dynamically added and removed to the multicast
	  udp sinks, as such we should no longer add a first client in
	  set_multicast_socket_for_udpsink
	  https://bugzilla.gnome.org/show_bug.cgi?id=793441

2018-08-06 15:33:04 -0400  Thibault Saunier <tsaunier@igalia.com>

	* gst/rtsp-server/Makefile.am:
	  rtsp-server: Add gstreamer-base gir dir in autotools

2018-07-25 19:54:55 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-client: always allocate both IPV4 and IPV6 sockets
	  multiudpsink does not support setting the socket* properties
	  after it has started, which meant that rtsp-server could no
	  longer serve on both IPV4 and IPV6 sockets since the patches
	  from https://bugzilla.gnome.org/show_bug.cgi?id=757488 were
	  merged.
	  When first connecting an IPV6 client then an IPV4 client,
	  multiudpsink fell back to using the IPV6 socket.
	  When first connecting an IPV4 client, then an IPV6 client,
	  multiudpsink errored out, released the IPV4 socket, then
	  crashed when trying to send a message on NULL nevertheless,
	  that is however a separate issue.
	  This could probably be fixed by handling the setting of
	  sockets in multiudpsink after it has started, that will
	  however be a much more significant effort.
	  For now, this commit simply partially reverts the behaviour
	  of rtsp-stream: it will continue to only create the udpsinks
	  when needed, as was the case since the patches were merged,
	  it will however when creating them, always allocate both
	  sockets and set them on the sink before it starts, as was
	  the case prior to the patches.
	  Transport configuration will only error out if the allocation
	  of UDP sockets fails for the actual client's family, this
	  also downgrades the GST_ERRORs in alloc_ports_one_family
	  to GST_WARNINGs, as failing to allocate is no longer
	  necessarily fatal.
	  https://bugzilla.gnome.org/show_bug.cgi?id=796875

2018-07-25 17:22:20 +0530  Nirbheek Chauhan <nirbheek@centricular.com>

	* meson.build:
	* meson_options.txt:
	  meson: Convert common options to feature options
	  These are necessary for gst-build to set options correctly. The
	  remaining automagic option is cgroup support in examples.
	  https://bugzilla.gnome.org/show_bug.cgi?id=795107

2018-07-23 18:03:51 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Slightly simplify locking

2018-06-28 11:22:21 +0200  David Svensson Fors <davidsf@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-stream-transport.c:
	* gst/rtsp-server/rtsp-stream-transport.h:
	* gst/rtsp-server/rtsp-stream.c:
	  Limit queued TCP data messages to one per stream
	  Before, the watch backlog size in GstRTSPClient was changed
	  dynamically between unlimited and a fixed size, trying to avoid both
	  unlimited memory usage and deadlocks while waiting for place in the
	  queue. (Some of the deadlocks were described in a long comment in
	  handle_request().)
	  In the previous commit, we changed to a fixed backlog size of 100.
	  This is possible, because we now handle RTP/RTCP data messages differently
	  from RTSP request/response messages.
	  The data messages are messages tunneled over TCP. We allow at most one
	  queued data message per stream in GstRTSPClient at a time, and
	  successfully sent data messages are acked by sending a "message-sent"
	  callback from the GstStreamTransport. Until that ack comes, the
	  GstRTSPStream does not call pull_sample() on its appsink, and
	  therefore the streaming thread in the pipeline will not be blocked
	  inside GstRTSPClient, waiting for a place in the queue.
	  pull_sample() is called when we have both an ack and a "new-sample"
	  signal from the appsink. Then, we know there is a buffer to write.
	  RTSP request/response messages are not acked in the same way as data
	  messages. The rest of the 100 places in the queue are used for
	  them. If the queue becomes full of request/response messages, we
	  return an error and close the connection to the client.
	  Change-Id: I275310bc90a219ceb2473c098261acc78be84c97

2018-06-28 11:22:13 +0200  David Svensson Fors <davidsf@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: Use fixed backlog size
	  Change to using a fixed backlog size WATCH_BACKLOG_SIZE.
	  Preparation for the next commit, which changes to a different way of
	  avoiding both deadlocks and unlimited memory usage with the watch
	  backlog.

2018-07-16 21:57:08 +0200  Carlos Rafael Giani <dv@pseudoterminal.org>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: unref clock (if set) when finalizing
	  https://bugzilla.gnome.org/show_bug.cgi?id=796814

2018-07-16 21:56:44 +0200  Carlos Rafael Giani <dv@pseudoterminal.org>

	* docs/libs/gst-rtsp-server-sections.txt:
	  rtsp-media: add gst_rtsp_media_*_set_clock to docs
	  https://bugzilla.gnome.org/show_bug.cgi?id=796814

2018-07-12 19:01:54 +0100  Tim-Philipp Müller <tim@centricular.com>

	* gst/rtsp-server/rtsp-media-factory.c:
	  media-factory: unref old clock when setting new clock
	  https://bugzilla.gnome.org/show_bug.cgi?id=796724

2018-06-29 15:20:57 -0700  Brendan Shanks <brendan.shanks@teradek.com>

	* gst/rtsp-server/rtsp-media-factory.c:
	  media-factory: unref clock in finalize
	  https://bugzilla.gnome.org/show_bug.cgi?id=796724

2018-07-12 18:57:21 +0100  Tim-Philipp Müller <tim@centricular.com>

	* gst/rtsp-server/rtsp-onvif-media.c:
	  rtsp-onvif-media: fix g-ir-scanner warnings

2018-07-10 23:56:23 +0100  Tim-Philipp Müller <tim@centricular.com>

	* .gitignore:
	  .gitignore: add another example binary

2018-07-10 23:55:20 +0100  Tim-Philipp Müller <tim@centricular.com>

	* examples/meson.build:
	  meson: add new test-appsrc2 example to meson build

2018-07-10 23:53:41 +0100  Tim-Philipp Müller <tim@centricular.com>

	* examples/Makefile.am:
	  examples: fix build of new test-appsrc2 example
	  Need to link against libgstapp-1.0.

2018-07-11 01:25:51 +1000  Jan Schmidt <jan@centricular.com>

	* examples/.gitignore:
	* examples/Makefile.am:
	* examples/test-appsrc2.c:
	  examples: Add test-appsrc2
	  Add an example of feeding both audio and video into an RTSP
	  pipeline via appsrc.

2016-01-08 18:12:14 -0500  Louis-Francis Ratté-Boulianne <lfrb@collabora.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: Strip transport parts as whitespaces could be around commas
	  https://bugzilla.gnome.org/show_bug.cgi?id=758428

2018-06-27 08:30:42 +0200  Göran Jönsson <goranjn@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: avoid pushing data on unlinked udpsrc pad during setup
	  Fix race when setting up source elements.
	  Since we set the source element(s) to PLAYING state before hooking
	  them up to the downstream funnel, it's possible for the source element
	  to receive packets before we actually get to linking it to the funnel,
	  in which case buffers would be pushed out on an unlinked pad, causing
	  it to error out and stop receiving more data.
	  We fix this by blocking the source's srcpad until we have linked it.
	  https://bugzilla.gnome.org/show_bug.cgi?id=796160

2018-03-21 10:56:51 +0100  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Fix mismatch between allowed and configured protocols
	  https://bugzilla.gnome.org/show_bug.cgi?id=796679

2017-02-01 09:44:50 +0100  Ulf Olsson <ulfo@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Emit a signal when the SRTP decoder is created
	  https://bugzilla.gnome.org/show_bug.cgi?id=778080

2018-03-13 11:10:35 +0100  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Don't require presence of sinks in _get_*_socket()
	  Transport specific sink elements are added to the pipeline
	  in PLAY request and sockets are already created in SETUP so
	  it's actually wrong to require the presence of sinks in
	  _get_*_socket() functions.
	  https://bugzilla.gnome.org/show_bug.cgi?id=793441

2018-02-14 10:41:02 +0100  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Update transport for multicast clients as well
	  If a multicast client requests different transport settings
	  than the existing one make sure that this new transport
	  configuruation is propagated to the multicast udp sink.
	  https://bugzilla.gnome.org/show_bug.cgi?id=793441

2018-02-13 11:04:36 +0100  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Set the multicast TTL parameter on multicast udp sinks
	  And not on unicast udp sinks
	  https://bugzilla.gnome.org/show_bug.cgi?id=793441

2018-06-24 12:44:26 +0200  Tim-Philipp Müller <tim@centricular.com>

	* gst/rtsp-server/rtsp-address-pool.c:
	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media-factory-uri.c:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-mount-points.c:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-session-media.c:
	* gst/rtsp-server/rtsp-session-pool.c:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-stream-transport.c:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-thread-pool.c:
	  Update for g_type_class_add_private() deprecation in recent GLib

2018-06-24 12:45:49 +0200  Tim-Philipp Müller <tim@centricular.com>

	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-sdp.c:
	* gst/rtsp-server/rtsp-stream.c:
	  Fix indentation

2018-06-22 23:17:08 +1000  Jan Schmidt <jan@centricular.com>

	* examples/Makefile.am:
	* examples/test-video-disconnect.c:
	  examples: Add test-video-disconnect example
	  Simple example which cuts off all clients 10 seconds
	  after the first one connects.

2018-06-20 04:37:11 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* docs/libs/gst-rtsp-server-sections.txt:
	* examples/test-auth-digest.c:
	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-auth.h:
	  rtsp-auth: Add support for parsing .htdigest files
	  Passwords are usually not stored in clear text, but instead
	  stored already hashed in a .htdigest file.
	  Add support for parsing such files, add API to allow setting
	  a custom realm in RTSPAuth, and update the digest example.
	  https://bugzilla.gnome.org/show_bug.cgi?id=796637

2018-06-19 14:53:02 +1000  Matthew Waters <matthew@centricular.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	* gst/rtsp-sink/gstrtspclientsink.h:
	  rtspclientsink: fix waiting for multiple streams
	  We were previously only ever waiting for a single stream to notify it's
	  blocked status through GstRTSPStreamBlocking.  Actually count streams to
	  wait for.
	  Fixes rtspclientsink sending SDP's without out some of the input
	  streams.
	  https://bugzilla.gnome.org/show_bug.cgi?id=796624

2018-06-20 04:30:04 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* docs/libs/gst-rtsp-server-sections.txt:
	  docs: add missing auth methods

2018-06-20 00:10:18 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: only create funnel if it didn't exist already.
	  This precented using multiple protocols for the same stream.
	  https://bugzilla.gnome.org/show_bug.cgi?id=796634

2018-06-20 01:35:47 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* examples/meson.build:
	  meson: build auth-digest example

2018-06-05 08:44:44 +0200  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-sdp.c:
	* gst/rtsp-server/rtsp-session-media.c:
	* gst/rtsp-server/rtsp-stream-transport.c:
	  Get payloader stats only for the sending streams
	  Get/set payloader properties only for streams that actually
	  contain a payloader element.
	  https://bugzilla.gnome.org/show_bug.cgi?id=796523

2018-05-18 14:53:49 +0200  Edward Hervey <edward@centricular.com>

	* gst/rtsp-server/Makefile.am:
	  Makefile: Don't hardcode libtool for g-i build
	  Similar to the other commits in core/base/bad

2018-05-08 14:13:31 +0200  Johan Bjäreholt <johanbj@axis.com>

	* gst/rtsp-server/rtsp-onvif-media-factory.h:
	  rtsp-onvif-media-factory: export gst_rtsp_onvif_media_factory_requires_backchannel
	  https://bugzilla.gnome.org/show_bug.cgi?id=796229

2018-05-09 04:09:02 +1000  Jan Schmidt <jan@centricular.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	  rtspclientsink: Don't deadlock in preroll on early close
	  If the connection is closed very early, the flushing
	  marker might not get set and rtspclientsink can get
	  deadlocked waiting for preroll forever.
	  https://bugzilla.gnome.org/show_bug.cgi?id=786961

2018-05-05 19:51:52 +0530  Nirbheek Chauhan <nirbheek@centricular.com>

	* meson.build:
	* meson_options.txt:
	  meson: Update option names to omit disable_ and with- prefixes
	  Also yield common options to the outer project (gst-build in our case)
	  so that they don't have to be set manually.

2018-04-25 11:00:32 +0100  Tim-Philipp Müller <tim@centricular.com>

	* meson.build:
	  meson: use -Wl,-Bsymbolic-functions where supported
	  Just like the autotools build.

2018-04-22 20:09:01 +0100  Tim-Philipp Müller <tim@centricular.com>

	* configure.ac:
	* tests/check/Makefile.am:
	  configure: check for -good and -bad plugins only in uninstalled setup
	  Avoids confusing configure messages looking or a -good .pc file
	  that doesn't exist.
	  Also use plugindir variables that common macros set while at it.
	  https://bugzilla.gnome.org/show_bug.cgi?id=795466

2018-04-17 11:03:11 +0200  Joakim Johansson <joakimj@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: Fix session timeout
	  When streaming data over TCP then is not the keep-alive
	  functionality working.
	  The reason is that the function do_send_data have changed
	  to boolean but the code is still checking the received result
	  from send_func with GST_RTSP_OK.
	  The result is that a successful send_func will always lead to
	  that do_send_data is returning false and the keep-alive will
	  not be updated.
	  https://bugzilla.gnome.org/show_bug.cgi?id=795321

2018-04-02 22:49:35 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* docs/libs/gst-rtsp-server-sections.txt:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-sdp.c:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	* gst/rtsp-sink/gstrtspclientsink.c:
	* gst/rtsp-sink/gstrtspclientsink.h:
	  Implement support for ULP Forward Error Correction
	  In this initial commit, interface is only exposed for RECORD,
	  further work will be needed in rtspsrc to support this for
	  PLAY.
	  https://bugzilla.gnome.org/show_bug.cgi?id=794911

2018-04-17 17:47:30 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-onvif-media.c:
	  Revert "rtsp-server: Switch around sendonly/recvonly attributes"
	  This reverts commit 3d275b1345b76151418e3f56ed014d9089ac1a57.
	  While RFC 3264 (SDP) says that sendonly/recvonly are from the point of view of
	  the requester, the actual RTSP RFCs (RFC 2326 / 7826) disagree and say
	  the opposite, just like the ONVIF standard.
	  Let's follow those RFCs as we're doing RTSP here, and add a property at
	  a later time if needed to switch to the SDP RFC behaviour.
	  https://bugzilla.gnome.org/show_bug.cgi?id=793964

2018-04-16 10:53:52 +0100  Tim-Philipp Müller <tim@centricular.com>

	* common:
	  Automatic update of common submodule
	  From 3fa2c9e to ed78bee

2018-04-04 10:06:06 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-stream.c:
	* tests/check/gst/rtspclientsink.c:
	  gst: Run everything through gst-indent again

2018-04-03 08:57:47 +0200  Branko Subasic <branko@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	* tests/check/gst/media.c:
	  rtsp-media: query the position on active streams if media is complete
	  If the media is complete, i.e. one or more streams have been configured
	  with sinks, then we want to query the position on those streams only.
	  A query on an incomplete stream may return a position that originates from
	  an earlier preroll.
	  https://bugzilla.gnome.org/show_bug.cgi?id=794964

2018-04-02 12:35:04 +0100  Tim-Philipp Müller <tim@centricular.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	  rtspclientsink: make sure not to use freed string
	  Set transport string to NULL after freeing it, so that
	  at worst we get a NULL pointer if constructing a new
	  transport string fails (which shouldn't really fail here).
	  Also check return value of that, just in case.
	  CID 1433768.

2018-03-30 23:34:01 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: do not free string passed to take_header

2018-03-30 23:10:10 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: do not take lock in request_aux_receiver
	  Added it right before pushing the previous commit, it is
	  incorrect and deadlocks because this function gets called
	  from the join_bin thread, which already holds the lock,
	  that's the reason why request_aux_sender didn't take the
	  lock either.

2018-03-29 22:49:26 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* docs/libs/gst-rtsp-server-sections.txt:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  rtsp-server: add API to enable retransmission requests
	  "do-retransmission" was previously set when rtx-time != 0,
	  which made no sense as do-retransmission is used to enable
	  the sending of retransmission requests, where as rtx-time
	  is used by the peer to enable storing of buffers in order
	  to respond to retransmission requests.
	  rtsp-media now also provides a callback for the
	  request-aux-receiver signal.
	  https://bugzilla.gnome.org/show_bug.cgi?id=794822

2018-03-29 16:18:42 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	  rtspclientsink: add rtx ssrc to mikey's crypto sessions
	  https://bugzilla.gnome.org/show_bug.cgi?id=794813

2018-03-29 16:15:45 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	  rtspclientsink: Handle the KeyMgmt header in ANNOUNCE response
	  This in order to be able to decrypt the RTCP backchannel
	  https://bugzilla.gnome.org/show_bug.cgi?id=794813

2018-03-29 16:12:26 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: Send KeyMgmt header in ANNOUNCE response
	  When sending back an encrypted RTCP back channel, it is useful
	  for the client to know the encryption key.
	  https://bugzilla.gnome.org/show_bug.cgi?id=794813

2018-03-29 16:06:31 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  rtsp-stream: extract handle_keymgmt from rtsp-client
	  rtspclientsink will also need to parse KeyMgmt headers
	  sent by the server to decrypt the RTCP backchannel stream
	  https://bugzilla.gnome.org/show_bug.cgi?id=794813

2018-03-29 02:51:02 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	* tests/check/gst/rtspclientsink.c:
	  rtspclientsink: Fix client ports for the RTCP backchannel
	  This was broken since the work for delayed transport creation
	  was merged: the creation of the transports string depends on
	  calling stream_get_server_port, which only starts returning
	  something meaningful after a call to stream_allocate_udp_sockets
	  has been made, this function expects a transport that we parse
	  from the transport string ...
	  Significant refactoring is in order, but does not look entirely
	  trivial, for now we put a band aid on and create a second transport
	  string after the stream has been completed, to pass it in
	  the request headers instead of the previous, incomplete one.
	  https://bugzilla.gnome.org/show_bug.cgi?id=794789

2018-02-15 13:26:16 +0100  Göran Jönsson <goranjn@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client:Error handling when equal http session cookie
	  There are some clients that are sending same session cookie on random
	  basis.
	  https://bugzilla.gnome.org/show_bug.cgi?id=753616

2018-03-20 16:21:37 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media-factory-uri.c:
	  rtsp-media-factory-uri: Fix compilation with latest GLib
	  rtsp-media-factory-uri.c: In function ‘rtsp_media_factory_uri_create_element’:
	  rtsp-media-factory-uri.c:621:17: error: assignment from incompatible pointer type [-Werror=incompatible-pointer-types]
	  data->factory = g_object_ref (factory);
	  ^

2018-03-20 10:21:36 +0000  Tim-Philipp Müller <tim@centricular.com>

	* NEWS:
	* RELEASE:
	* configure.ac:
	* meson.build:
	  Back to development

=== release 1.14.0 ===

2018-03-19 20:27:04 +0000  Tim-Philipp Müller <tim@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* configure.ac:
	* gst-rtsp-server.doap:
	* meson.build:
	  Release 1.14.0

=== release 1.13.91 ===

2018-03-13 19:28:33 +0000  Tim-Philipp Müller <tim@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* configure.ac:
	* gst-rtsp-server.doap:
	* meson.build:
	  Release 1.13.91

2018-03-13 13:30:41 +0000  Tim-Philipp Müller <tim@centricular.com>

	* gst/rtsp-server/Makefile.am:
	* gst/rtsp-server/meson.build:
	* gst/rtsp-server/rtsp-address-pool.h:
	* gst/rtsp-server/rtsp-auth.h:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-context.h:
	* gst/rtsp-server/rtsp-media-factory-uri.h:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-mount-points.h:
	* gst/rtsp-server/rtsp-onvif-client.h:
	* gst/rtsp-server/rtsp-onvif-media-factory.h:
	* gst/rtsp-server/rtsp-onvif-media.h:
	* gst/rtsp-server/rtsp-onvif-server.h:
	* gst/rtsp-server/rtsp-params.h:
	* gst/rtsp-server/rtsp-permissions.h:
	* gst/rtsp-server/rtsp-sdp.h:
	* gst/rtsp-server/rtsp-server-prelude.h:
	* gst/rtsp-server/rtsp-server.h:
	* gst/rtsp-server/rtsp-session-media.h:
	* gst/rtsp-server/rtsp-session-pool.h:
	* gst/rtsp-server/rtsp-session.h:
	* gst/rtsp-server/rtsp-stream-transport.h:
	* gst/rtsp-server/rtsp-stream.h:
	* gst/rtsp-server/rtsp-thread-pool.h:
	* gst/rtsp-server/rtsp-token.h:
	  rtsp-server: GST_EXPORT -> GST_RTSP_SERVER_API
	  We need different export decorators for the different libs.
	  For now no actual change though, just rename before the release,
	  and add prelude headers to define the new decorator to GST_EXPORT.

2018-03-07 12:20:05 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-onvif-media-factory.c:
	  rtsp-onvif-media-factory: Document that backchannel pipelines must end with async=false sinks
	  https://bugzilla.gnome.org/show_bug.cgi?id=794143

=== release 1.13.90 ===

2018-03-03 22:49:34 +0000  Tim-Philipp Müller <tim@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* configure.ac:
	* gst-rtsp-server.doap:
	* meson.build:
	  Release 1.13.90

2018-03-02 16:24:23 +0100  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-permissions.c:
	  permissions: add Since tags and example for new API

2018-03-02 01:36:23 +0100  Mathieu Duponchelle <mathieu@centricular.com>

	* docs/libs/gst-rtsp-server-sections.txt:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-permissions.c:
	* gst/rtsp-server/rtsp-permissions.h:
	* tests/check/gst/permissions.c:
	  permissions: more bindings-friendly API
	  https://bugzilla.gnome.org/show_bug.cgi?id=793975

2018-03-01 19:28:16 +0100  Mathieu Duponchelle <mathieu@centricular.com>

	* meson.build:
	  meson: enable more warnings

2018-02-28 21:12:43 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: Place netaddress meta on packets received via TCP
	  This allows us to later map signals from rtpbin/rtpsource back to the
	  corresponding stream transport, and allows to do keep-alive based on
	  RTCP packets in case of TCP media transport.
	  https://bugzilla.gnome.org/show_bug.cgi?id=789646

2018-02-27 20:34:49 +0100  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	  rtspclientsink: if OPEN failed, unqueue next command
	  As READY_TO_PAUSED can no longer return async, the RECORD
	  command will be queued before the OPEN command fails
	  (for example in case the server could not be connected),
	  and record then waits for ever.
	  https://bugzilla.gnome.org/show_bug.cgi?id=793896

2018-02-26 22:59:17 +0100  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	  rtspclientsink: fix retrieval of custom payloader caps
	  If a bin is passed as the custom payloader, the caps of
	  its factory will be empty, the correct way to obtain the caps
	  is to query its sinkpad.

2018-02-26 22:59:00 +0100  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	  rtspclientsink: fix extra unref of custom payloader

2018-02-26 22:57:39 +0100  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	  rspclientsink: fix recent code indentation

2018-02-26 20:27:57 +0100  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	  rtspclientsink: add missing get_type prototype

2018-02-24 03:52:15 +0100  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	  rtspclientsink: allow setting payloader as pad property
	  This was a FIXME  item, and can be quite useful, also
	  allowing to specify payloader properties from the command
	  line, which is always nice.
	  https://bugzilla.gnome.org/show_bug.cgi?id=793776

2018-02-26 14:16:54 +0100  Carlos Rafael Giani <dv@pseudoterminal.org>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Replace g_print() log line
	  https://bugzilla.gnome.org/show_bug.cgi?id=793838

2018-02-22 20:17:33 +0100  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	* tests/check/gst/rtspclientsink.c:
	  rtsp-media: fix RECORD getting stuck
	  The test_record case was working because async=false had
	  been added in https://bugzilla.gnome.org/show_bug.cgi?id=757488
	  but that was incorrect, as it should not be needed.
	  Removing async=false made the test fail as expected, this is
	  fixed by not trying to preroll when preparing the media for
	  RECORD, as start_prepare is called upon receiving ANNOUNCE,
	  and our peer will not start sending media until it has received
	  a response to that request, and sent and received a response
	  to RECORD as well, thus obviously preventing preroll.
	  https://bugzilla.gnome.org/show_bug.cgi?id=793738

2018-02-23 03:26:21 +0100  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-auth.c:
	  rtsp-auth: fix set_tls_authentication_mode annotation

2018-02-19 11:57:29 +0100  Víctor Manuel Jáquez Leal <vjaquez@igalia.com>

	* gst/rtsp-server/rtsp-onvif-media.c:
	  rtp-server: remove redefined variable
	  res is a boolean variable which is defined in the function scope and
	  redefined, with no reason, in the loop scope. This patch removes the
	  redefinition.
	  https://bugzilla.gnome.org/show_bug.cgi?id=793592

2018-02-05 11:49:07 +0100  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  stream: Add functions for checking if stream is receiver or sender
	  ...and replace all checks for RECORD in GstRTSPMedia which are really
	  for "sender-only". This way the code becomes more generic and introducing
	  support for onvif-backchannel later on will require no changes in
	  GstRTSPMedia.

2017-10-21 14:06:30 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-onvif-media-factory.c:
	* gst/rtsp-server/rtsp-onvif-media-factory.h:
	  onvif: Make requires_backchannel() public
	  ...in order to let subclasses building the onvif part of the pipeline
	  check whether backchannel shall be included or not.

2018-01-22 12:46:34 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-onvif-media.c:
	  rtsp-server: Switch around sendonly/recvonly attributes
	  They are wrong in the ONVIF streaming spec. The backchannel should be
	  recvonly and the normal media should be sendonly: direction is always
	  from the point of view of the SDP offerer (the server) according to
	  RFC 3264.

2017-09-25 19:41:05 +0300  Sebastian Dröge <sebastian@centricular.com>

	* docs/libs/gst-rtsp-server-docs.sgml:
	* docs/libs/gst-rtsp-server-sections.txt:
	* examples/.gitignore:
	* examples/Makefile.am:
	* examples/test-onvif-backchannel.c:
	* gst/rtsp-server/Makefile.am:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-onvif-client.c:
	* gst/rtsp-server/rtsp-onvif-client.h:
	* gst/rtsp-server/rtsp-onvif-media-factory.c:
	* gst/rtsp-server/rtsp-onvif-media-factory.h:
	* gst/rtsp-server/rtsp-onvif-media.c:
	* gst/rtsp-server/rtsp-onvif-media.h:
	* gst/rtsp-server/rtsp-onvif-server.c:
	* gst/rtsp-server/rtsp-onvif-server.h:
	* gst/rtsp-server/rtsp-sdp.c:
	* gst/rtsp-server/rtsp-sdp.h:
	  rtsp: Add support for ONVIF backchannel
	  This adds a new RTSP server, client, media-factory and media subclass
	  for handling the specifics of the backchannel. Ideally this later can be
	  extended with other ONVIF specific features.

2017-10-12 21:00:16 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Add support for sending+receiving medias
	  We need to add an appsrc/appsink in that case because otherwise the
	  media bin will be a sink and a source for rtpbin, causing a pipeline
	  loop.
	  https://bugzilla.gnome.org/show_bug.cgi?id=788950

2018-02-15 19:44:28 +0000  Tim-Philipp Müller <tim@centricular.com>

	* configure.ac:
	* meson.build:
	  Back to development

=== release 1.13.1 ===

2018-02-15 17:15:40 +0000  Tim-Philipp Müller <tim@centricular.com>

	* NEWS:
	* configure.ac:
	* gst-rtsp-server.doap:
	* meson.build:
	  Release 1.13.1

2018-02-14 17:11:19 +0100  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-session-pool.c:
	  session-pool: remove nullable return annotation
	  create_watch can only return NULL from the API guards, no
	  need for nullable.

2018-02-13 18:59:16 +0100  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media.c:
	  set_clock functions: Add nullable annotations

2018-02-10 00:07:25 +0100  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-mount-points.c:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-session-media.c:
	* gst/rtsp-server/rtsp-session-pool.c:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-stream-transport.c:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-thread-pool.c:
	  All around: add annotations and API guards

2018-02-12 19:12:35 +0100  Mathieu Duponchelle <mathieu@centricular.com>

	* tests/test-cleanup.c:
	  test-cleanup: bind any port
	  The meson test suite runs tests in parallel, trying to bind
	  a single port made the test fail.

2018-02-08 19:15:10 +0000  Tim-Philipp Müller <tim@centricular.com>

	* meson.build:
	  meson: make version numbers ints and fix int/string comparison
	  WARNING: Trying to compare values of different types (str, int).
	  The result of this is undefined and will become a hard error
	  in a future Meson release.

2018-02-06 18:00:33 +0100  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-context.c:
	  gst_rtsp_context_get_current: add (skip) annotation
	  The return value type is defined with G_DEFINE_POINTER_TYPE,
	  and gi emits the following warning:
	  Invalid non-constant return of bare structure or union; register as
	  boxed type or (skip)

2018-02-06 17:58:49 +0100  Mathieu Duponchelle <mathieu@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: add type annotations
	  gi doesn't seem to be able to figure out the type of the
	  signal parameters when defined with G_DEFINE_POINTER_TYPE

2018-02-04 12:24:09 +0100  Tim-Philipp Müller <tim@centricular.com>

	* configure.ac:
	  autotools: use -fno-strict-aliasing where supported
	  https://bugzilla.gnome.org/show_bug.cgi?id=769183

2018-01-30 20:35:21 +0000  Tim-Philipp Müller <tim@centricular.com>

	* meson.build:
	  meson: use -fno-strict-aliasing where supported
	  https://bugzilla.gnome.org/show_bug.cgi?id=769183

2018-01-25 12:09:03 +0000  Tim-Philipp Müller <tim@centricular.com>

	* gst/rtsp-server/rtsp-mount-points.c:
	  mount-points: bail out of loop again when matching mount points
	  Previous patch led to us iterating the entire sequence. Bail out
	  of the loop again if we have a match but are moving away from it.
	  https://bugzilla.gnome.org/show_bug.cgi?id=771555

2018-01-25 12:06:57 +0000  Tim-Philipp Müller <tim@centricular.com>

	* tests/check/gst/mountpoints.c:
	  tests: mountpoints: add more checks for mount point path matching
	  https://bugzilla.gnome.org/show_bug.cgi?id=771555

2016-09-16 20:41:19 +0000  Andrew Bott <andrew.bott@blackmoth.com>

	* gst/rtsp-server/rtsp-mount-points.c:
	  mount-points: fix matching of paths where there's also an entry with a common prefix
	  e.g. with the following mount points
	  /raw
	  /raw/snapshot
	  /raw/video
	  _match() would not match /raw/video and /raw/snapshot correctly.
	  https://bugzilla.gnome.org/show_bug.cgi?id=771555

2018-01-18 23:53:20 +0000  Tim-Philipp Müller <tim@centricular.com>

	* docs/libs/gst-rtsp-server-sections.txt:
	* gst/rtsp-server/rtsp-permissions.c:
	* gst/rtsp-server/rtsp-permissions.h:
	* tests/check/gst/permissions.c:
	  permissions: add some new API to make this usable from bindings
	  https://bugzilla.gnome.org/show_bug.cgi?id=787073

2018-01-18 11:32:32 +0000  Tim-Philipp Müller <tim@centricular.com>

	* gst/rtsp-server/rtsp-token.c:
	  rtsp-token: annotate constructors for bindings
	  This maps _new_empty() to _new(), which also makes RTSPToken()
	  work properly now. Since this API wasn't usable from bindings
	  before, this should hopefully be fine.
	  https://bugzilla.gnome.org/show_bug.cgi?id=787073

2018-01-18 11:07:45 +0000  Tim-Philipp Müller <tim@centricular.com>

	* docs/libs/gst-rtsp-server-sections.txt:
	* gst/rtsp-server/rtsp-token.c:
	* gst/rtsp-server/rtsp-token.h:
	* tests/check/gst/token.c:
	  rtsp-token: add some API to set fields from bindings
	  The existing functions are all vararg-based and as such
	  not usable from bindings.
	  https://bugzilla.gnome.org/show_bug.cgi?id=787073

2018-01-13 15:02:28 +0000  Tim-Philipp Müller <tim@centricular.com>

	* tests/check/gst/rtspclientsink.c:
	* tests/check/gst/rtspserver.c:
	* tests/check/gst/sessionpool.c:
	* tests/check/gst/stream.c:
	  tests: fix indentation
	  Fix and "fix".

2018-01-13 14:58:55 +0000  Tim-Philipp Müller <tim@centricular.com>

	* tests/check/gst/rtspserver.c:
	  tests: rtspserver: fix another ref leak
	  Even if this didn't show up in valgrind.

2018-01-13 14:58:00 +0000  Tim-Philipp Müller <tim@centricular.com>

	* tests/check/gst/rtspclientsink.c:
	  tests: rtspclientsink: fix leak

2018-01-02 14:19:31 +0100  Branko Subasic <branko@axis.com>

	* tests/check/gst/rtspserver.c:
	  test: rtspserver: plug memory leak in test_no_session_timeout
	  In test_no_session_timeout, unref the rtsp session object when the
	  test is done.
	  https://bugzilla.gnome.org/show_bug.cgi?id=792127

2017-12-20 14:17:02 +0100  Edward Hervey <edward@centricular.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	  rtpsclientsink: Initialize and clear newly added mutex and cond
	  While it *did* work, glib would automatically create new mutex and cond
	  ... which never got freed

2017-12-19 11:34:37 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Set multicast TTL on the multicast sockets
	  And not if we do unicast UDP.
	  https://bugzilla.gnome.org/show_bug.cgi?id=791743

2017-12-19 11:14:48 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Decide based on the sockets, not the addresses if we already allocated a socket
	  In the multicast case (as in test-multicast, not test-multicast2), the
	  address could be allocated/reserved (and thus set) already without
	  allocating the actual socket. We need to allocate the socket here still
	  instead of just claiming that it was already allocated.
	  See https://bugzilla.gnome.org/show_bug.cgi?id=791743#c2

2017-12-16 21:46:53 +0100  Patricia Muscalu <patricia@dovakhiin.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	* gst/rtsp-sink/gstrtspclientsink.h:
	  rtspclientsink: Use the new rtsp-stream API
	  https://bugzilla.gnome.org/show_bug.cgi?id=790412

2017-12-16 21:01:43 +0100  Patricia Muscalu <patricia@dovakhiin.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	* gst/rtsp-sink/gstrtspclientsink.h:
	  rtspclientsink: Wait until OPEN has been scheduled
	  Make sure that the sink thread has started opening connection
	  to the server before continuing.
	  https://bugzilla.gnome.org/show_bug.cgi?id=790412

2017-12-14 14:53:35 +1100  Matthew Waters <matthew@centricular.com>

	* common:
	  Automatic update of common submodule
	  From e8c7a71 to 3fa2c9e

2017-12-07 16:08:29 +0100  Edward Hervey <edward@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-session-media.c:
	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-server: Minor doc fixes
	  Mostly for g-i

2017-12-06 20:47:22 +0000  Tim-Philipp Müller <tim@centricular.com>

	* Makefile.am:
	* tests/Makefile.am:
	  tests: disable all tests when --disable-tests is used
	  Move conditional subdir include into top level.
	  Based on patch by: Joel Holdsworth
	  https://bugzilla.gnome.org/show_bug.cgi?id=757703

2017-12-06 20:42:39 +0000  Tim-Philipp Müller <tim@centricular.com>

	* meson.build:
	* meson_options.txt:
	* tests/meson.build:
	  meson: build more tests and add options to disable tests and examples

2017-11-26 13:26:39 -0300  Thibault Saunier <tsaunier@gnome.org>

	* gst/rtsp-server/rtsp-session.c:
	  Fix build when -Werror=deprecated-declarations is on
	  As gst_rtsp_session_next_timeout is deprecated.
	  ```
	  ../subprojects/gst-rtsp-server/gst/rtsp-server/rtsp-session.c:760:3: error: ‘gst_rtsp_session_next_timeout’ is deprecated: Use 'gst_rtsp_session_next_timeout_usec' instead [-Werror=deprecated-declarations]
	  res = (gst_rtsp_session_next_timeout (session, now) == 0);
	  ^~~
	  ../subprojects/gst-rtsp-server/gst/rtsp-server/rtsp-session.c:685:1: note: declared here
	  gst_rtsp_session_next_timeout (GstRTSPSession * session, GTimeVal * now)
	  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	  ```

2017-11-27 20:18:24 +1100  Matthew Waters <matthew@centricular.com>

	* common:
	  Automatic update of common submodule
	  From 3f4aa96 to e8c7a71

2017-11-25 20:34:16 +0100  Patricia Muscalu <patricia@dovakhiin.com>

	* tests/check/gst/media.c:
	  check/media: Add seekability test case: not all streams are active
	  Media contains two streams but only one is complete and prepared
	  for playing.
	  https://bugzilla.gnome.org/show_bug.cgi?id=790674

2017-11-25 20:32:02 +0100  Patricia Muscalu <patricia@dovakhiin.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Do not reset 'blocking' if stream is already blocked
	  https://bugzilla.gnome.org/show_bug.cgi?id=790674

2017-11-25 20:45:44 +0100  Patricia Muscalu <patricia@dovakhiin.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Fix missing lock in gst_rtsp_media_seekable()
	  https://bugzilla.gnome.org/show_bug.cgi?id=790674

2017-11-26 16:29:49 +0000  Tim-Philipp Müller <tim@centricular.com>

	* meson.build:
	  meson: remove vs_module_defs_dir variable which is no longer needed

2017-11-26 14:46:05 +0000  Tim-Philipp Müller <tim@centricular.com>

	* gst/rtsp-server/rtsp-session.h:
	  rtsp: fix distcheck

2017-11-26 12:53:42 +0000  Tim-Philipp Müller <tim@centricular.com>

	* Makefile.am:
	* gst/rtsp-server/meson.build:
	* win32/MANIFEST:
	* win32/common/libgstrtspserver.def:
	  win32: remove .def file with exports
	  They're no longer needed, symbol exporting is now explicit
	  via GST_EXPORT in all cases (autotools, meson, incl. MSVC).

2017-11-26 12:28:40 +0000  Tim-Philipp Müller <tim@centricular.com>

	* configure.ac:
	  autotools: stop controlling symbol visibility with -export-symbols-regex
	  Instead, use -fvisibility=hidden and explicit exports via GST_EXPORT.
	  This should result in consistent behaviour for the autotools and
	  Meson builds.

2017-11-26 12:47:08 +0000  Tim-Philipp Müller <tim@centricular.com>

	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-server.h:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-session.h:
	  rtsp-server: add missing GST_EXPORT and export deprecated funcs

2017-11-25 07:53:30 +0100  Edward Hervey <edward@centricular.com>

	* tests/check/gst/media.c:
	  check: Add seekability testing on medias
	  Make sure that once GstRTSPMedia are prepared they returned
	  the expected seekability results
	  https://bugzilla.gnome.org/show_bug.cgi?id=790674

2017-11-24 17:34:31 +0100  Edward Hervey <edward@centricular.com>

	* docs/libs/gst-rtsp-server-sections.txt:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	* win32/common/libgstrtspserver.def:
	  rtsp-media: Enable seeking query before pipeline is complete
	  SDP are now provided *before* the pipeline is fully complete. In order
	  to know whether a media is seekable or not therefore requires asking
	  the invididual streams.
	  API: gst_rtsp_stream_seekable
	  https://bugzilla.gnome.org/show_bug.cgi?id=790674

2017-11-23 20:34:03 +0100  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Fix handling in default_unsuspend()
	  Handle the case when streams are not blocked and media
	  is suspended from PAUSED.
	  Change-Id: I2f3d222ea7b9b20a0732ea5dc81a32d17ab75040
	  https://bugzilla.gnome.org/show_bug.cgi?id=790674

2017-11-23 18:51:21 +0100  Patricia Muscalu <patricia@axis.com>

	* tests/check/gst/media.c:
	  check/media: Fix thread pool leak.
	  Change-Id: I0f92b1caca0ee518ae64a7dacfbd28a214c3eea1
	  https://bugzilla.gnome.org/show_bug.cgi?id=790674

2017-11-23 18:39:44 +0100  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Removed fakesink elements
	  There is not need of adding fakesink elements to the media
	  pipeline in the dynamic-payloader case.
	  The media pipeline itself is dynamically updated with
	  the receiver and sender parts that are based on the client
	  transport information known after SETUP has been received.
	  Change-Id: I4e88c9b500c04030669822f0d03b1842913f6cb9
	  https://bugzilla.gnome.org/show_bug.cgi?id=790674

2017-11-23 09:10:54 +0100  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Corrected ASYNC_DONE handling
	  Media is complete when all the transport based parts are
	  added to the media pipeline. At this point ASYNC_DONE is
	  posted by the media pipeline and media is ready to enter
	  the PREPARED state.
	  Change-Id: I50fb8dfed88ebaf057d9a35fca2d7f0a70e9d1fa
	  https://bugzilla.gnome.org/show_bug.cgi?id=790674

2017-11-22 12:24:38 +0100  Edward Hervey <bilboed@bilboed.com>

	* tests/check/gst/media.c:
	  check/media: Check that prepared media can provide a SDP
	  Whenever a RTSPMedia is prepared, it should be able to provide a SDP

2017-11-21 09:53:19 +0100  Edward Hervey <edward@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: Don't leak addr
	  CID #1422260

2017-11-21 09:53:08 +0100  Edward Hervey <bilboed@bilboed.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-session-media.c:
	* gst/rtsp-server/rtsp-stream.c:
	  Run gst-indent

2017-11-20 18:30:19 +0100  Edward Hervey <bilboed@bilboed.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Don't unblock with remaining dynamic payloaders
	  If we still have some dynamic paylaoders which haven't posted
	  no-more-pads yet, don't go to PREPARED if one of the streams
	  blocked.
	  The risk was that we would end up not exposing/using all specified
	  streams.
	  The downside is that if you have _multiple_ _live_ _dynamic_ payloaders
	  then it will take a bit more time to start. But only if those 3
	  conditions are present.
	  https://bugzilla.gnome.org/show_bug.cgi?id=769521

2017-11-20 16:49:29 +0100  Edward Hervey <edward@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Fix doc

2017-11-20 16:48:55 +0100  Edward Hervey <edward@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Don't set float on a gint64 variable
	  Just use 0. Fixes 'undefined' behaviour from clang

2017-11-20 18:29:02 +0100  Edward Hervey <edward@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Fix previous commit
	  We only want to count dynamic payloaders

2017-11-20 09:32:07 +0100  Edward Hervey <edward@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	* tests/check/gst/media.c:
	  rtsp-media: Handle multiple dynamic elements
	  If we have more than one dynamic payloader in the pipeline, we need
	  to wait until the *last* one emits 'no-more-pads' before switching
	  to PREPARED.
	  Failure to do so would result in a race where some of the streams
	  wouldn't properly be prepared
	  https://bugzilla.gnome.org/show_bug.cgi?id=769521

2017-11-16 12:18:20 +0200  Sebastian Dröge <sebastian@centricular.com>

	* win32/common/libgstrtspserver.def:
	  win32: Fix exported symbols list

2017-11-15 19:52:29 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Only update the RTP udpsink if it actually exists
	  For send-only streams it does not exist, but the RTCP udpsink might.

2017-11-15 18:15:53 +0200  Sebastian Dröge <sebastian@centricular.com>

	* win32/common/libgstrtspserver.def:
	  win32: Update exports

2017-10-23 09:49:09 +0200  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  rtsp-media: seek on media pipelines that are complete
	  Make sure that a seek is performed on pipelines that
	  contain at least one sink element.
	  Change-Id: Icf398e10add3191d104b1289de612412da326819
	  https://bugzilla.gnome.org/show_bug.cgi?id=788340

2017-10-17 10:44:33 +0200  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	* tests/check/gst/client.c:
	* tests/check/gst/media.c:
	* tests/check/gst/rtspserver.c:
	* tests/check/gst/stream.c:
	  Dynamically reconfigure pipeline in PLAY based on transports
	  The initial pipeline does not contain specific transport
	  elements. The receiver and the sender parts are added
	  after PLAY.
	  If the media is shared, the streams are dynamically
	  reconfigured after each PLAY.
	  https://bugzilla.gnome.org/show_bug.cgi?id=788340

2017-10-16 12:40:57 +0200  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: obtain stream position from pad
	  If no sinks have been added yet, obtain the current and
	  the stop position of the stream from the send_src pad.
	  Change-Id: Iacd4ab4bdc69f6b49370d06012880ce48a7d595a
	  https://bugzilla.gnome.org/show_bug.cgi?id=788340

2017-10-16 11:35:10 +0200  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-session-media.c:
	* gst/rtsp-server/rtsp-session-media.h:
	  rtsp-session-media: add function to get a list of transports
	  Change-Id: I817e10624da0f3200f24d1b232cff481099278e3
	  https://bugzilla.gnome.org/show_bug.cgi?id=788340

2017-10-16 11:15:55 +0200  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  rtsp-stream: add functions to get rtp and rtcp multicast sockets
	  Change-Id: Iddfe6e0bd250cb0159096d5eba9e4202d22b56db
	  https://bugzilla.gnome.org/show_bug.cgi?id=788340

2017-10-20 12:21:48 +0200  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: set async=sync=false only for RTCP appsink
	  Change-Id: I929a218a9adf4759f61322b6f2063aacc5595f90
	  https://bugzilla.gnome.org/show_bug.cgi?id=788340

2017-10-16 10:10:17 +0200  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: return minimum value in query position case
	  The minimum position should be returned as we are interested
	  in the whole interval.
	  Change-Id: I30e297fc040c995ae40c25dee8ff56321612fe2b
	  https://bugzilla.gnome.org/show_bug.cgi?id=788340

2017-08-09 11:52:38 +0200  Jonathan Karlsson <jonakn@axis.com>

	* gst/rtsp-server/rtsp-session.c:
	* tests/check/gst/rtspserver.c:
	  rtsp-session: Handle the case when timeout=0
	  According to the documentation, a timeout of value 0 means
	  that the session never timeouts. This adds handling of that.
	  If timeout=0 we just return with a -1 from
	  gst_rtsp_session_next_timeout_usec ().
	  https://bugzilla.gnome.org/show_bug.cgi?id=785058

2017-07-17 17:15:22 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	  rtspclientsink: Add "accept-certificate" signal for manually checking a TLS certificate for validity
	  https://bugzilla.gnome.org/show_bug.cgi?id=785024

2017-10-26 14:43:19 +0200  Mathieu Duponchelle <mathieu@centricular.com>

	* docs/libs/gst-rtsp-server-sections.txt:
	* gst/rtsp-server/rtsp-media-factory.c:
	  docs: add media factory transport mode accessors
	  and fix the documentation for the return value of the getter

2017-10-09 12:43:01 +0200  Branko Subasic <branko@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: unref 'pipelined_requests' in finalize
	  The hash table priv->pipelined_requests is not unref:ed in the
	  finalize funktion. Make sure it is.
	  https://bugzilla.gnome.org/show_bug.cgi?id=788704

2017-10-09 14:44:40 +0200  Thibault Saunier <thibault.saunier@osg.samsung.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Initialize scalar variable
	  CID 1418985

2017-10-06 10:27:34 +0200  Edward Hervey <edward@centricular.com>

	* win32/common/libgstrtspserver.def:
	  win32: Update export file

2017-04-22 09:26:07 -0300  Thibault Saunier <thibault.saunier@osg.samsung.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  Start support for RTSP 2.0
	  This adds basic support for new 2.0 features, though the protocol is
	  subposdely backward incompatible, most semantics are the sames.
	  This commit adds:
	  - features:
	  * version negotiation
	  * pipelined requests support
	  * Media-Properties support
	  * Accept-Ranges support
	  - APIs:
	  * gst_rtsp_media_seekable
	  The RTSP methods that have been removed when using 2.0 now return
	  BAD_REQUEST.
	  https://bugzilla.gnome.org/show_bug.cgi?id=781446

2017-06-02 15:37:54 -0400  Thibault Saunier <thibault.saunier@osg.samsung.com>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: Use stream duration as stream-stop if segment was not configured with a stop
	  Allowing client to know stream duration when no seeking happened.
	  https://bugzilla.gnome.org/show_bug.cgi?id=783435

2017-09-25 19:40:17 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media-factory.c:
	  rtsp-media-factory: Don't cache any media if NULL was returned as key
	  The docs already mentioned this, but we actually stored it in the hash
	  table with key==NULL and leaked its reference forever.

2017-09-18 19:31:31 +0200  Mathieu Duponchelle <mathieu.duponchelle@opencreed.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	* gst/rtsp-sink/gstrtspclientsink.h:
	  rtspclientsink: Use a mutex for protecting against concurrent send/receives
	  This is a simple port of:
	  * a722f6e8329032c6eda4865d6a07f4ba5981d7ea
	  * c438545dc9e2f14f657bc0ef261fff726449867b
	  * cd17c71dcea5c9310d21f1347c7520983e5869ac
	  in gst-plugins-good.

2017-08-31 13:24:15 +0530  Satya Prakash Gupta <sp.gupta@samsung.com>

	* gst/rtsp-server/rtsp-sdp.c:
	  sdp: fix Memory leak in error case
	  https://bugzilla.gnome.org/show_bug.cgi?id=787059

2017-08-18 17:37:01 +0100  Tim-Philipp Müller <tim@centricular.com>

	* pkgconfig/meson.build:
	  meson: don't install -uninstalled.pc file
	  https://bugzilla.gnome.org/show_bug.cgi?id=786457

2017-08-17 12:26:17 +0100  Tim-Philipp Müller <tim@centricular.com>

	* common:
	  Automatic update of common submodule
	  From 48a5d85 to 3f4aa96

2017-08-14 21:04:23 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: Fix typo in debug message

2017-08-11 14:14:32 +0100  Tim-Philipp Müller <tim@centricular.com>

	* meson.build:
	  meson: hide symbols by default unless explicitly exported

2017-08-10 14:20:12 +0100  Tim-Philipp Müller <tim@centricular.com>

	* pkgconfig/gstreamer-rtsp-server-uninstalled.pc.in:
	  pkgconfig: remove -I@srcdir@/.. which duplicates abs_top_srcdir
	  Fixes meson warning about undefined @srcdir@.

2017-07-21 13:36:00 +0100  Tim-Philipp Müller <tim@centricular.com>

	* tests/meson.build:
	  meson: skip tests on windows for now
	  As we do in the other modules. As libgstcheck is currently not
	  built on windows. Fixes "Fallback variable 'gst_check_dep' in
	  the subproject 'gstreamer' does not exist"" Meson error.

2017-06-22 07:25:07 -0700  Julien Isorce <julien.isorce@gmail.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: fix connection delay due to wrong assumption on last-sample
	  Commit 852cc09f542af5cadd79ffd7fe79d6475cf57e14 assumed that
	  multiudpsink's last-sample always comes from the payloader. Which
	  is wrong if auxiliary streams are multiplexed in the same stream.
	  So check the buffer's ssrc against the caps'ssrc before to use its
	  seqnum. If not the same ssrc just use the payloader as done prior
	  the commit above or when there is no last-sample yet.
	  https://bugzilla.gnome.org/show_bug.cgi?id=784094

2017-06-23 16:19:04 -0400  Thibault Saunier <thibault.saunier@osg.samsung.com>

	* meson.build:
	  meson: Allow using glib as a subproject

2017-06-26 09:55:49 +0100  Tim-Philipp Müller <tim@centricular.com>

	* meson.build:
	  meson: fix with-package-name option
	  https://bugzilla.gnome.org/show_bug.cgi?id=784082

2017-06-09 20:16:28 -0400  Nicolas Dufresne <nicolas.dufresne@collabora.com>

	* Makefile.am:
	  Distribute meson_options.txt

2017-06-09 20:11:47 -0400  Nicolas Dufresne <nicolas.dufresne@collabora.com>

	* Makefile.am:
	  And config.h.meson is no longer dist either

2017-06-09 21:27:09 +0100  Tim-Philipp Müller <tim@centricular.com>

	* config.h.meson:
	* meson.build:
	  meson: config.h.meson is no longer needed

2017-06-07 13:04:41 -0400  Thibault Saunier <thibault.saunier@osg.samsung.com>

	* tests/check/meson.build:
	* tests/meson.build:
	  meson: Fix building tests and activate them again

2017-06-07 12:55:41 -0400  Thibault Saunier <thibault.saunier@osg.samsung.com>

	* tests/check/meson.build:
	  meson: Do not use path separator in test names
	  Avoiding warnings like:
	  WARNING: Target "elements/audioamplify" has a path separator in its name.

2017-05-20 15:07:31 +0100  Tim-Philipp Müller <tim@centricular.com>

	* meson.build:
	* meson_options.txt:
	  meson: add options to set package name and origin
	  https://bugzilla.gnome.org/show_bug.cgi?id=782172

2017-05-18 10:35:18 +0100  Tim-Philipp Müller <tim@centricular.com>

	* gst/rtsp-server/rtsp-address-pool.h:
	* gst/rtsp-server/rtsp-auth.h:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-context.h:
	* gst/rtsp-server/rtsp-media-factory-uri.h:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-mount-points.h:
	* gst/rtsp-server/rtsp-params.h:
	* gst/rtsp-server/rtsp-permissions.h:
	* gst/rtsp-server/rtsp-sdp.h:
	* gst/rtsp-server/rtsp-server.h:
	* gst/rtsp-server/rtsp-session-media.h:
	* gst/rtsp-server/rtsp-session-pool.h:
	* gst/rtsp-server/rtsp-session.h:
	* gst/rtsp-server/rtsp-stream-transport.h:
	* gst/rtsp-server/rtsp-stream.h:
	* gst/rtsp-server/rtsp-thread-pool.h:
	* gst/rtsp-server/rtsp-token.h:
	  Mark symbols explicitly for export with GST_EXPORT

2017-05-16 14:44:43 -0400  Nicolas Dufresne <nicolas.dufresne@collabora.com>

	* configure.ac:
	* gst/rtsp-sink/Makefile.am:
	  Remove plugin specific static build option
	  Static and dynamic plugins now have the same interface. The standard
	  --enable-static/--enable-shared toggle are sufficient.

2017-05-04 18:59:14 +0300  Sebastian Dröge <sebastian@centricular.com>

	* configure.ac:
	* meson.build:
	  Back to development

=== release 1.12.0 ===

2017-05-04 15:40:46 +0300  Sebastian Dröge <sebastian@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* configure.ac:
	* gst-rtsp-server.doap:
	* meson.build:
	  Release 1.12.0

=== release 1.11.91 ===

2017-04-27 17:42:02 +0300  Sebastian Dröge <sebastian@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* configure.ac:
	* gst-rtsp-server.doap:
	* meson.build:
	  Release 1.11.91

2017-04-24 20:30:37 +0100  Tim-Philipp Müller <tim@centricular.com>

	* common:
	  Automatic update of common submodule
	  From 60aeef6 to 48a5d85

2017-04-13 14:20:10 -0300  Thibault Saunier <thibault.saunier@osg.samsung.com>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-stream.c:
	  gi: Fix some annotations and docstrings

2017-04-13 13:52:26 -0300  Thibault Saunier <thibault.saunier@osg.samsung.com>

	* gst/rtsp-server/meson.build:
	* meson.build:
	* meson_options.txt:
	  meson: Build gir

2017-04-10 23:51:12 +0100  Tim-Philipp Müller <tim@centricular.com>

	* autogen.sh:
	* common:
	  Automatic update of common submodule
	  From 39ac2f5 to 60aeef6

=== release 1.11.90 ===

2017-04-07 16:35:03 +0300  Sebastian Dröge <sebastian@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* configure.ac:
	* gst-rtsp-server.doap:
	* meson.build:
	  Release 1.11.90

2017-03-27 18:19:33 +0100  Tim-Philipp Müller <tim@centricular.com>

	* examples/test-launch.c:
	  examples: make test-launch pipeline shared by default as well

2017-02-27 19:10:44 +0200  Sebastian Dröge <sebastian@centricular.com>

	* pkgconfig/gstreamer-rtsp-server-uninstalled.pc.in:
	  gstreamer-rtsp-server: Add both srcdir and builddir to the include path
	  Just the build dir is not going to work for srcdir!=builddir.

2017-02-24 15:59:54 +0200  Sebastian Dröge <sebastian@centricular.com>

	* meson.build:
	  meson: Update version

2017-02-24 15:37:49 +0200  Sebastian Dröge <sebastian@centricular.com>

	* configure.ac:
	  Back to development

=== release 1.11.2 ===

2017-02-24 15:10:07 +0200  Sebastian Dröge <sebastian@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* configure.ac:
	* gst-rtsp-server.doap:
	  Release 1.11.2

2017-02-14 20:40:26 +0000  Tim-Philipp Müller <tim@centricular.com>

	* Makefile.am:
	  meson: dist meson build files
	  Ship meson build files in tarballs, so people who use tarballs
	  in their builds can start playing with meson already.

2017-02-07 23:39:37 +1100  Jan Schmidt <jan@centricular.com>

	* examples/test-record.c:
	  examples/test-record: Add extra line to initial printout
	  Add an example line of how to deliver a stream to the
	  RTSP RECORD example

2017-01-19 14:57:19 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: Also handle the (S|G)ET_PARAMETER case of size==0 || !data as keep-alive
	  If there is no Content-Length header, no body would be allocated and the
	  '\0' would also not be appended to the body.

2017-01-19 14:24:07 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: Fix handling of keep-alive GET_PARAMETER/SET_PARAMETER
	  While they logically have 0 bytes length, GstRTSPConnection is appending
	  a '\0' to everything making the size be 1 instead.

2017-01-13 12:39:36 +0000  Tim-Philipp Müller <tim@centricular.com>

	* meson.build:
	  meson: bump version

2017-01-12 19:04:23 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-session.c:
	  rtsp-session: Only remove deprecated API if requested to do so, not just when disabling
	  gst_rtsp_session_is_expired() and gst_rtsp_session_next_timeout() were
	  affected.

2017-01-12 16:32:59 +0200  Sebastian Dröge <sebastian@centricular.com>

	* configure.ac:
	  Back to development

=== release 1.11.1 ===

2017-01-12 16:14:46 +0200  Sebastian Dröge <sebastian@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* configure.ac:
	* gst-rtsp-server.doap:
	* win32/common/libgstrtspserver.def:
	  Release 1.11.1

2017-01-10 08:34:50 +0100  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: corrected if-statement in _get_server_port()
	  This bug was accidentally introduced while fixing a segfault
	  in _get_server_port() function.
	  https://bugzilla.gnome.org/show_bug.cgi?id=776345

2017-01-09 14:12:05 +0100  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	* tests/check/gst/stream.c:
	  rtsp-stream: fixed segmenation fault in _get_server_port()
	  Calling function gst_rtsp_stream_get_server_port() results in
	  segmenation fault in the RTP/RTSP/TCP case.
	  Port that the server will use to receive RTCP makes only
	  sense in the UDP case, however the function should handle
	  the TCP case in a nicer way.
	  https://bugzilla.gnome.org/show_bug.cgi?id=776345

2017-01-09 12:22:40 +0300  Aleksandr Slobodeniuk <alenuke@yandex.ru>

	* gst/rtsp-server/rtsp-media-factory.c:
	  dosc: Fix a little typo
	  https://bugzilla.gnome.org/show_bug.cgi?id=777037

2017-01-04 16:20:54 +0100  Guillaume Desmottes <guillaume.desmottes@collabora.co.uk>

	* pkgconfig/Makefile.am:
	* pkgconfig/gstreamer-rtsp-server-uninstalled.pc.in:
	* pkgconfig/meson.build:
	  meson: generate pkg-config -uninstalled pc files
	  Generating those files is useful for users building the GStreamer stack
	  using meson and having to link it to another project which is still
	  using the autotools.
	  https://bugzilla.gnome.org/show_bug.cgi?id=776810

2017-01-04 16:11:08 +0100  Guillaume Desmottes <guillaume.desmottes@collabora.co.uk>

	* pkgconfig/gstreamer-rtsp-server-uninstalled.pc.in:
	  pkgconfig: fix -uninstalled pc file
	  pcfiledir was never defined so the paths were wrong.
	  https://bugzilla.gnome.org/show_bug.cgi?id=776867

2016-12-21 13:41:50 +0100  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	* tests/check/gst/rtspserver.c:
	  rtsp-stream: Fixed TCP transport case
	  Make sure that the appsink element is actually added to
	  the bin before trying to link it with the elements in it.
	  https://bugzilla.gnome.org/show_bug.cgi?id=776343

2016-12-16 17:26:04 +0000  Tim-Philipp Müller <tim@centricular.com>

	* .gitignore:
	* Makefile.am:
	* configure.ac:
	* gst-rtsp.spec.in:
	  Remove generated .spec file
	  Likely extremely bitrotten, and we should not ship this anyway.

2016-12-03 08:21:02 +0100  Edward Hervey <bilboed@bilboed.com>

	* common:
	  Automatic update of common submodule
	  From f980fd9 to 39ac2f5

2016-12-02 15:40:09 +0100  Edward Hervey <edward@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	  media: Fix pt map caps
	  Since decryption is handled within rtpbin, all outcoming stream
	  caps will be application/x-rtp (i.e. regular rtp)
	  Fixes RECORD with SRTP streams

2016-12-02 15:38:04 +0100  Edward Hervey <edward@centricular.com>

	* gst/rtsp-server/rtsp-media-factory.c:
	  media-factory: Create media objects with the proper transport mode
	  The function called immediately afterwards (collect_streams()) will
	  need it to work properly

2016-12-02 14:36:50 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-auth.c:
	  rtsp-auth: Don't remove digest-auth nonces that already/still have a client connected

2016-12-01 18:04:34 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media-factory.c:
	  rtsp-media-factory: Don't create a pipeline for the media pipeline string
	  We're going to put a pipeline into a pipeline otherwise, which is not
	  exactly ideal.

2016-10-25 15:41:28 +0300  Kseniia Vasilchuk <vasilchukkseniia@gmail.com>

	* gst/rtsp-server/rtsp-media.c:
	  media: Fix race condition around finish_unprepare() if called multiple time
	  https://bugzilla.gnome.org/show_bug.cgi?id=755329

2016-11-30 14:06:36 +1100  Jan Schmidt <jan@centricular.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	  rtspclientsink: Don't leave stale pointer after unref
	  Fix a warning on shutdown - don't keep a pointer to an
	  alread-unreffed object.

2016-11-26 11:24:50 +0000  Tim-Philipp Müller <tim@centricular.com>

	* .gitmodules:
	  common: use https protocol for common submodule
	  https://bugzilla.gnome.org/show_bug.cgi?id=775110

2016-11-21 23:29:56 +1100  Matthew Waters <matthew@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: block the output of rtpbin instead of the source pipeline
	  85c52e194bcb81928b96614be0ae47d59eccb1ce introduced a more correct
	  detection of the srtp rollover counter to add to the SDP.
	  Unfortunately, it was incomplete for live pipelines where the logic
	  blocks the source bin before creating the SDP and thus would never have
	  the necessary informaiton to create a correct SDP with srtp encryption.
	  Move the pad blocks to rtpbin's output pads instead so that the
	  necessary information can be created before we need the information for
	  the SDP.
	  https://bugzilla.gnome.org/show_bug.cgi?id=770239

2016-11-21 16:02:39 +0100  Dag Gullberg <dagg@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: add IDLE timeout, before session exists
	  The RTSP server will not timeout an idle RTSP connection
	  (note this is different from doing timeout on a RTSP
	  session).
	  At least for Apache this is a problem when running RTSP over
	  HTTPS since it uses one of the threads (there is a rather
	  limited number) that are available for handling requests.
	  https://bugzilla.gnome.org/show_bug.cgi?id=771830

2016-11-23 09:45:08 +0000  Tim-Philipp Müller <tim@centricular.com>

	* .gitignore:
	  .gitignore more

2016-11-21 13:05:50 +0100  Göran Jönsson <goranjn@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Set close-socket FALSE on UDP src:es
	  With this RTSP server can use the sockets independent on the udpsrc
	  state.
	  When the udp src is finalized it will unref socket and when g_socket
	  is finalized the socket will be closed.
	  https://bugzilla.gnome.org/show_bug.cgi?id=765673

2016-11-18 17:47:13 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	  rtspclientsink: Move to new helper function to parse authentication responses
	  https://bugzilla.gnome.org/show_bug.cgi?id=774416

2016-11-16 08:42:24 +0200  Sebastian Dröge <sebastian@centricular.com>

	* examples/Makefile.am:
	* examples/test-auth-digest.c:
	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-auth.h:
	* win32/common/libgstrtspserver.def:
	  rtsp-auth: Add support for Digest authentication
	  https://bugzilla.gnome.org/show_bug.cgi?id=774416

2016-11-17 09:41:53 -0800  Scott D Phillips <scott.d.phillips@intel.com>

	* Makefile.am:
	* gst/rtsp-server/meson.build:
	* meson.build:
	* tests/check/meson.build:
	* win32/MANIFEST:
	* win32/common/libgstrtspserver.def:
	  Enable building with MSVC
	  https://bugzilla.gnome.org/show_bug.cgi?id=774640

2016-11-18 20:23:14 -0300  Thibault Saunier <thibault.saunier@osg.samsung.com>

	* meson.build:
	  meson: gstreamer gst_check_dep does not exist on windows

2016-11-17 09:43:37 -0800  Scott D Phillips <scott.d.phillips@intel.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: update do_send_message to match type GstRTSPClientSendFunc
	  This type mismatch fails building with MSVC
	  https://bugzilla.gnome.org/show_bug.cgi?id=774640

2016-11-11 14:42:08 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-sdp.c:
	  rtsp-sdp: Fix indentation

2016-11-10 05:16:00 +0000  Neha Arora <arora.neha@samsung.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Only signal "new-state" if the state has actually changed
	  https://bugzilla.gnome.org/show_bug.cgi?id=774173

2016-08-24 11:39:13 +0200  Branko Subasic <branko@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  client: emit signal in the beginning of each rtsp request
	  These signals let the application validate the requests, configure the
	  media/stream in a certain way and also generate error status code in
	  case of error or bad request.
	  https://bugzilla.gnome.org/show_bug.cgi?id=758062

2016-11-01 18:10:35 +0000  Tim-Philipp Müller <tim@centricular.com>

	* meson.build:
	  meson: update version

=== release 1.11.0 ===

2016-11-01 18:53:15 +0200  Sebastian Dröge <sebastian@centricular.com>

	* configure.ac:
	  Back to development

=== release 1.10.0 ===

2016-11-01 18:06:46 +0200  Sebastian Dröge <sebastian@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* configure.ac:
	* gst-rtsp-server.doap:
	  Release 1.10.0

2016-10-28 18:38:01 +0100  Tim-Philipp Müller <tim@centricular.com>

	* tests/check/gst/rtspserver.c:
	* tests/check/gst/stream.c:
	  tests: try to avoid using the same ports in different tests
	  Causes problems with client multicast tests otherwise if
	  tests are run in parallel.
	  https://bugzilla.gnome.org/show_bug.cgi?id=773640

2016-10-28 17:50:59 +0100  Tim-Philipp Müller <tim@centricular.com>

	* tests/check/gst/client.c:
	  tests: client: use fail_unless_equals_foo() for better failure reporting

2016-09-26 11:16:04 +0200  Göran Jönsson <goranjn@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: Session filter in unwatch session
	  Call session filter with filter_session_media as paramer in
	  client_unwatch_session if using drop_backlog = FALSE.
	  In client_unwatch_session its allowed to grow the watchs backlog.
	  If using drop_backlog = FALSE and the backlog is full it will cause
	  a deadlock when setting session media state to NULL
	  if the backlog is not allowed to grow.
	  https://bugzilla.gnome.org/show_bug.cgi?id=771983

2016-10-20 21:40:18 +0100  Tim-Philipp Müller <tim@centricular.com>

	* meson.build:
	  meson: add fallbacks for gst modules
	  For gst-all.

2016-09-14 17:48:39 +0300  Nikita Bobkov <NikitaDBobkov@gmail.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: Fix factory leaking in find_media() in error cases
	  https://bugzilla.gnome.org/show_bug.cgi?id=771488

2016-10-06 11:47:50 -0400  Xavier Claessens <xavier.claessens@collabora.com>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: Fix randomly missing streams from SDP with dynamic elements
	  When using dynamic elements, gst_rtsp_stream_join_bin() is called from
	  "pad-added" signal. In that case priv->srcpad could already have its caps,
	  and they'll be sent to priv->send_src[0] pad. That means that when it
	  connects "notify::caps" signal, that pad could already have received its
	  caps and the signal won't be emitted anymore.
	  In that case priv->caps stay to NULL and when building the SDP that stream
	  gets ignored. Leading to missing video or audio when playing in client side.
	  https://bugzilla.gnome.org/show_bug.cgi?id=772478

2016-09-30 11:42:08 +0100  Tim-Philipp Müller <tim@centricular.com>

	* meson.build:
	  meson: update version

=== release 1.9.90 ===

2016-09-30 13:04:12 +0300  Sebastian Dröge <sebastian@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* configure.ac:
	* gst-rtsp-server.doap:
	  Release 1.9.90

2016-09-17 13:17:19 +0100  Ian Jamison <ian.dev@arkver.com>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-server: Hint that set_multicast_iface expects the name of the interface
	  To prevent any possibly confusion with IPs or anything else.
	  https://bugzilla.gnome.org/show_bug.cgi?id=771530

2016-09-18 09:58:55 -0400  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Call g_free() instead of g_object_unref() on multicast-iface strings
	  https://bugzilla.gnome.org/show_bug.cgi?id=763000#c5

2016-09-14 11:31:15 +0200  Sebastian Dröge <sebastian@centricular.com>

	* configure.ac:
	  configure: Depend on gstreamer 1.9.2.1

2016-09-10 20:52:31 +1000  Jan Schmidt <jan@centricular.com>

	* autogen.sh:
	* common:
	  Automatic update of common submodule
	  From b18d820 to f980fd9

2016-09-10 09:58:31 +1000  Jan Schmidt <jan@centricular.com>

	* autogen.sh:
	* common:
	  Automatic update of common submodule
	  From 6f2d209 to b18d820

2016-09-07 18:44:34 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Remove unused _locked() variant of a function
	  It was added during refactoring.

2016-09-07 10:21:09 -0400  Xavier Claessens <xavier.claessens@collabora.com>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: cosmetic cleanup
	  https://bugzilla.gnome.org/show_bug.cgi?id=766612

2016-09-07 10:16:19 -0400  Xavier Claessens <xavier.claessens@collabora.com>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: Compare IP addresses case insensitive in more places
	  https://bugzilla.gnome.org/show_bug.cgi?id=766612

2016-09-07 10:12:18 -0400  Xavier Claessens <xavier.claessens@collabora.com>

	* common:
	* gst/rtsp-server/rtsp-stream.c:
	  stream: Fix leaked joined_bin
	  There is no need to keep a strong ref on it, and _leave_bin() was
	  setting it to NULL before calling g_clear_object() so it was leaked.
	  https://bugzilla.gnome.org/show_bug.cgi?id=766612

2016-09-06 19:15:23 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Compare IP address strings case insensitive
	  Otherwise IPv6 addresses might fail this comparision.

2016-09-06 19:10:21 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Bind multicast sockets to ANY as before
	  https://bugzilla.gnome.org/show_bug.cgi?id=766612#c48

2016-09-05 18:31:36 +0300  Kseniia <vasilchukkseniia@gmail.com>

	* gst/rtsp-server/rtsp-session.c:
	  rtsp-session: Fix segfault when doing keep-alive after removing the session
	  If keep-alive happens after removing the session but before finalizing the
	  stream transport, we would segfault.
	  https://bugzilla.gnome.org/show_bug.cgi?id=750544

2016-09-05 18:04:50 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Always create multicast UDP elements if the protocol flag is set
	  Adding them later will cause deadlocks due to
	  1) pre-rolling and staying in PAUSED with the unicast/TCP sinks
	  2) adding the multicast sink
	  3) waiting for it to get data to preroll again
	  3) never happens because the queues after the tee are full.

2016-09-05 16:32:57 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Fix up various multicast related issues

2016-09-05 13:40:59 +0300  Sebastian Dröge <sebastian@centricular.com>

	* tests/check/gst/stream.c:
	  tests: Fix compilation

2016-07-28 15:33:05 -0400  Xavier Claessens <xavier.claessens@collabora.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-stream.c:
	* tests/check/gst/stream.c:
	  stream: revert back to create udpsrc/udpsink on DESCRIBE for unicast
	  This is basically reverting changes introduced in commit f62a9a7,
	  because it was introducing various regressions:
	  - It introduces a leak of udpsrc elements that got wrongly fixed by adding
	  an hash table in commit cba045e. We should have at most 4 udpsrc for unicast:
	  ipv4/ipv6, rtp/rtcp. They can be reused for all unicast clients.
	  - If a mcast client connects, it creates a new socket in SETUP to try to respect
	  the destination/port given by the client in the transport, and overrides the
	  socket already set on the udpsink element. That means that if we already had a
	  client connected, the source address on the udp packets it receives suddenly
	  changes.
	  - If a 2nd mcast client connects, the destination/port in its transport is
	  ignored but its transport wasn't updated.
	  What this patch does:
	  - Revert back to create udpsrc/udpsink for unicast clients on DESCRIBE.
	  - Always have a tee+queue when udp is enabled. This could be optimized
	  again in a later patch, but is more complicated. If no unicast clients
	  connects then those elements are useless, this could be also optimized
	  in a later patch.
	  - When mcast transport is added, it creates a new set of udpsrc/udpsink,
	  seperated from those for unicast clients. Since we already support only
	  one mcast address, we also create only one set of elements.
	  https://bugzilla.gnome.org/show_bug.cgi?id=766612

2016-07-28 15:20:31 -0400  Xavier Claessens <xavier.claessens@collabora.com>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: factor our plug_src function
	  https://bugzilla.gnome.org/show_bug.cgi?id=766612

2016-07-21 21:46:16 -0400  Xavier Claessens <xavier.claessens@collabora.com>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: factor out plug_sink function
	  https://bugzilla.gnome.org/show_bug.cgi?id=766612

2016-07-20 23:05:09 -0400  Xavier Claessens <xavier.claessens@collabora.com>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: small documentation clarification
	  https://bugzilla.gnome.org/show_bug.cgi?id=766612

2016-07-20 15:35:44 -0400  Xavier Claessens <xavier.claessens@collabora.com>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: rename addr_v4/6 to mcast_addr_v4/6 for clarity
	  https://bugzilla.gnome.org/show_bug.cgi?id=766612

2016-07-14 11:10:31 -0400  Xavier Claessens <xavier.claessens@collabora.com>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: Keep a ref on joined bin
	  https://bugzilla.gnome.org/show_bug.cgi?id=766612

2016-07-20 15:11:32 -0400  Xavier Claessens <xavier.claessens@collabora.com>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: code cleanup
	  https://bugzilla.gnome.org/show_bug.cgi?id=766612

2016-07-20 23:18:23 -0400  Xavier Claessens <xavier.claessens@collabora.com>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: small fix in error code path
	  https://bugzilla.gnome.org/show_bug.cgi?id=766612

2016-07-20 20:09:57 -0400  Xavier Claessens <xavier.claessens@collabora.com>

	* gst/rtsp-server/rtsp-stream.c:
	  Revert "rtsp-stream: Fix crash on cleanup with shared media and multiple udpsrc"
	  This partly reverts commit cba045e1b19fad6e689e10206f57903e15f1229a,
	  but keeps unit tests.
	  https://bugzilla.gnome.org/show_bug.cgi?id=766612

2016-09-01 12:33:00 +0300  Sebastian Dröge <sebastian@centricular.com>

	* configure.ac:
	  Back to development

=== release 1.9.2 ===

2016-09-01 12:32:51 +0300  Sebastian Dröge <sebastian@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* configure.ac:
	* gst-rtsp-server.doap:
	  Release 1.9.2

2016-01-27 01:03:52 +0000  Tim-Philipp Müller <tim@centricular.com>

	* config.h.meson:
	* examples/meson.build:
	* gst/meson.build:
	* gst/rtsp-server/meson.build:
	* gst/rtsp-sink/meson.build:
	* meson.build:
	* pkgconfig/meson.build:
	* tests/check/meson.build:
	* tests/meson.build:
	  Add support for Meson as alternative/parallel build system
	  https://github.com/mesonbuild/meson

2016-08-26 21:56:13 +0200  Josep Torra <n770galaxy@gmail.com>

	* configure.ac:
	* tests/check/Makefile.am:
	  build: silence error about pthread for 'make check' in osx
	  Fixes "clang: error: argument unused during compilation: '-pthread'"

2015-09-25 15:04:00 +0000  Nikita Bobkov <NikitaDBobkov@gmail.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: Fix leaking of media in error cases
	  With additional fixes by Kseniya Vasilchuk <vasilchukkseniia@gmail.com>
	  and myself to make the media refcounting a bit easier to follow.
	  https://bugzilla.gnome.org/show_bug.cgi?id=755632

2016-08-02 15:08:22 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: Fix leaking of session in error cases
	  https://bugzilla.gnome.org/show_bug.cgi?id=755632

2016-07-11 21:16:04 +0200  Stefan Sauer <ensonic@users.sf.net>

	* common:
	  Automatic update of common submodule
	  From f363b32 to f49c55e

2016-07-06 13:51:15 +0300  Sebastian Dröge <sebastian@centricular.com>

	* configure.ac:
	  Back to development

=== release 1.9.1 ===

2016-07-06 13:28:12 +0300  Sebastian Dröge <sebastian@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* configure.ac:
	* gst-rtsp-server.doap:
	  Release 1.9.1

2016-06-24 02:02:20 +0530  Nirbheek Chauhan <nirbheek@centricular.com>

	* configure.ac:
	  configure: Need to add -DGST_STATIC_COMPILATION when building only statically
	  https://bugzilla.gnome.org/show_bug.cgi?id=767463

2016-06-21 11:49:02 -0400  Nicolas Dufresne <nicolas.dufresne@collabora.com>

	* common:
	  Automatic update of common submodule
	  From ac2f647 to f363b32

2016-04-14 22:56:11 -0700  Aleix Conchillo Flaqué <aleix@oblong.com>

	* gst/rtsp-server/rtsp-sdp.c:
	* gst/rtsp-server/rtsp-sdp.h:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  sdp: add rollover counters for all sender SSRC
	  We add different crypto sessions in MIKEY, one for each sender
	  SSRC. Currently, all of them will have the same security policy, 0.
	  The rollover counters are obtained from the srtpenc element using the
	  "stats" property.
	  https://bugzilla.gnome.org/show_bug.cgi?id=730539

2016-06-07 20:44:42 +0100  Tim-Philipp Müller <tim@centricular.com>

	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-server.h:
	  docs: fix some typos

2016-05-25 10:28:43 +0100  Tim-Philipp Müller <tim@centricular.com>

	* gst/rtsp-server/Makefile.am:
	  g-i: pass compiler env to g-ir-scanner
	  It's what introspection.mak does as well. Should
	  fix spurious build failures on gnome-continuous
	  (caused by g-ir-scanner getting compiler details
	  via python which is broken in some environments
	  so passing the compiler details bypasses that).

2016-05-18 16:48:44 +0100  Ian <ian.arkver.dev@gmail.com>

	* gst/rtsp-server/rtsp-session.c:
	  rtsp-session: RFC2326 does not allow a space between ; and timeout in the Session header
	  This works with rtspsrc and live555, but fails with e.g. ffmpeg.
	  https://bugzilla.gnome.org/show_bug.cgi?id=766619

2016-03-07 14:48:38 +0100  Edward Hervey <bilboed@bilboed.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	  rtspclientsink: Check return value of sscanf
	  And just make sure we always have 0/0 if we have an error
	  CID #1352031

2016-04-25 08:55:25 -0400  Jake Foytik <jake.foytik@ipconfigure.com>

	* gst/rtsp-server/rtsp-stream.c:
	* tests/check/gst/rtspserver.c:
	* tests/check/gst/stream.c:
	  rtsp-stream: Fix crash on cleanup with shared media and multiple udpsrc
	  - Unicast udpsrcs are now managed in a hash table. This allows for proper cleanup in with shared streams and fixes a memory leak.
	  - Unicast udpsrcs are now properly cleaned up when shared connections exit. See the update_transport() function.
	  - Create unit test for shared media.
	  https://bugzilla.gnome.org/show_bug.cgi?id=764744

2016-04-11 10:55:23 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Always bind to ANY when address is a multicast address and not only on Windows
	  For IPv6 addresses, binding to a multicast group does not work on Linux
	  either. Always bind to ANY and then later join the multicast group.
	  https://bugzilla.gnome.org/show_bug.cgi?id=764679

2016-04-14 10:05:02 +0100  Julien Isorce <j.isorce@samsung.com>

	* common:
	  Automatic update of common submodule
	  From 6f2d209 to ac2f647

2016-04-06 10:09:46 +0200  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-thread-pool.c:
	  rtsp-thread-pool: explained why GSource is a part of ThreadImpl
	  Clarified why it is necessary to add source information to
	  GstRTSPThreadImpl. See the reported bug in GLib:
	  https://bugzilla.gnome.org/show_bug.cgi?id=720186
	  for more information.
	  https://bugzilla.gnome.org/show_bug.cgi?id=761702

2016-04-04 12:58:38 +0300  Sebastian Dröge <sebastian@centricular.com>

	* examples/Makefile.am:
	  examples: Clean up CFLAGS/LDADD even more
	  The internal .la should come first and is part of LDADD, as is
	  GST_CFLAGS/LIBS.

2016-04-04 12:39:39 +0300  Sebastian Dröge <sebastian@centricular.com>

	* examples/Makefile.am:
	  examples: Clean up CFLAGS/LDADD to link with the correct versions of all libraries

2016-04-03 12:06:29 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/Makefile.am:
	  rtsp-server: Use $(GST_NET_LIBS) / $(GST_NET_CFLAGS)

2015-12-30 18:39:05 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-sdp.c:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  rtsp-server: Implement clock signalling according to RFC7273
	  For NTP and PTP clocks we signal the actual clock that is used and signal
	  the direct media clock offset.
	  For all other clocks we at least signal that it's the local sender clock.
	  This allows receivers to know which clock was used to generate the media and
	  its RTP timestamps. Receivers can then implement network synchronization,
	  either absolute or at least relative by getting the sender clock rate directly
	  via NTP/PTP instead of estimating it from RTP timestamps and packet receive
	  times.
	  https://bugzilla.gnome.org/show_bug.cgi?id=760005

2016-03-02 19:42:58 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	  rtspclientsink: Add support for setting the multicast interface
	  https://bugzilla.gnome.org/show_bug.cgi?id=763000

2016-03-02 19:42:13 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  rtsp-media: Add support for setting the multicast interface
	  https://bugzilla.gnome.org/show_bug.cgi?id=763000

2016-03-07 08:50:01 +0900  Vineeth TM <vineeth.tm@samsung.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	  rtspclientsink: use new gst_element_class_add_static_pad_template()
	  https://bugzilla.gnome.org/show_bug.cgi?id=763196

2016-03-24 13:33:43 +0200  Sebastian Dröge <sebastian@centricular.com>

	* configure.ac:
	  Back to development

=== release 1.8.0 ===

2016-03-24 13:00:35 +0200  Sebastian Dröge <sebastian@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* configure.ac:
	* gst-rtsp-server.doap:
	  Release 1.8.0

2016-03-16 23:35:09 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Don't set the state of the appsrc from PLAYING to PAUSED again during setup
	  This would get us NO_PREROLL in the bin again and break seeking.
	  Thanks to Carlos Rafael Giani for helping to debug this!
	  https://bugzilla.gnome.org/show_bug.cgi?id=740509

=== release 1.7.91 ===

2016-03-15 12:26:13 +0200  Sebastian Dröge <sebastian@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* configure.ac:
	* gst-rtsp-server.doap:
	  Release 1.7.91

2016-03-10 13:54:38 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Ensure that the pipeline is live and later-added udpsrcs are syncing the state with the parent bin
	  Without this, RECORD pipelines are broken because
	  a) we wait for ASYNC_DONE which never happens anymore because udpsrc would be
	  added later. Previously it was there earlier and due to NO_PREROLL caused the
	  pipeline to preroll immediately
	  b) the udpsrc for the pipeline is added later and never set to PLAYING state,
	  as the corresponding code previously was only for PLAY pipelines.
	  https://bugzilla.gnome.org/show_bug.cgi?id=763281

2016-03-11 01:22:54 +1100  Jan Schmidt <jan@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Fix typo in the docstring
	  gst_rtsp_stream_set_client_side -> gst_rtsp_stream_is_client_side

2016-03-05 10:52:11 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Disable multicast loopback for all our sockets
	  On Windows this is a receiver-side setting, on Linux a sender-side setting. As
	  we provide a socket ourselves to udpsrc, udpsrc is never setting the multicast
	  loopback setting on the socket... while udpsink does which unfortunately has
	  no effect here on Windows but on Linux.
	  https://bugzilla.gnome.org/show_bug.cgi?id=757488

2016-03-03 15:07:06 +0100  Patricia Muscalu <patricia@axis.com>

	* tests/check/gst/stream.c:
	  stream tests: added new tests
	  Test a case when the address pool only contains multicast addresses
	  and the client is requesting unicast udp.
	  Added tests for multicast ports allocation.
	  https://bugzilla.gnome.org/show_bug.cgi?id=757488

2016-03-04 13:51:12 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Only bind multicast sockets to ANY on Windows
	  On Linux it is still needed to bind to the multicast address
	  to filter out random other packets, while on Windows binding
	  to multicast addresses just fails.

2016-03-03 10:41:51 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Only use the address pool for unicast UDP if it contains unicast addresses
	  Otherwise we fail to allocate UDP ports if the pool only contains multicast
	  addresses, which is something that used to work before. For unicast addresses
	  if the pool contains none, we just allocate them as if there is no pool at
	  all.
	  https://bugzilla.gnome.org/show_bug.cgi?id=757488

2016-03-02 11:48:49 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-server: Fix indentation

2016-03-02 11:47:47 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Don't bind the sockets to multicast addresses
	  This works on Linux but fails completely on Windows. You're supposed
	  to bind to ANY and then join the multicast group.
	  https://bugzilla.gnome.org/show_bug.cgi?id=757488

=== release 1.7.90 ===

2016-03-01 19:00:45 +0200  Sebastian Dröge <sebastian@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* configure.ac:
	* gst-rtsp-server.doap:
	  Release 1.7.90

2016-02-26 12:42:51 +0200  Sebastian Dröge <sebastian@centricular.com>

	* common:
	  Automatic update of common submodule
	  From b64f03f to 6f2d209

2016-02-24 00:10:52 +1100  Jan Schmidt <jan@centricular.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	* tests/check/gst/rtspclientsink.c:
	  rtspsink: Fix some leaks in rtspclientsink and the unit test.
	  https://bugzilla.gnome.org/show_bug.cgi?id=762525

2016-02-23 15:01:22 +0100  Patricia Muscalu <patricia@axis.com>

	* tests/check/gst/media.c:
	* tests/check/gst/rtspclientsink.c:
	* tests/check/gst/rtspserver.c:
	* tests/check/gst/stream.c:
	  tests: unit test fixes
	  Removed port allocation test from the media suite.
	  The port allocation failure is now in the stream suite.
	  rtspserver:
	  Make sure that the media is suspended after the DESCRIBE request
	  before reconfiguring the UDP sinks.
	  rtspclientsink:
	  In the RECORD case we have to set async property to false
	  for the appsink element in the test in order to make sure
	  that the media pipeline doesn't hang in start_preroll().
	  https://bugzilla.gnome.org/show_bug.cgi?id=757488

2016-02-23 14:59:32 +0100  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  rtsp-stream: postpone UDP socket allocation until SETUP
	  Postpone the allocation of the UDP sockets until we know
	  what transport has been chosen by the client.
	  Both unicast and multicast UDP sources are created in one
	  function.
	  https://bugzilla.gnome.org/show_bug.cgi?id=757488

2016-01-13 11:29:35 +0100  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: postpone the creation of the UDP sources
	  Code refactoring: allocate the UDP ports after the sender and
	  the reciver parts have been created.
	  We postpone the creation of the UDP sources until the UDP
	  ports have been allocated.
	  https://bugzilla.gnome.org/show_bug.cgi?id=757488

2016-01-13 10:55:40 +0100  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: added function for setting UDP sources to PLAYING state
	  Code refactoring: Introduced a function for setting UDP sources
	  to PLAYING state.
	  https://bugzilla.gnome.org/show_bug.cgi?id=757488

2015-11-20 15:34:43 +0100  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: added function for creating and configuring UDP sources
	  Code refactoring: create and configure UDP sources in a separate function.
	  https://bugzilla.gnome.org/show_bug.cgi?id=757488

2015-11-20 14:43:38 +0100  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: added function for RTP/RTCP socket configuration
	  Code refactoring: configure RTP and RTCP sockets for UDP sinks
	  in a separate function.
	  https://bugzilla.gnome.org/show_bug.cgi?id=757488

2015-11-20 08:38:42 +0100  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: added function for creating and configuring UDP sinks
	  Code refactoring: create and configure UDP sinks in a separate function.
	  https://bugzilla.gnome.org/show_bug.cgi?id=757488

2015-11-19 14:09:25 +0100  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: added helper function for creating the sender/receiver parts
	  Code refactoring: introduced helper function for creating
	  the receiver and the sender parts of the streaming pipeline.
	  https://bugzilla.gnome.org/show_bug.cgi?id=757488

2016-02-19 12:38:42 +0200  Sebastian Dröge <sebastian@centricular.com>

	* configure.ac:
	  Back to development

=== release 1.7.2 ===

2016-02-19 12:03:18 +0200  Sebastian Dröge <sebastian@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* configure.ac:
	* gst-rtsp-server.doap:
	  Release 1.7.2

2016-02-18 15:20:05 +0000  Julien Isorce <j.isorce@samsung.com>

	* pkgconfig/gstreamer-rtsp-server-uninstalled.pc.in:
	  uninstalled.pc: add support for non libtool build systems
	  Currently the .la path is provided which requires to use libtool as
	  mentioned in the GStreamer manual section-helloworld-compilerun.html.
	  It is fine as long as the application is built using libtool.
	  So currently it is not possible to compile a GStreamer application
	  within gst-uninstalled with CMake or other build system different
	  than autotools.
	  This patch allows to do the following in gst-uninstalled env:
	  gcc test.c -o test $(pkg-config --cflags --libs gstreamer-1.0 \
	  gstreamer-rtsp-server-1.0)
	  Previously it required to prepend libtool --mode=link
	  https://bugzilla.gnome.org/show_bug.cgi?id=720778

2016-02-09 10:34:22 +0000  Luis de Bethencourt <luisbg@osg.samsung.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	  rtspclientsink: remove check for impossible condition
	  Goto error label checks stream to see if it needs to be unreferenced before
	  returning, but this goto jumps happens before the stream is ever set, so it
	  will always be NULL in this error label.
	  CID #1352034

2016-02-08 23:33:03 +0000  Luis de Bethencourt <luisbg@osg.samsung.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	  rtspclientsink: clean switch statements
	  Coverity demands for fallthrough statements to be clearly commented,
	  to distinguish from accidental fall throughs. And it also needs all
	  cases to finish with a break, even if the break is never going to be
	  executed like in the case of a continue jump.
	  CID #1352039
	  CID #1352040

2016-02-05 20:03:01 -0300  Thiago Santos <thiagoss@osg.samsung.com>

	* tests/check/Makefile.am:
	  tests: extend the AM_TESTS_ENVIRONMENT from check.mak
	  To get the CK_DEFAULT_TIMEOUT defined for all tests
	  Also removes a 120 seconds timeout that was set as default
	  explicitly in this module
	  https://bugzilla.gnome.org/show_bug.cgi?id=761472

2016-02-05 18:11:41 -0300  Thiago Santos <thiagoss@osg.samsung.com>

	* autogen.sh:
	* common:
	  Automatic update of common submodule
	  From 86e4663 to b64f03f

2016-02-02 09:01:51 +0100  Steven Hoving <sh@bigbrother.nl>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: fix state_lock not locked again when preroll fails
	  https://bugzilla.gnome.org/show_bug.cgi?id=761399

2016-01-28 22:05:56 +0100  Sebastian Dröge <sebastian@centricular.com>

	* configure.ac:
	  configure: Move plugin specific flags below all the others
	  They use some of the other flags, like $GST_ALL_LDFLAGS which is adding
	  -no-undefined. And -no-undefined is required on Windows to build DLLs.

2016-01-28 04:58:00 +1100  Jan Schmidt <jan@centricular.com>

	* gst/rtsp-sink/gstrtspclientsink.c:
	  rtspclientsink: Simplify slightly using new -base API
	  Use the new Mikey and SDP API in the base plugins libs
	  to simplify some code.
	  https://bugzilla.gnome.org/show_bug.cgi?id=758180

2015-11-17 01:12:28 +1100  Jan Schmidt <jan@centricular.com>

	* .gitignore:
	* configure.ac:
	* gst/Makefile.am:
	* gst/rtsp-sink/Makefile.am:
	* gst/rtsp-sink/gstrtspclientsink.c:
	* gst/rtsp-sink/gstrtspclientsink.h:
	* gst/rtsp-sink/plugin.c:
	* tests/check/Makefile.am:
	* tests/check/gst/rtspclientsink.c:
	  rtspsink: Add rtspclientsink element
	  Add an rtspclientsink element that accepts streams for which
	  there is a registered payloader and sends them to
	  an RTSP server using RECORD.
	  Sending is synchronised to the pipeline clock. Payload-types
	  are automatically selected. The 'new-payloader' signal is fired
	  for custom configuration of payloaders when they are created.
	  Can now stream a movie like this:
	  receiver:
	  ./test-record "( decodebin name=depay0 ! videoconvert ! autovideosink \
	  decodebin name=depay1 ! audioconvert ! autoaudiosink )"
	  sender:
	  gst-launch-1.0 filesrc location=file-with-aac-and-h264.mp4 ! qtdemux name=d ! \
	  queue ! aacparse ! rtspclientsink location=rtsp://127.0.0.1:8554/test name=s \
	  https://bugzilla.gnome.org/show_bug.cgi?id=758180

2015-11-17 01:12:28 +1100  Jan Schmidt <jan@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  rtsp-stream: Add functions for using rtsp-stream from the client
	  Add a boolean to indicate that the rtsp-stream is running on the
	  'client' side of an RTSP connection, for sending streams via
	  RECORD. In that case, the roles of the client/server ports
	  in transport setup are swapped.
	  https://bugzilla.gnome.org/show_bug.cgi?id=758180

2015-11-17 01:12:28 +1100  Jan Schmidt <jan@centricular.com>

	* gst/rtsp-server/rtsp-sdp.c:
	* gst/rtsp-server/rtsp-sdp.h:
	  rtsp-sdp: Add gst_rtsp_sdp_from_stream()
	  A new function that adds info from a GstRTSPStream into an SDP message.
	  https://bugzilla.gnome.org/show_bug.cgi?id=758180

2016-01-28 09:22:18 +0100  Steven Hoving <sh@bigbrother.nl>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Fix mutex beeing unlocked while they should be locked
	  https://bugzilla.gnome.org/show_bug.cgi?id=761226

2016-01-15 07:01:37 +0000  Tim-Philipp Müller <tim@centricular.com>

	* gst/rtsp-server/rtsp-media-factory.c:
	  rtsp-media-factory: add missing break in "clock" property setter
	  CID 1348453

2016-01-05 13:10:36 +0100  Srimanta Panda <srimanta@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: fixed assert during update transport
	  When RTSP server trying update transport during multicast, it throws an
	  assert. The assert is thrown because it is trying to get the parent of
	  an non-existing funnel element.
	  https://bugzilla.gnome.org/show_bug.cgi?id=760150

2016-01-03 17:26:31 +0000  Tim-Philipp Müller <tim@centricular.com>

	* gst/rtsp-server/rtsp-permissions.h:
	* gst/rtsp-server/rtsp-thread-pool.h:
	* gst/rtsp-server/rtsp-token.h:
	  docs: remove dummy function declarations with G_INLINE_FUNC for gtk-doc
	  gtk-doc can handle static inline functions just fine these days,
	  there's no need for this stuff any more.

2015-10-07 18:53:01 +0900  Hyunjun Ko <zzoon.ko@samsung.com>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-sdp.c:
	  sdp: replace duplicated codes to call new base sdp apis
	  https://bugzilla.gnome.org/show_bug.cgi?id=745880

2015-12-30 16:34:30 +0200  Sebastian Dröge <sebastian@centricular.com>

	* examples/test-netclock.c:
	  test-netclock: Use the new API to configure a clock directly

2015-12-30 16:31:13 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  rtsp-media: Add API to directly configure a clock on the media pipelines

2015-12-30 16:43:17 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Fix typo in docs gst_rtsp_media_set_latncy() -> latency()

2015-12-30 16:30:38 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media-factory.c:
	  rtsp-media-factory: Add FIXME for 2.0

2015-12-30 16:29:45 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Fix indentation

2015-12-22 12:08:02 +0100  Sebastian Rasmussen <sebras@hotmail.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Do not prepare media after media times out
	  Deferred calls to start_prepare() can be deferred past the point until
	  which wait_preroll() and by proxy gst_rtsp_media_get_status() is
	  prepared to wait. Previously there was no lock and no check for this
	  situation. This meant that a media could be prepared and unprepared
	  simultaneously by two different threads. Now a lock is in place and a
	  suitable check is done.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=759773

2015-12-09 18:24:24 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  rtsp-media: Add property to decide if sending media should be stopped when a client disconnects without TEARDOWN
	  Without TEARDOWN it might be desireable to keep the media running and continue
	  sending data to the client, even if the RTSP connection itself is
	  disconnected.
	  Only do this for session medias that have only UDP transports. If there's at
	  least on TCP transport, it will stop working and cause problems when the
	  connection is disconnected.
	  https://bugzilla.gnome.org/show_bug.cgi?id=758999

2015-12-24 15:29:33 +0100  Sebastian Dröge <sebastian@centricular.com>

	* configure.ac:
	  Back to development

=== release 1.7.1 ===

2015-12-24 14:54:06 +0100  Sebastian Dröge <sebastian@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* configure.ac:
	* gst-rtsp-server.doap:
	  Release 1.7.1

2015-12-21 00:43:49 +0100  Koop Mast <kwm@rainbow-runner.nl>

	* configure.ac:
	  configure: Make -Bsymbolic check work with clang.
	  Update the -Bsymbolic check with the version glib has. This version
	  works with clang.
	  https://bugzilla.gnome.org/show_bug.cgi?id=759713

2015-11-17 22:30:54 -0500  Olivier Crête <olivier.crete@collabora.com>

	* gst/rtsp-server/rtsp-session-pool.c:
	  rtsp-session-pool: Avoid dollar sign ($) in session ids
	  Live555 in VLC strips off dollar signs and then gets very confused,
	  we don't loose too much entropy by just skipping it.

2015-11-10 14:17:18 -0500  Xavier Claessens <xavier.claessens@collabora.com>

	* gst/rtsp-server/rtsp-address-pool.h:
	* gst/rtsp-server/rtsp-auth.h:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-media-factory-uri.h:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-mount-points.h:
	* gst/rtsp-server/rtsp-permissions.h:
	* gst/rtsp-server/rtsp-server.h:
	* gst/rtsp-server/rtsp-session-media.h:
	* gst/rtsp-server/rtsp-session-pool.h:
	* gst/rtsp-server/rtsp-session.h:
	* gst/rtsp-server/rtsp-stream-transport.h:
	* gst/rtsp-server/rtsp-stream.h:
	* gst/rtsp-server/rtsp-thread-pool.h:
	* gst/rtsp-server/rtsp-token.h:
	  rtsp-server: Add g_autoptr() support to all types
	  https://bugzilla.gnome.org/show_bug.cgi?id=754464

2015-12-08 08:27:20 +0100  Srimanta Panda <srimanta@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: fixed valgrind error
	  Fixed the valgrind error in unit test. The UDP source created during
	  gst_rtsp_stream_join_bin() was not released while destroying the rtp
	  bin.
	  https://bugzilla.gnome.org/show_bug.cgi?id=759010

2015-12-07 09:11:35 -0500  Nicolas Dufresne <nicolas.dufresne@collabora.co.uk>

	* autogen.sh:
	* common:
	  Automatic update of common submodule
	  From b319909 to 86e4663

2015-11-18 11:14:39 +0100  Srimanta Panda <srimanta@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: suspend media during setup request
	  SETUP request from clients needs to suspend the media to clear the
	  prerolled buffers. Otherwise it will not affect the prerolled buffer
	  and the prerolled buffers will be incorrect (for example block-size
	  from setup request will not affect the prerolled buffer unless the
	  media is suspended).
	  https://bugzilla.gnome.org/show_bug.cgi?id=758268

2015-12-04 08:01:37 +0100  Srimanta Panda <srimanta@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: create stream pipeline based on transport
	  Based on the protocol, create the rtsp stream pipeline. If only TCP or
	  only UDP is set as the transport protocol, it will not add the extra tee
	  or queue element to the pipeline. Both these elements will be added, if
	  it supports both TCP and UDP protocols. This improves the pipeline
	  performance when one protocol is present.
	  https://bugzilla.gnome.org/show_bug.cgi?id=758179

2015-11-19 15:01:16 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Only create RTP sending/receiving rtpbin pads if needed
	  Adding them when not needed will start some logic inside rtpbin that might be
	  problematic. Also if e.g. for a sender media we suddenly receive RTP data, we
	  would start up a rtpjitterbuffer and behave in weird ways.
	  We still set up the UDP sources for RTP receiving for a sender media to be
	  able to receive any packets sent by the client for NAT traversal. They will
	  all go to a fakesink though.
	  Having an rtpjitterbuffer in the media pipeline will cause the pipeline to be
	  NO_PREROLL, which will cause deadlocks when seeking the media as it will never
	  receive ASYNC_DONE after a seek.
	  https://bugzilla.gnome.org/show_bug.cgi?id=758319

2015-11-17 12:44:38 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Disable multicast loopback for the multicast udp sources too
	  On POSIX this setting is for sender sockets, on Windows for receiver sockets.
	  Previously we were only setting this for sender sockets, which caused looped
	  back packets to be received on Windows if a multicast transport was used.

2015-11-17 01:12:28 +1100  Jan Schmidt <jan@centricular.com>

	* examples/test-record-auth.c:
	* examples/test-record.c:
	  examples: Actually use the provided port in the record examples

2015-11-17 01:12:28 +1100  Jan Schmidt <jan@centricular.com>

	* examples/test-record-auth.c:
	  test-record-auth: Add the option to build in TLS support

2015-11-17 01:12:28 +1100  Jan Schmidt <jan@centricular.com>

	* examples/test-auth.c:
	  test-auth: Use an 'anonymous' user for unauthenticated default
	  There's a comment on one of the resources that 'user' and 'admin'
	  shouldn't even be able to see it, but they can if the default
	  token is 'admin2', since that gives them access anyway.

2015-11-17 01:12:28 +1100  Jan Schmidt <jan@centricular.com>

	* examples/.gitignore:
	* examples/Makefile.am:
	* examples/test-record-auth.c:
	  Add test-record-auth example

2015-11-17 01:12:28 +1100  Jan Schmidt <jan@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	* tests/check/gst/client.c:
	  rtsp-client: Report RECORD and ANNOUNCE as supported in the OPTIONS

2015-11-11 14:58:33 +0100  Marcus Prebble <prebble@axis.com>

	* gst/rtsp-server/rtsp-server.c:
	  rtsp-server: Change the logic so we don't pop a NULL context
	  When doing a port scan (e.g. with nmap) the call to GST_RTSP_CHECK()
	  will sometimes fail. This call is made before any context is pushed
	  resulting in an attempt to pop a NULL context.
	  https://bugzilla.gnome.org/show_bug.cgi?id=757949

2015-10-22 14:32:30 +0200  David Svensson Fors <davidsf@axis.com>

	* tests/check/gst/rtspserver.c:
	  rtspserver: Add udp-mcast transport SETUP test
	  Refactor utility functions in the test file so they can handle
	  more than UDP and TCP as lower transport.
	  https://bugzilla.gnome.org/show_bug.cgi?id=756969

2015-10-22 09:15:21 +0200  David Svensson Fors <davidsf@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Always unref return value of gst_object_get_parent()
	  Fixes a leak of a GstBin in the udp-mcast case.
	  https://bugzilla.gnome.org/show_bug.cgi?id=756968

2015-10-21 14:37:19 +0100  Tim-Philipp Müller <tim@centricular.com>

	* common:
	  Automatic update of common submodule
	  From b99800a to b319909

2015-10-20 17:29:42 +0300  Sebastian Dröge <sebastian@centricular.com>

	* configure.ac:
	  Use new GST_ENABLE_EXTRA_CHECKS #define
	  https://bugzilla.gnome.org/show_bug.cgi?id=756870

2015-10-21 14:28:47 +0300  Sebastian Dröge <sebastian@centricular.com>

	* common:
	  Automatic update of common submodule
	  From 6babecd to b99800a

2015-10-02 22:25:47 +0300  Sebastian Dröge <sebastian@centricular.com>

	* configure.ac:
	  Update GLib dependency to 2.40.0

2015-10-02 16:11:05 +0900  Hyunjun Ko <zzoon.ko@samsung.com>

	* examples/test-mp4.c:
	* gst/rtsp-server/rtsp-stream.c:
	  stream: listen to sender ssrc signals
	  https://bugzilla.gnome.org/show_bug.cgi?id=746747

2015-09-29 13:00:51 +0100  Tim-Philipp Müller <tim@centricular.com>

	* common:
	  common: update for new suppression
	  Makes check-valgrind pass with glib 2.46

2015-09-28 17:40:59 +0200  Sebastian Rasmussen <sebras@hotmail.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Take reference to media that will be prepared
	  default_prepare() takes a transfer-none reference GstRTSPMedia object.
	  Later on a g_idle_source_new() is created and a pointer to the media
	  object is passed as user data. If the media is freed before the idle
	  source is dispatched the media object pointer is invalid, but the idle
	  source callback expects it to still be valid. To fix this a reference to
	  the media object is taken when registering the source callback function
	  and a corresponding release of the reference is done when the souce is
	  destroyed.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=755748

2015-08-20 17:01:24 +0900  Vineeth TM <vineeth.tm@samsung.com>

	* examples/test-launch.c:
	* examples/test-mp4.c:
	* examples/test-ogg.c:
	* examples/test-record.c:
	* examples/test-uri.c:
	  rtsp-server: Fix memory leaks when context parse fails
	  When g_option_context_parse fails, context and error variables are not getting free'd
	  which results in memory leaks. Free'ing the same.
	  And replacing g_error_free with g_clear_error, which checks if the error being passed
	  is not NULL and sets the variable to NULL on free'ing.
	  https://bugzilla.gnome.org/show_bug.cgi?id=753863

2015-09-25 23:51:17 +0200  Sebastian Dröge <sebastian@centricular.com>

	* configure.ac:
	  Back to development

=== release 1.6.0 ===

2015-09-25 23:32:52 +0200  Sebastian Dröge <sebastian@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* configure.ac:
	* gst-rtsp-server.doap:
	  Release 1.6.0

=== release 1.5.91 ===

2015-09-18 20:12:06 +0200  Sebastian Dröge <sebastian@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* configure.ac:
	* gst-rtsp-server.doap:
	  Release 1.5.91

2015-09-17 20:07:34 +0100  Tim-Philipp Müller <tim@centricular.com>

	* docs/libs/gst-rtsp-server-sections.txt:
	* gst/rtsp-server/rtsp-stream.c:
	  stream: fix docs for recently-added get/set_buffer_size API
	  https://bugzilla.gnome.org/show_bug.cgi?id=749095

2015-09-04 11:23:43 +1000  Jan Schmidt <jan@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Don't crash on encrypted RTX SDP
	  In parse_keymgmt(), don't mutate the input string that's been passed
	  as const, especially since we might need the original value again if
	  the same key info applies to multiple streams (RTX, for example).
	  https://bugzilla.gnome.org/show_bug.cgi?id=754753

2015-08-22 20:59:40 +1000  Jan Schmidt <jan@centricular.com>

	* examples/test-mp4.c:
	  test-mp4: Support filenames with spaces in them. Error out on too few arguments

2015-08-17 02:36:31 +1000  Jan Schmidt <jan@centricular.com>

	* examples/test-record.c:
	  test-record: Check parameter count and print out help
	  If no launch pipeline was supplied, print out some help

2015-08-31 22:48:34 +1000  Jan Schmidt <jan@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  rtsp-stream: Implement UDP buffer size setting.
	  Add gst_rtsp_stream_(get|set)_buffer_size and use it to configure the
	  UDP TX buffer size.
	  Incorporates a patch by Hyunjun Ko <zzoon.ko@samsung.com>
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=749095

2015-08-31 22:47:45 +1000  Jan Schmidt <jan@centricular.com>

	* gst/rtsp-server/rtsp-media.h:
	  rtsp-media: Fix small typo causing gtk-doc to complain

=== release 1.5.90 ===

2015-08-19 14:15:23 +0300  Sebastian Dröge <sebastian@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* configure.ac:
	* gst-rtsp-server.doap:
	  Release 1.5.90

2015-08-12 14:33:44 +0900  Hyunjun Ko <zzoon.ko@samsung.com>

	* gst/rtsp-server/rtsp-media-factory.c:
	  media-factory: get port number through gst_rtsp_url_get_port
	  https://bugzilla.gnome.org/show_bug.cgi?id=753473

2015-08-13 11:24:10 +0200  Francisco Velazquez <francisv@ifi.uio.no>

	* tests/check/gst/media.c:
	  media-test: Removing unnecessary assertion
	  https://bugzilla.gnome.org/show_bug.cgi?id=753385

2015-07-23 14:50:30 -0400  Xavier Claessens <xavier.claessens@collabora.com>

	* gst/rtsp-server/rtsp-server.c:
	  Document that source keeps a ref on server until it's destroyed
	  https://bugzilla.gnome.org/show_bug.cgi?id=749227

2015-08-08 11:09:57 -0400  Nicolas Dufresne <nicolas.dufresne@collabora.co.uk>

	* tests/check/gst/media.c:
	  media-test: Test for multiple dynamic payload
	  https://bugzilla.gnome.org/show_bug.cgi?id=753385

2015-08-08 09:40:09 -0400  Nicolas Dufresne <nicolas.dufresne@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: Only add fakesink once per pipeline
	  The intention is to prevent going PLAYING state before pads are created.
	  If there was mutilple dynamic payload, it would leak few fakesink and
	  actually prevent from ever reaching playing state.
	  https://bugzilla.gnome.org/show_bug.cgi?id=753385

2015-08-08 09:08:37 -0400  Nicolas Dufresne <nicolas.dufresne@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  Revert "rtsp-media: Only add 1 fakesink per pipeline"
	  This reverts commit 22bf61f16c1210bb458fc3f53642179a0211104f.

2015-08-07 09:21:36 -0400  Nicolas Dufresne <nicolas.dufresne@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Only add 1 fakesink per pipeline
	  There should be only one fakesink per pipeline, not per dynpay. This
	  would lead to element naming clash.

2015-07-30 15:32:43 +0900  Vineeth TM <vineeth.tm@samsung.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: assertion error due to wrong condition check
	  In media to caps function, reserved_keys array is being used for variable i,
	  leading to GLib-CRITICAL **: g_ascii_strcasecmp: assertion 's1 != NULL' failed
	  changed it to variable j
	  https://bugzilla.gnome.org/show_bug.cgi?id=753009

2015-07-29 11:27:05 +0100  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Strip keys from the fmtp that we use internally in our caps
	  Skip keys from the fmtp, which we already use ourselves for the
	  caps. Some software is adding random things like clock-rate into
	  the fmtp, and we would otherwise here set a string-typed clock-rate
	  in the caps... and thus fail to create valid RTP caps
	  https://bugzilla.gnome.org/show_bug.cgi?id=753009

2015-07-20 16:37:44 -0400  Xavier Claessens <xavier.claessens@collabora.com>

	* gst/rtsp-server/rtsp-thread-pool.c:
	  threadpool: Fix possible warning in gst_rtsp_thread_pool_cleanup()
	  https://bugzilla.gnome.org/show_bug.cgi?id=752640

2015-07-03 22:00:00 +0200  Stefan Sauer <ensonic@users.sf.net>

	* common:
	  Automatic update of common submodule
	  From f74b2df to 9aed1d7

2015-06-25 00:04:28 +0200  Sebastian Dröge <sebastian@centricular.com>

	* configure.ac:
	  Back to development

=== release 1.5.2 ===

2015-06-24 23:44:37 +0200  Sebastian Dröge <sebastian@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* configure.ac:
	* gst-rtsp-server.doap:
	  Release 1.5.2

2015-06-18 13:12:04 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	* tests/check/gst/client.c:
	  rtsp-client: allow application to decide what requirements are supported
	  Add "check-requirements" signal and vfunc to allow application
	  (and subclasses) to check the requirements.
	  Based on patch from Hyunjun Ko <zzoon.ko@samsung.com>
	  https://bugzilla.gnome.org/show_bug.cgi?id=749417

2015-06-16 17:50:26 -0400  Nicolas Dufresne <nicolas.dufresne@collabora.co.uk>

	* common:
	  Automatic update of common submodule
	  From 6015d26 to f74b2df

2015-06-11 17:39:00 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Always use real payloader when creating streams
	  A bin that contains the real payloader might be used as payloader. In this
	  case we have to get the real payloader for the various properties it provides.
	  Example use cases for this are bins that payload some media and then have
	  additional elements that add metadata or RTP extension headers to the stream.
	  https://bugzilla.gnome.org/show_bug.cgi?id=750800

2015-06-13 17:14:43 +0200  Sebastian Dröge <sebastian@centricular.com>

	* examples/test-netclock-client.c:
	  test-netclock: Use gst_pipeline_set_latency() to set a high-enough, equal latency for all receivers

2015-06-12 23:35:32 +0200  Sebastian Dröge <sebastian@centricular.com>

	* examples/test-netclock-client.c:
	* examples/test-netclock.c:
	  test-netclock: Use new ntp-time-source property on rtpbin
	  Select the clock time to be used as NTP time source. This allows proper
	  synchronization between receivers, independent of sharing base times, and just
	  requires them to use the same clock.

2015-06-11 20:41:31 +0200  Sebastian Dröge <sebastian@centricular.com>

	* examples/test-netclock-client.c:
	* examples/test-netclock.c:
	  test-netclock: Setting the same base time on sender and receiver is not necessary
	  It's going to be fixed up by rtpbin when using ntp-sync=TRUE

2015-06-11 17:38:52 +0900  Hyunjun Ko <zzoon.ko@samsung.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: add description for gst_rtsp_stream_request_aux_sender
	  https://bugzilla.gnome.org/show_bug.cgi?id=750764

2015-06-11 18:10:12 +0900  Hyunjun Ko <zzoon.ko@samsung.com>

	* docs/libs/gst-rtsp-server.types:
	  docs: add missing types
	  https://bugzilla.gnome.org/show_bug.cgi?id=750764

2015-06-11 17:37:25 +0900  Hyunjun Ko <zzoon.ko@samsung.com>

	* docs/libs/gst-rtsp-server-sections.txt:
	  docs: add missing apis
	  https://bugzilla.gnome.org/show_bug.cgi?id=750764

2015-06-10 17:14:18 +0200  Sebastian Dröge <sebastian@centricular.com>

	* examples/test-netclock-client.c:
	  test-netclock-client: Use ntp-sync=TRUE and buffer-mode=SYNC for proper synchronization

2015-06-05 22:35:39 -0400  Xavier Claessens <xavier.claessens@collabora.com>

	* docs/libs/gst-rtsp-server-sections.txt:
	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-auth.h:
	  GstRTSPAuth: Add client certificate authentication support
	  https://bugzilla.gnome.org/show_bug.cgi?id=750471

2015-06-09 13:53:47 +0200  Sebastian Dröge <sebastian@centricular.com>

	* examples/test-netclock-client.c:
	  test-netclock-client: Use new GstClock API to wait for clock synchronization

2015-06-09 13:51:02 +0200  Sebastian Dröge <sebastian@centricular.com>

	* examples/test-netclock-client.c:
	  test-netclock-client: Use a GMainLoop and playbin's source-setup signal
	  A mainloop is needed to get glimagesink to display something on OSX, and
	  the source-setup signal just makes things a little bit easier.

2015-06-09 11:30:54 +0200  Edward Hervey <bilboed@bilboed.com>

	* common:
	  Automatic update of common submodule
	  From d9a3353 to 6015d26

2015-06-08 23:08:34 +0200  Stefan Sauer <ensonic@users.sf.net>

	* common:
	  Automatic update of common submodule
	  From d37af32 to d9a3353

2015-06-07 23:07:31 +0200  Stefan Sauer <ensonic@users.sf.net>

	* common:
	  Automatic update of common submodule
	  From 21ba2e5 to d37af32

2015-06-07 17:32:29 +0200  Stefan Sauer <ensonic@users.sf.net>

	* common:
	  Automatic update of common submodule
	  From c408583 to 21ba2e5

2015-06-07 17:06:40 +0200  Stefan Sauer <ensonic@users.sf.net>

	* docs/libs/Makefile.am:
	  docs: remove variables that we define in the snippet from common
	  This is syncing our Makefile.am with upstream gtkdoc.

2015-06-07 17:16:47 +0200  Stefan Sauer <ensonic@users.sf.net>

	* common:
	  Automatic update of common submodule
	  From 44a3517 to c408583

2015-06-07 16:44:55 +0200  Sebastian Dröge <sebastian@centricular.com>

	* configure.ac:
	  Back to development

=== release 1.5.1 ===

2015-06-07 11:20:01 +0200  Sebastian Dröge <sebastian@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* configure.ac:
	* gst-rtsp-server.doap:
	  Release 1.5.1

2015-05-25 16:36:18 +0200  Göran Jönsson <goranjn@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: No flush during Teardown.
	  When calling gst_rtsp_watch_write_data in gstrtspconnection.c and
	  backlog is empty it can happen that just a part of a message will be
	  sent and rest is in backlog queue. If then flush during teardown
	  just a part of message will be sent.This can lead to client miss
	  teardown response since it expect to get the last part of message.
	  The flushing during teardown was introduced to fix a deadlock that now
	  is fixed more generally in handle_request by temporary  setting backlog
	  size to unlimited.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=749845

2015-05-27 17:04:41 +0100  Tim-Philipp Müller <tim@centricular.com>

	* tests/check/Makefile.am:
	  tests: Use AM_TESTS_ENVIRONMENT
	  Needed by the new automake test runner and the
	  current version of the common submodule.

2015-05-20 17:05:47 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-stream.h:
	  rtsp-server: Use single-include rtsp header to make sure we get all definitions

2015-05-05 16:46:57 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Mark some more functions static

2015-05-05 16:46:19 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Only unblock the media in suspend() when actually changing the state
	  Otherwise we're going to lose a few packets for live streams during DESCRIBE.

2015-05-04 16:33:08 +0200  Sebastian Dröge <sebastian@centricular.com>

	* examples/test-video-rtx.c:
	  examples: Use AVPF profile for the RTX example

2015-05-04 16:31:20 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-sdp.c:
	  rtsp-sdp: Only add RTX to the SDP when using a feedback profile

2015-04-27 19:35:53 +0900  Hyunjun Ko <zzoon.ko@samsung.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: get valid clock-rate from last-sample
	  clock-rate in last-sample's caps is integer, not unsigned.
	  To get this value properly, variable needs to be type-casted to int.
	  https://bugzilla.gnome.org/show_bug.cgi?id=747614

2015-04-26 15:00:05 +0100  Tim-Philipp Müller <tim@centricular.com>

	* autogen.sh:
	* common:
	  autogen.sh: only run autopoint if gettext requested in configure.ac
	  Not just because there happens to be a po directory.
	  https://bugzilla.gnome.org/show_bug.cgi?id=748058

2015-04-26 14:58:49 +0100  Tim-Philipp Müller <tim@centricular.com>

	* configure.ac:
	  Revert "configure.ac: uncomment gettext version setup"
	  This reverts commit 1545d8fef7065081079172ec264a0061039ac075.
	  We don't need a gettext setup here and there's no po
	  directory either, so no reason why autopoint would be
	  run in the first place.
	  See https://bugzilla.gnome.org/show_bug.cgi?id=748058

2015-04-23 18:53:08 +0100  Alistair Buxton <a.j.buxton@gmail.com>

	* examples/test-multicast.c:
	* examples/test-multicast2.c:
	* examples/test-sdp.c:
	* examples/test-video-rtx.c:
	* examples/test-video.c:
	* tests/test-cleanup.c:
	* tests/test-reuse.c:
	  Fix timeout function signatures across tests and examples

2015-04-23 17:27:40 +0100  Tim-Philipp Müller <tim@centricular.com>

	* tests/check/Makefile.am:
	  tests: define GST_CHECK_TEST_ENVIRONMENT_BEACON
	  Make sure the test environment is set up.
	  https://bugzilla.gnome.org//show_bug.cgi?id=747624

2015-04-23 17:22:59 +0100  Tim-Philipp Müller <tim@centricular.com>

	* configure.ac:
	  configure: bump automake requirement to 1.14 and autoconf to 2.69
	  This is only required for builds from git, people can still
	  build tarballs if they only have older autotools.
	  https://bugzilla.gnome.org//show_bug.cgi?id=747624

2015-04-20 08:49:57 +0100  Vincent Penquerc'h <vincent.penquerch@collabora.co.uk>

	* configure.ac:
	  configure.ac: uncomment gettext version setup
	  Fixes autogen.sh. It would run autopoint, which would complain
	  that it could not find the gettext version in configure.ac.
	  https://bugzilla.gnome.org/show_bug.cgi?id=748058

2015-04-15 10:06:30 +0900  Hyunjun Ko <zzoon.ko@samsung.com>

	* examples/test-video-rtx.c:
	  test-video-rtx: set exact payload type to PCMA payloader
	  Setting wrong payload type causes failure to do retransmission through audio stream
	  https://bugzilla.gnome.org/show_bug.cgi?id=747839

2015-04-15 09:45:23 +0900  Hyunjun Ko <zzoon.ko@samsung.com>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  rtsp-stream: fix to get valid each stream data for request-aux-sender signal
	  Because of duplicated g_signal_connect for request-aux-sender signal,
	  wrong stream pointer is passed to the signal handler.
	  Instead of passing each stream, pass stream array and get the relevant stream.
	  https://bugzilla.gnome.org/show_bug.cgi?id=747839

2015-04-06 10:32:52 +0100  Tim-Philipp Müller <tim@centricular.com>

	* acinclude.m4:
	* autogen.sh:
	  Update autogen.sh to latest version from common
	  Fixes build after aclocal_check etc. helpers have been removed.

2015-04-03 18:58:26 +0100  Tim-Philipp Müller <tim@centricular.com>

	* common:
	  Automatic update of common submodule
	  From bc76a8b to c8fb372

2015-03-23 21:03:20 +0100  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Limit the queues to 1 buffer
	  We only need them to be able to pre-roll, queueing up more data here
	  is only going to harm latency and memory usage.

2015-03-23 20:59:52 +0100  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Update comment and ASCII art to the latest code
	  We have a queue in front of the udpsink too to prevent the pipeline from
	  locking up.

2015-03-21 11:04:05 -0400  Nicolas Dufresne <nicolas.dufresne@collabora.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-media: Properly return first rtptime
	  Instead we where returning first GstBuffer timestamp. This would result
	  in clock skew and unwanted behaviour in RTSP playback.
	  https://bugzilla.gnome.org/show_bug.cgi?id=746479

2015-03-18 16:44:19 -0400  Nicolas Dufresne <nicolas.dufresne@collabora.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Don't leave buffer mapped
	  If the seq is NULL, the RTP buffer was left mapped. We should always
	  unmap the buffer.

2015-03-15 12:27:39 +0000  Sebastian Dröge <sebastian@centricular.com>

	* README:
	  Fix typo in README

2015-03-10 09:39:22 +0000  Tim-Philipp Müller <tim@centricular.com>

	* gst/rtsp-server/rtsp-media-factory.c:
	* tests/check/gst/client.c:
	  Fix double semicolons

2015-03-09 16:00:07 +0100  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Get the seqnum-base and other information from the last buffer in the sink
	  This gives more accurate values than asking the payloader. There might be
	  queueing happening between the payloader and the sink.
	  https://bugzilla.gnome.org/show_bug.cgi?id=745704

2015-03-09 13:00:25 +0100  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Don't seek for PLAY if the position will not change
	  https://bugzilla.gnome.org/show_bug.cgi?id=745704

2015-03-09 10:21:49 +0100  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Don't include payload type in the caps for framesize
	  When the sdp media attribute framesize are converted to caps
	  the <payload> should not be included.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=725335
	  Based on the patch for rtspsrc by Linus Svensson <linussn@axis.com>

2014-02-26 22:34:06 +0100  Linus Svensson <linussn@axis.com>

	* gst/rtsp-server/rtsp-sdp.c:
	  rtsp-sdp: add payload type to the sdp framesize attribute
	  The sdp framesize attribute is desribed in RFC6064. It is specified
	  for payloading of H263 and has the following form
	  a=framesize:<payload type> <width>-<height>. The <width>-<height> part
	  should be added to the caps in a payloader and the <payload type> should
	  be added by the rtsp-server.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=725334

2015-03-03 13:51:01 +0000  Luis de Bethencourt <luis.bg@samsung.com>

	* examples/test-uri.c:
	  examples: test-uri: fix tainted variable
	  Insignificant but this keeps Coverity happy.
	  CID #1268404

2015-03-03 01:49:42 +1100  Jan Schmidt <jan@centricular.com>

	* examples/.gitignore:
	* examples/Makefile.am:
	* examples/test-netclock-client.c:
	* examples/test-netclock.c:
	  examples: Add a simple example of network synch for live streams.
	  An example server and client that works for synchronising live streams
	  only - as it can't support pause/play.

2015-03-03 01:49:42 +1100  Jan Schmidt <jan@centricular.com>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	  rtsp-media-factory: Add functions to set/get the media gtype
	  Allow specifying the GType of a GstRtspMedia subclass to create
	  as a simpler way to get the factory to create a custom
	  GstRtspMedia sub-class, without subclassing GstRtspMediaFactory.

2015-02-27 17:45:42 +0100  Gregor Boirie <gregor.boirie@parrot.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: fix double unlock in _get_buffer_size()
	  Fixes an abort when calling gst_rtsp_media_get_buffer_size()
	  because of double g_mutex_unlock () usage.
	  https://bugzilla.gnome.org/show_bug.cgi?id=745434

2015-02-19 10:43:16 +0200  Kent-Inge Ingesson <kenti@axis.com>

	* gst/rtsp-server/rtsp-session-pool.c:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-session.h:
	  rtsp-session: Use monotonic time for RTSP session timeout
	  Changed RTSP session timeout handling to monotonic time
	  and deprecating the API for current system time.
	  This fixes timeouts when the system time changes.
	  https://bugzilla.gnome.org/show_bug.cgi?id=743346

2015-02-13 12:21:16 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	  rtsp-client: Only error out in PLAY if seeking actually failed
	  If the media was just not seekable, we continue from whatever position we are
	  and let the client decide if that is what is wanted or not.
	  Only if the actual seek failed, we can't really recover and should error out.

2015-02-12 10:46:28 +0100  Andreas Frisch <fraxinas@opendreambox.org>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Add necessary queues between tee and multiudpsink
	  https://bugzilla.gnome.org/show_bug.cgi?id=744379

2015-02-12 16:48:46 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: If seeking fails, don't wait forever for the media to preroll again
	  Instead error out properly the same way as if the SEEKING query already
	  failed.

2015-02-11 17:24:38 +0000  Tim-Philipp Müller <tim@centricular.com>

	* gst/rtsp-server/rtsp-stream.h:
	  rtsp-stream: minor code formatting fix

2015-02-10 16:39:58 +0000  Luis de Bethencourt <luis.bg@samsung.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: fix logic for collect_streams
	  Fix the logic of gst_rtsp_media_collect_streams() so after looping collecting
	  all streams it knows if it got any, and can check if the transport mode is OK.
	  CID #1268400

2015-02-09 10:21:50 +0100  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Don't set the transport mode based on what elements we find
	  Just print a warning if the one that was set before disagrees with what
	  elements we found. It must already be set to something before as this
	  function is called after we received the SDP from ANNOUNCE in RECORD mode,
	  and we would reject ANNOUNCE if the RECORD flag was not set.

2015-02-08 18:05:50 +0000  Tim-Philipp Müller <tim@centricular.com>

	* tests/check/gst/rtspserver.c:
	  tests: rtspserver: rename shadowed variable
	  We have two different 'sink' variables here,
	  rename one of them for clarity.

2015-02-08 12:08:36 +0000  Tim-Philipp Müller <tim@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: fix awkward if clause

2015-02-06 19:34:17 +0000  Tim-Philipp Müller <tim@centricular.com>

	* examples/test-uri.c:
	  examples: test-uri: improve uri argument handling and accept file names
	  Print an error if the argument passed is not a URI and can't
	  be converted into one, or no arguments have been provided.

2015-02-06 19:15:40 +0000  Tim-Philipp Müller <tim@centricular.com>

	* examples/test-uri.c:
	  examples: test-uri: don't remove mount point after 10 seconds
	  It's very irritating when trying to test stuff repeatedly
	  and serves no real purpose other than showing that it can
	  be done.

2015-01-21 17:32:21 +0000  Tim-Philipp Müller <tim@centricular.com>

	* examples/.gitignore:
	  examples: add new test-record to .gitignore

2015-01-28 18:54:01 +0100  Sebastian Dröge <sebastian@centricular.com>

	* examples/test-record.c:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* tests/check/gst/rtspserver.c:
	  rtsp-media: Use flags to distinguish between PLAY and RECORD media

2015-01-28 17:49:16 +0100  Sebastian Dröge <sebastian@centricular.com>

	* examples/test-record.c:
	  test-record: Set latency for playback-style example to 2s instead of 200ms

2015-01-21 17:27:56 +0000  Tim-Philipp Müller <tim@centricular.com>

	* tests/check/gst/rtspserver.c:
	  tests: add some unit tests for ANNOUNCE and RECORD
	  https://bugzilla.gnome.org/show_bug.cgi?id=743175

2015-01-21 16:32:44 +0000  Tim-Philipp Müller <tim@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: fix a couple of leaks in handle_announce

2015-01-19 13:20:39 +0100  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  rtsp-media: Expose latency setting for setting the rtpbin latency

2015-01-17 10:28:13 +0100  Sebastian Dröge <sebastian@centricular.com>

	* examples/test-record.c:
	  test-record: Use GOptionContext to parse the server port and take the pipeline from the commandline

2015-01-16 20:48:42 +0100  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Put the timestamp of receival of the initial packet over TCP on the first buffer

2015-01-09 12:40:47 +0100  Sebastian Dröge <sebastian@centricular.com>

	* examples/Makefile.am:
	* examples/test-record.c:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-session-media.c:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  Add initial support for RECORD
	  We currently only support media that is RECORD or PLAY only, not both at once.
	  https://bugzilla.gnome.org/show_bug.cgi?id=743175

2015-01-30 12:50:20 +0100  Anila Balavan <anilabn@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: RTCP and RTP transport cache cookies seperated
	  RTCP packets were not sent because the same tr_cache_cookie was used for
	  both RTP and RTCP. So only one of the tr_cache lists were populated
	  depending on which one was sent first. If the tr_cache list is not
	  populated then no packets can be sent. Most often this happened to be
	  RTCP. Now seperate RTCP and RTP transport cache cookies are added which
	  resulted in both the tr_cache_lists to be populated regardless of which
	  one was sent first.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=743734

2015-01-21 14:57:03 +0000  Tim-Philipp Müller <tim@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: fix false compiler warning
	  rtsp-stream.c:3034: error: ‘visited’ may be used uninitialized in this function

2015-01-19 20:35:15 +0000  Tim-Philipp Müller <tim@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: log interleaved data received

2015-01-19 20:18:20 +0000  Tim-Philipp Müller <tim@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: fix unintentional fallthrough to debug warning when receiving interleaved data

2015-01-19 13:09:20 +0100  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: If we have a single-stream media and SETUP contains no control, use the one and only stream

2015-01-18 19:08:36 +0100  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: Use a random session ID in the SDP
	  RFC4566 Section 5.2 says that it should make the username, session id,
	  nettype, addrtype and unicast address tuple globally unique. Always using
	  1188340656180883 is not going to guarantee that: https://xkcd.com/221/
	  Instead let's create a 64 bit random number, which at least brings us
	  closer to the goal of global uniqueness.
	  https://tools.ietf.org/html/rfc4566#section-5.2

2015-01-17 10:29:36 +0100  Sebastian Dröge <sebastian@centricular.com>

	* examples/test-launch.c:
	* examples/test-mp4.c:
	* examples/test-ogg.c:
	* examples/test-uri.c:
	  examples: Don't call gst_init() and gst_get_option_group()
	  The latter calls the former at the appropriate time.

2015-01-16 20:04:01 +0100  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: Drop trailing \0 of RTSP DATA messages
	  We add a trailing \0 in GstRTSPConnection to make parsing of
	  string message bodies easier (e.g. the SDP from DESCRIBE) but
	  for actual data this means we have to drop it or otherwise
	  create invalid data.

2015-01-16 11:10:20 +0100  Göran Jönsson <goranjn@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Have one copy of the transports cache for RTP and RTCP each
	  Fixes crash when two threads access handle_new_sample() at the same
	  time, one for RTP, one for RTCP.
	  Otherwise, when iterating over the transports cache, it might be modified by
	  another thread at the same time if the transports cookie has changed.
	  https://bugzilla.gnome.org/show_bug.cgi?id=742954

2015-01-15 19:34:20 +0100  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Set format=TIME on our app sources for TCP

2015-01-13 15:29:29 +0100  Sebastian Rasmussen <sebrn@axis.com>

	* gst/rtsp-server/rtsp-session-pool.c:
	  Revert "rtsp-session-pool: Make sure session IDs are properly URI-escaped"
	  This reverts commit 935e8f852d050b4939f1d0f44b38e9b55a2fbe36.
	  RFC 2326 states that session IDs may consist of alphanumeric as well as
	  the safe characters $-_.+ -- N.B. the percent character is not allowed.
	  Previously the session ID was URI-escaped, this meant that any character
	  which was not alphanumeric or any of the characters +-._~ would be
	  percent encoded. While the RFC (surprisingly) mentions that linear white
	  space in session IDs should be URI-escaped, it does not say anything
	  about other characters. Moreover no white space is allowed in the
	  session ID. Finally the percent character which is the result of
	  URI-escaping is not allowed in a session ID.
	  So there is no reason to do any URI-escaping, and now it is removed.
	  https://bugzilla.gnome.org/show_bug.cgi?id=742869

2015-01-12 16:14:12 +0100  Stefan Sauer <ensonic@users.sf.net>

	* common:
	  Automatic update of common submodule
	  From f2c6b95 to bc76a8b

2014-12-31 13:04:57 +0000  Tim-Philipp Müller <tim@centricular.com>

	* Makefile.am:
	  Fix 'make check' from top-level directory

2014-12-30 18:13:49 +0530  Nirbheek Chauhan <nirbheek@centricular.com>

	* examples/test-launch.c:
	* examples/test-mp4.c:
	* examples/test-ogg.c:
	* examples/test-uri.c:
	  examples: Add command-line parsing and take a 'port' argument
	  This allows users to run multiple servers on different ports for testing.
	  Only done for examples that actually take arguments and hence are capable of
	  outputting different streams for each instance on each port.
	  https://bugzilla.gnome.org/show_bug.cgi?id=742115

2014-12-29 12:06:50 +0100  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  rtsp-client: Add a send_message default signal handler
	  This allows subclasses to easily hook into the response sending
	  mechanism without doing everything from a signal, which seems
	  awkward from subclasses.

2014-12-18 10:56:44 +0100  Sebastian Dröge <sebastian@centricular.com>

	* common:
	  Automatic update of common submodule
	  From ef1ffdc to f2c6b95

2014-12-17 20:02:05 +0100  Sebastian Rasmussen <sebras@hotmail.com>

	* Makefile.am:
	* configure.ac:
	  configure: add --disable-examples switch
	  https://bugzilla.gnome.org/show_bug.cgi?id=741678

2014-12-01 23:42:34 +1100  Matthew Waters <matthew@centricular.com>

	* examples/.gitignore:
	* examples/Makefile.am:
	* examples/test-video-rtx.c:
	  examples: add a retransmisison example implementing RFC4588
	  Currently only SSRC-multiplexed rtx streams are supported

2014-12-16 16:46:15 +0100  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Fix some minor memory leaks

2014-12-16 16:46:06 +0100  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Some minor cleanup

2014-12-16 16:42:13 +0100  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Fix compiler warnings
	  rtsp-stream.c:1351:3: error: non-void function 'gst_rtsp_stream_get_retransmission_time' should return a value [-Wreturn-type]
	  g_return_if_fail (GST_IS_RTSP_STREAM (stream));
	  ^
	  rtsp-stream.c:1384:3: error: non-void function 'gst_rtsp_stream_get_retransmission_pt' should return a value [-Wreturn-type]
	  g_return_if_fail (GST_IS_RTSP_STREAM (stream));
	  ^

2014-11-27 01:12:36 +1100  Matthew Waters <matthew@centricular.com>

	* docs/libs/gst-rtsp-server-sections.txt:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-sdp.c:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  media: implement ssrc-multiplexed retransmission support
	  based off RFC 4588 and the server-rtpaux example in -good

2014-11-28 12:45:14 +0100  Göran Jönsson <goranjn@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-stream-transport.c:
	* gst/rtsp-server/rtsp-stream.c:
	  rtsp: Ref transports in hash table.
	  Also ref streams for transports.
	  This solves a crash when reciving a rtcp after teardown but before
	  client finalize.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=740845

2014-11-27 17:13:05 +0100  Edward Hervey <bilboed@bilboed.com>

	* common:
	  Automatic update of common submodule
	  From 7bb2bce to ef1ffdc

2014-11-07 12:48:53 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: refactor cleanup of cached media

2014-10-23 13:39:10 +0200  Linus Svensson <linussn@axis.com>

	* tests/check/gst/client.c:
	  tests: Remove FIXME
	  The session leak is now fixed, lets remove those FIXME comments.

2014-10-23 17:54:37 +0200  Linus Svensson <linussn@axis.com>

	* tests/check/gst/rtspserver.c:
	  tests: Test to setup two sessions on one connection
	  https://bugzilla.gnome.org/show_bug.cgi?id=739112

2014-10-24 12:05:27 +0200  Linus Svensson <linussn@axis.com>

	* tests/check/gst/rtspserver.c:
	  tests: Test setup with tcp transport
	  https://bugzilla.gnome.org/show_bug.cgi?id=739112

2014-10-24 12:04:54 +0200  Linus Svensson <linussn@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: Configure transport after creating session media
	  The default implementation of configure_client_transport() in
	  rtsp-client uses the session media when it chooses channels for
	  interleaved traffic.
	  https://bugzilla.gnome.org/show_bug.cgi?id=739112

2014-10-23 12:54:03 +0200  Linus Svensson <linussn@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-session-media.c:
	  client: Stop caching media in client when doing setup
	  If the media has been managed by a session media, it should not be
	  cached in the client any longer. The GstRTSPSessionMedia object is now
	  responsible for unpreparing the GstRTSPMedia object using
	  gst_rtsp_media_unprepare(). Unprepare the media when finalizing the
	  session media.
	  https://bugzilla.gnome.org/show_bug.cgi?id=739112

2014-10-31 23:01:53 -0700  Aleix Conchillo Flaqué <aleix@oblong.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: unref srtp decoder when leaving bin
	  https://bugzilla.gnome.org/show_bug.cgi?id=739481

2014-10-29 21:01:39 -0700  Aleix Conchillo Flaqué <aleix@oblong.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: mikey memory leaks
	  https://bugzilla.gnome.org/show_bug.cgi?id=739383

2014-10-27 18:01:35 +0100  Sebastian Dröge <sebastian@centricular.com>

	* common:
	  Automatic update of common submodule
	  From 84d06cd to 7bb2bce

2014-10-24 17:48:04 +0100  Tim-Philipp Müller <tim@centricular.com>

	* Makefile.am:
	  Parallelise 'make check-valgrind'

2014-10-21 13:04:14 +0100  Tim-Philipp Müller <tim@centricular.com>

	* common:
	  Automatic update of common submodule
	  From a8c8939 to 84d06cd

2014-10-21 13:00:49 +0200  Stefan Sauer <ensonic@users.sf.net>

	* common:
	  Automatic update of common submodule
	  From 36388a1 to a8c8939

2014-10-01 07:12:30 -0400  Vincent Penquerc'h <vincent.penquerch@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: deactivate media when shutting down from paused
	  This was only done when going directly from playing.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=737829

2014-10-20 15:40:59 -0700  Aleix Conchillo Flaqué <aleix@oblong.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-context.h:
	  rtsp-client: add stream transport to context
	  We add the stream transport to the context so we can get the configured
	  client stream transport in the setup request signal.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=738905

2014-10-02 12:02:48 -0700  Aleix Conchillo Flaqué <aleix@oblong.com>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: release lock even not all transports have been removed
	  We don't want to keep the lock even we return FALSE because not all the
	  transports have been removed. This could lead into a deadlock.
	  https://bugzilla.gnome.org/show_bug.cgi?id=737797

2014-10-10 18:43:00 -0400  Olivier Crête <olivier.crete@ocrete.ca>

	* gst/rtsp-server/rtsp-sdp.c:
	  rtsp-sdp: Rename clock-base and seqnum-base to timestamp-offset and seqnum-offset
	  These were renamed in GstRTPBasePayload in 1.0

2014-09-30 16:36:51 -0700  Aleix Conchillo Flaqué <aleix@oblong.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: set session media to NULL without the lock
	  We need to set session medias to NULL without the client lock otherwise
	  we can end up in a deadlock if another thread is waiting for the lock
	  and media unprepare is also waiting for that thread to end.
	  https://bugzilla.gnome.org/show_bug.cgi?id=737690

2014-09-30 23:22:45 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Set state to UNPREPARING in all cases

2014-09-30 19:17:04 +0200  Ognyan Tonchev <otonchev@gmail.com>

	* gst/rtsp-server/rtsp-media.c:
	  media: set state to unpreparing when unprepare is initiated
	  https://bugzilla.gnome.org/show_bug.cgi?id=737675

2014-09-30 01:35:02 +0200  Sebastian Rasmussen <sebrn@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: Remove backlog limit while processings requests
	  If the backlog limit is kept two cases of deadlocks may be
	  encountered when streaming over TCP. Without the backlog
	  limit this deadlocks can not happen, at the expence of
	  memory usage.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=737631

2014-09-22 13:32:06 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: do not free main context before rtsp watch
	  https://bugzilla.gnome.org/show_bug.cgi?id=737110

2014-09-19 18:29:00 +0200  Branko Subasic <branko@axis.com>

	* tests/check/gst/rtspserver.c:
	  tests: Extend unit test timeout to accomodate for valgrind
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=736647

2014-09-19 18:28:50 +0200  Branko Subasic <branko@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-stream-transport.c:
	  rtsp-*: Treat sending packets to clients as keepalive
	  As long as gst-rtsp-server can successfully send RTP/RTCP data to
	  clients then the client must be reading. This change makes the server
	  timeout the connection if the client stops reading.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=736647

2014-09-19 18:28:30 +0200  Branko Subasic <branko@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: Allow backlog to grow while expiring session
	  Allow the send backlog in the RTSP watch to grow to unlimited size while
	  attempting to bring the media pipeline to NULL due to a session
	  expiring.  Without this change the appsink element cannot change state
	  because it is blocked while rendering data in the new_sample callback.
	  This callback will block until it has successfully put the data into the
	  send backlog. There is a chance that the send backlog is full at this
	  point which means that the callback may block for a long time, possibly
	  forever. Therefore the media pipeline may also be prevented from
	  changing state for a long time.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=736647

2014-09-22 09:30:39 +0200  Edward Hervey <bilboed@bilboed.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: Make old compilers happy
	  rtsp-client.c:2553:50: error: cast to pointer from integer of different size [-Werror=int-to-pointer-cast]
	  Just in case that guint8 doesn't fit in a pointer. Just in case ...

2014-09-16 11:41:52 +0200  Göran Jönsson <goranjn@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: raise the backlog limits before pausing
	  We need to raise the backlog limits before pausing the pipeline or else
	  the appsink might be blocking in the render method in wait_backlog() and
	  we would deadlock waiting for paused.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=736322

2014-09-16 11:29:38 +0200  Göran Jönsson <goranjn@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: make define for the WATCH_BACKLOG
	  See https://bugzilla.gnome.org/show_bug.cgi?id=736322

2014-09-09 18:11:39 +0200  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: simplify session transport handling
	  link/unlink of the transport in a session was done to keep track of all
	  TCP transports and to send RTP/RTCP data to the streams. We can simplify
	  that by putting all the TCP transports in a hashtable indexed with the
	  channel number.
	  We also don't need to link/unlink the transports when we pause/resume
	  the streams. The same effect is already achieved when we pause/play the
	  media. Indeed, when we pause the media, the transport is removed from
	  the media and the callbacks will not be called anymore.
	  See https://bugzilla.gnome.org/show_bug.cgi?id=736041

2014-09-09 18:10:12 +0200  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-stream-transport.c:
	* gst/rtsp-server/rtsp-stream-transport.h:
	  stream-transport: make method to handle received data
	  Make a method to handle the data received on a channel. It sends the
	  data to the stream of the transport on the RTP or RTCP pads based on
	  the channel number.

2014-09-15 16:54:05 +0200  Wim Taymans <wtaymans@redhat.com>

	* examples/test-mp4.c:
	  test: add example of dumping RTCP reports

2014-09-08 09:26:23 +0200  Srimanta Panda <srimanta@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  rtsp-media: Make sure that sequence numbers are monotonic after pause
	  The sequence number is not monotonic for RTP packets after pause. The
	  reason is basepayloader generates a randon sequence number when the
	  pipeline goes from ready to pause. With this fix generation of sequence
	  number will be monotonic when going from pause to play request.
	  https://bugzilla.gnome.org/show_bug.cgi?id=736017

2014-08-28 13:35:15 +0200  Göran Jönsson <goranjn@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: Protect saved clients watch with a mutex
	  Fixes a crash when close() is called while merging clients
	  in handle_tunnel(). In that case close() would destroy the
	  watch while it is still being used in handle_tunnel().
	  https://bugzilla.gnome.org/show_bug.cgi?id=735570

2014-08-13 17:22:16 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Remove the multicast group udp sources when removing from the bin

2014-08-05 16:12:19 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  rtsp-media: Query position and stop time only on the RTP parts of the pipeline
	  The RTCP parts, in specific the RTCP udpsinks, are not flushed when
	  seeking and will always continue counting the time. This leads to
	  the NPT after a backwards seek to be something completely different
	  to the actual seek position.
	  https://bugzilla.gnome.org/show_bug.cgi?id=732644

2014-08-09 14:41:35 +0100  Tim-Philipp Müller <tim@centricular.com>

	* examples/test-appsrc.c:
	  examples: fix another reference leak
	  gst_rtsp_media_get_element() returns a new ref.

2014-07-17 01:34:17 +0200  Sebastian Rasmussen <sebras@hotmail.com>

	* examples/test-appsrc.c:
	  examples: unref element after usage
	  gst_bin_get_by_name_recurse_up() returns an element
	  reference that must be unreffed after usage.
	  https://bugzilla.gnome.org/show_bug.cgi?id=734546

2014-07-02 22:45:07 +0530  Arun Raghavan <arun@accosted.net>

	* gst/rtsp-server/rtsp-media.c:
	  signals: Fix copy-pasto in target-state signal offset

2014-08-01 10:46:44 +0200  Edward Hervey <edward@collabora.com>

	* Makefile.am:
	* common:
	  Makefile: Add usage of build-checks step
	  Allows building checks without running them

2014-06-25 18:23:10 +0200  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Listen on the multicast group for RTP/RTCP packets
	  When a UDP multicast transport is used it is expected that the server listens
	  for RTP and RTCP packets on the multicast group with the corresponding port.
	  Without this we will never get RTCP packets from clients in multicast mode.
	  https://bugzilla.gnome.org/show_bug.cgi?id=732238

2014-07-19 18:04:52 +0200  Sebastian Dröge <sebastian@centricular.com>

	* configure.ac:
	  Back to development

=== release 1.4.0 ===

2014-07-19 17:56:31 +0200  Sebastian Dröge <sebastian@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* configure.ac:
	* gst-rtsp-server.doap:
	  Release 1.4.0

2014-07-16 20:39:42 +0900  Hyunjun Ko <zzoonis@gmail.com>

	* gst/rtsp-server/rtsp-media.h:
	  media: correct misspelled words in description
	  https://bugzilla.gnome.org/show_bug.cgi?id=733244

=== release 1.3.91 ===

2014-07-11 12:19:08 +0200  Sebastian Dröge <sebastian@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* configure.ac:
	* gst-rtsp-server.doap:
	  Release 1.3.91

2014-07-10 17:37:45 +0200  Wim Taymans <wtaymans@redhat.com>

	* docs/libs/gst-rtsp-server-sections.txt:
	  docs: update docs

2014-07-10 17:10:06 +0200  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-server.c:
	  server: implement client REMOVE filter

2014-07-10 17:05:13 +0200  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  client: expose _close() method
	  Expose a previously internal close method to close the client
	  connection.

2014-07-10 12:20:15 +0200  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-session-pool.c:
	  session-pool: signal session-removed outside of the lock
	  Release the lock before emiting the session-removed signal.

2014-07-10 11:32:20 +0200  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-session-pool.c:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-stream.c:
	  filter: Release lock in filter functions
	  Release the object lock before calling the filter functions. We need to
	  keep a cookie to detect when the list changed during the filter
	  callback. We also keep a hashtable to make sure we only call the filter
	  function once for each object in case of concurrent modification.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=732950

2014-07-09 15:16:08 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: check if watch is set in handle_teardown()
	  The unit tests run without a watch

2014-07-09 14:19:10 +0200  Ognyan Tonchev <ognyan@axis.com>

	* tests/check/gst/client.c:
	  client tests: send teardown to cleanup session

2014-07-09 14:17:46 +0200  Ognyan Tonchev <ognyan@axis.com>

	* tests/check/gst/rtspserver.c:
	  server tests: send teardown to cleanup session

2014-07-09 15:01:31 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: keep ref to client for the session removed handler
	  This extra ref will be dropped when all client sessions have been
	  removed. A session is removed when a client sends teardown, closes its
	  endpoint of the TCP connection or the sessions expires.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=732226

2014-07-08 12:36:12 +0200  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-session.c:
	* tests/check/gst/client.c:
	  client: manage media in session as a last step
	  Once we manage a media in a session, we can't unmanage it anymore
	  without destroying it. Therefore, first check everything before we
	  manage the media, otherwise if something is wrong we have no way to
	  unmanage the media.
	  If we created a new session and something went wrong, remove the session
	  again. Fixes a leak in the unit test.

2014-07-03 19:52:42 +0100  Tim-Philipp Müller <tim@centricular.com>

	* examples/test-mp4.c:
	* examples/test-ogg.c:
	  examples: print 'stream ready at url' for mp4 and ogg example

2014-07-02 16:04:53 +0200  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-sdp.c:
	  rtsp: fix for MIKEY api change

2014-07-01 16:12:13 +0200  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: free watch context only once
	  The watch context is freed when the source is destroyed. Avoids
	  a CRITICAL when we try to unref the context twice.

2014-07-01 15:02:15 +0200  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: fix build

2014-07-01 14:41:14 +0200  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: protect sessions with lock
	  Protect the list of sessions with the lock.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=732226

2014-07-01 12:13:47 +0200  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-client.c:
	  Client: keep a ref to the session
	  Don't just keep a weak ref to the session objects but use a hard ref. We
	  will be notified when a session is removed from the pool (expired) with
	  the new session-removed signal.
	  Don't automatically close the RTSP connection when all the sessions of
	  a client are removed, a client can continue to operate and it can create
	  a new session if it wants. If you want to remove the client from the
	  server, you have to use gst_rtsp_server_client_filter() now.
	  Based on patch from Ognyan Tonchev <ognyan.tonchev at axis.com>
	  See https://bugzilla.gnome.org/show_bug.cgi?id=732226

2014-06-30 15:14:34 +0200  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-session-pool.c:
	* gst/rtsp-server/rtsp-session-pool.h:
	  session-pool: add session-removed signal
	  Add a signal to be notified when a session is removed from the pool.

2014-06-30 00:37:59 -0700  Evan Nemerson <evan@nemerson.com>

	* gst/rtsp-server/Makefile.am:
	* gst/rtsp-server/rtsp-server.h:
	  Make rtsp-server.h a single-include header, use it for G-I
	  https://bugzilla.gnome.org/show_bug.cgi?id=732411

=== release 1.3.90 ===

2014-06-28 11:48:29 +0200  Sebastian Dröge <sebastian@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* configure.ac:
	* gst-rtsp-server.doap:
	  Release 1.3.90

2014-06-27 16:54:22 +0200  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: crypto can be NULL

2014-06-11 16:42:08 -0700  Evan Nemerson <evan@nemerson.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-mount-points.c:
	  introspection: add missing allow-none annotations
	  https://bugzilla.gnome.org/show_bug.cgi?id=730952

2014-06-11 16:38:36 -0700  Evan Nemerson <evan@nemerson.com>

	* gst/rtsp-server/rtsp-address-pool.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-session-media.c:
	* gst/rtsp-server/rtsp-session-pool.c:
	* gst/rtsp-server/rtsp-stream-transport.c:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-token.c:
	  introspection: add (nullable) annotations to return values
	  https://bugzilla.gnome.org/show_bug.cgi?id=730952

2014-06-24 09:48:45 +0200  Evan Nemerson <evan@nemerson.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-stream.c:
	  gi: improve annotations
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=730953

2014-06-24 09:43:44 +0200  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-server.c:
	  signals: use generic marshal function
	  Use the generic C marshal function.
	  Use more explicit type instead of G_TYPE_POINTER

2014-06-24 09:42:47 +0200  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-context.h:
	  context: add type macro

2014-06-24 09:34:50 +0200  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-sdp.c:
	* gst/rtsp-server/rtsp-sdp.h:
	  sdp: hide key length defines
	  They don't have a namespace.

2014-06-22 19:37:31 +0200  Sebastian Dröge <sebastian@centricular.com>

	* configure.ac:
	  Back to development

=== release 1.3.3 ===

2014-06-22 19:36:14 +0200  Sebastian Dröge <sebastian@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* configure.ac:
	* gst-rtsp-server.doap:
	  Release 1.3.3

2014-05-20 14:48:37 -0700  Aleix Conchillo Flaqué <aleix@oblong.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-sdp.c:
	* gst/rtsp-server/rtsp-sdp.h:
	  mikey: add different key length parameters
	  Add encryption and authentication key length parameters to MIKEY. For
	  the encoders, the key lengths are obtained from the cipher and auth
	  algorithms set in the caps. For the decoders, they are obtained while
	  parsing the key management from the client.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=730472

2014-03-16 17:29:48 +0100  Ognyan Tonchev <otonchev@gmail.com>

	* tests/check/gst/stream.c:
	  stream tests: Make sure we get right multicast address from stream
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=731577

2014-06-12 13:49:17 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: ref the context until rtsp watch is alive
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=731569

2014-06-12 13:48:44 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: Destroy the rtsp watch after connection close

2014-06-13 16:46:06 +0200  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-media.c:
	  media: fix confusing comment

2014-05-27 12:36:52 +0200  Göran Jönsson <goranjn@axis.com>

	* gst/rtsp-server/rtsp-session.c:
	  rtsp-session: Timeout in header.
	  Adding the possbilty to always have timout in header.
	  This is configurabe with setting "timeout-always-visible".
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=728264

2014-05-21 13:23:40 +0200  Sebastian Dröge <sebastian@centricular.com>

	* configure.ac:
	  Back to development

=== release 1.3.2 ===

2014-05-21 13:06:36 +0200  Sebastian Dröge <sebastian@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* common:
	* configure.ac:
	* gst-rtsp-server.doap:
	  Release 1.3.2

2014-05-21 10:54:05 +0200  Sebastian Dröge <sebastian@centricular.com>

	* common:
	  Automatic update of common submodule
	  From 211fa5f to 1f5d3c3

2014-05-20 15:57:30 +0200  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: store TCP ports in transport
	  Store the TCP ports in the transport when we are doing RTSP over TCP.
	  This way, we can easily get to the ports from the transport.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=729776

2014-05-15 18:15:04 -0700  Aleix Conchillo Flaqué <aleix@oblong.com>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: add signals for new RTP/RTCP encoders
	  New signals to allow the user to configure the dynamically created
	  encoders.
	  https://bugzilla.gnome.org/show_bug.cgi?id=730228

2014-05-14 09:31:31 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media: Make suspend()/unsuspend() virtual
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=730109

2014-05-09 17:25:07 -0700  Aleix Conchillo Flaqué <aleix@oblong.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: fix send-message signal marshaller
	  Use generic marshalling for the send-message signal. It has
	  two POINTER arguments, not just one.
	  https://bugzilla.gnome.org/show_bug.cgi?id=729900

2014-05-09 15:08:48 +0200  Wim Taymans <wtaymans@redhat.com>

	* tests/check/gst/media.c:
	  tests: add and remove pads only once
	  In this test we simulate a dynamic pad by watching the caps event.
	  Because of renegotiation in the base payloader now, this caps is sent
	  multiple times but we can only deal with 1 invocation, use a variable to
	  only 'add and remove' the pad once.

2014-05-02 20:06:29 +0100  Tim-Philipp Müller <tim@centricular.com>

	* tests/check/gst/rtspserver.c:
	  tests: add unit test for correct handling of Require headers
	  https://bugzilla.gnome.org/show_bug.cgi?id=729426

2014-05-02 19:59:23 +0100  Tim-Philipp Müller <tim@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: handle Require headers and respond with OPTION_NOT_SUPPORTED
	  Servers must handle Require headers and must report a failure
	  if they don't handle any of the Required options, see RFC 2326,
	  section 12.32: https://tools.ietf.org/html/rfc2326#page-54
	  https://bugzilla.gnome.org/show_bug.cgi?id=729426

2014-05-03 20:48:43 +0200  Sebastian Dröge <sebastian@centricular.com>

	* configure.ac:
	  Back to development

=== release 1.3.1 ===

2014-05-03 18:40:24 +0200  Sebastian Dröge <sebastian@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* configure.ac:
	* gst-rtsp-server.doap:
	  Release 1.3.1

2014-05-03 10:18:00 +0200  Sebastian Dröge <sebastian@centricular.com>

	* common:
	  Automatic update of common submodule
	  From bcb1518 to 211fa5f

2014-05-02 19:58:15 +0100  Tim-Philipp Müller <tim@centricular.com>

	* .gitignore:
	  Update .gitignore

2014-05-02 19:57:23 +0100  Tim-Philipp Müller <tim@centricular.com>

	* tests/check/gst/sessionmedia.c:
	  tests: fix memory leak in sessionmedia unit test

2014-05-01 06:17:06 +0200  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: emit a signal before sending a message
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=728970

2014-05-01 06:07:08 +0200  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: pass context to send_message
	  Pass the current context to send_message, we will need it later.

2014-05-01 05:29:54 +0200  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: fix typo in comment

2014-04-14 15:17:14 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	  media: Do not stop thread twice if default_prepare() fails

2014-04-15 16:51:17 +0200  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: set the watch to flushing before going to NULL
	  First set the watch to flushing so that we unblock any current and
	  future attempt to send data on the watch, Then set the pipeline to
	  NULL.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=728153

2014-04-11 23:52:49 +0200  Linus Svensson <linusp.svensson@gmail.com>

	* gst/rtsp-server/rtsp-session-pool.c:
	* tests/check/gst/sessionpool.c:
	  rtsp-session-pool: Fixes annotation
	  Fixes annotation for gst_rtsp_session_pool_create() and memory leaks
	  in the sessionpool test.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=728060

2014-04-09 16:44:21 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media: make media_prepare virtual
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=728029

2014-04-12 05:57:00 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	* tests/check/gst/media.c:
	  media: stop the thread in more error cases

2014-04-12 05:53:15 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	* tests/check/gst/media.c:
	  media: allow NULL as the thread
	  Use the default context whan passing a NULL thread.

2014-04-10 16:39:11 +0100  Vincent Penquerc'h <vincent.penquerch@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: indent cleanup
	  Coverity was moaning about unreachable code, and I think it was just
	  confused by { being before the label. We'll see if it pops up again.
	  Coverity 1197705

2014-04-01 13:04:21 +0200  Göran Jönsson <goranjn@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	  client: Add drop-backlog property
	  When we have too many messages queued for a client (currently hardcoded
	  to 100) we overflow and drop the messages. Add a drop-backlog property
	  to control this behaviour. Setting this property to FALSE will retry
	  to send the messages to the client by waiting for more room in the
	  backlog.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=725898

2014-04-03 12:19:51 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: support for POST before GET when setting up a tunnel

2014-04-02 12:03:32 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: remove watch of the second client after http tunnel setup
	  The second client will be freed after the HTTP tunnel has been set up.
	  Make sure it's RTSP watch is never dispatched again.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=727488

2014-03-31 11:00:11 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	* tests/check/gst/media.c:
	  media: Make media_prepare() fail if port allocation fails
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=727376

2014-04-01 16:55:13 +0200  Linus Svensson <linussn@axis.com>

	* tests/check/gst/media.c:
	  media test: cleanup the thread pool in tests

2014-04-01 13:16:26 +0200  Linus Svensson <linussn@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	* tests/check/gst/media.c:
	  rtsp-media: Unblock blocked streams in unprepare
	  The streams will be blocked when a live media is prepared.
	  The streams should be unblocked in gst_rtsp_media_unprepare.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=727231

2014-04-08 14:49:41 +0200  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-media.c:
	  media: release the state lock when going to NULL
	  Set our state to UNPREPARING and release the state-lock before
	  setting the pipeline to the NULL state. This way, any pad-added
	  callback will be able to take the state-lock and check that we are now
	  unpreparing instead of deadlocking.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=727102

2014-04-08 12:08:17 +0200  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-media.c:
	  media: protect status with lock
	  Make sure we only update the status with the lock.

2014-04-04 17:39:36 +0200  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-sdp.c:
	  rtsp: update for MIKEY API changes

2014-04-03 12:52:51 +0200  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: parse the mikey response from the client
	  Parse the mikey response from the client and update the policy for
	  each SSRC.

2014-04-02 12:36:16 +0200  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  stream: add method to set crypto info
	  Make a method to configure the crypto information of a stream.
	  Set udpsrc in READY instead of PAUSED so that we can configure caps
	  later.

2014-04-03 12:57:13 +0200  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: cleanup error paths

2014-04-02 12:27:24 +0200  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-media.c:
	  media: fix docs

2014-03-25 12:42:39 +0100  Wim Taymans <wtaymans@redhat.com>

	* examples/test-video.c:
	  test: enable SRTP only on RTSPS
	  We only want to enable SRTP when doing rtsp over TLS so that we can
	  exchange the keys in a secure way.

2014-03-25 12:41:33 +0100  Wim Taymans <wtaymans@redhat.com>

	* examples/test-video.c:
	  test: print an error on failure

2014-03-13 17:35:21 +0100  Wim Taymans <wtaymans@redhat.com>

	* configure.ac:
	* examples/test-video.c:
	* gst/rtsp-server/rtsp-sdp.c:
	* gst/rtsp-server/rtsp-stream.c:
	* tests/check/Makefile.am:
	  stream: add SRTP support
	  Install srtp encoder and decoder elements in rtpbin
	  Add MIKEY in SDP

2014-03-16 19:45:26 +0100  Sebastian Rasmussen <sebras@hotmail.com>

	* tests/check/Makefile.am:
	* tests/check/gst/sessionpool.c:
	  tests: Add unit tests for sessionpool
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=726470

2014-03-22 13:24:27 +0100  Sebastian Rasmussen <sebras@hotmail.com>

	* tests/check/gst/threadpool.c:
	  tests: Improve code coverage of rtsp-threadpool tests
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=726873

2014-03-23 21:26:00 +0100  Sebastian Rasmussen <sebras@hotmail.com>

	* tests/check/gst/sessionmedia.c:
	  tests: Improve code coverage for rtsp-session-media
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=726940

2014-03-23 21:24:48 +0100  Sebastian Rasmussen <sebras@hotmail.com>

	  gobject-introspection: Add annotations to support language bindings
	  In addition a few cosmetic changes:
	  * Adjust the order of arguments
	  * Fix typo: occured -> occurred
	  * Fix indentation after Return:-clauses
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=726941

2014-03-14 19:03:24 +0100  Sebastian Rasmussen <sebras@hotmail.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Don't mix IPv4 and IPv6 addresses
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=726362

2014-03-13 14:27:15 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: take caps after the session manager
	  Take the caps for the SDP after they leave the rtpbin so that we can
	  also get the properties added by rtpbin elements.

2014-03-13 14:20:17 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: release lock while pushing out packets
	  Keep a cache of the transports and use this to iterate the transport
	  while pushing packets. This allows us to release the lock early.
	  See https://bugzilla.gnome.org/show_bug.cgi?id=725898

2014-03-06 13:52:02 +0100  David Svensson Fors <davidsf@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  rtsp-client: vmethod for modifying tunnel GET response
	  Add a vmethod tunnel_http_response where the response to the HTTP GET
	  for tunneled connections can be modified.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=725879

2014-03-03 16:56:53 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-sdp.c:
	  sdp: make 1 media line per profile
	  If we have multiple profiles (AVP or AVPF) for a stream, make one m=
	  line in the SDP for each profile. The client is then supposed to pick
	  one of the profiles in the SETUP request. Because the m= lines have the
	  same pt, the client also knows that only 1 option is possible.

2014-03-03 16:55:48 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	  factory: add profile property and pass to media and streams

2014-03-03 15:12:55 +0100  Wim Taymans <wtaymans@redhat.com>

	* examples/test-multicast.c:
	* gst/rtsp-server/rtsp-sdp.c:
	  sdp: pass multicast connection for multicast-only stream
	  Pass the multicast address of the stream in the connection info in the
	  SDP so that clients try a multicast connection first.
	  Only allow multicast connections in the test-multicast example. Also
	  increase the TTL a little.

2014-03-02 05:12:01 +0100  Sebastian Rasmussen <sebras@hotmail.com>

	* .gitignore:
	  .gitignore: Ignore gcov intermediate files
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=725484

2014-03-03 12:17:48 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: release some locks in error cases

2014-03-02 05:12:10 +0100  Sebastian Rasmussen <sebras@hotmail.com>

	  docs: Enable and fix gtk-doc warnings
	  * Makefile: Enable gtk-doc warnings, like the rest of GStreamer
	  * addresspool/mediafactory: Add missing annotation colon
	  * stream: Annotate return value
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=725528

2014-02-28 09:36:49 +0100  Sebastian Dröge <sebastian@centricular.com>

	* common:
	  Automatic update of common submodule
	  From fe1672e to bcb1518

2014-02-26 22:15:51 +0100  Stefan Sauer <ensonic@users.sf.net>

	* common:
	  Automatic update of common submodule
	  From 1a07da9 to fe1672e

2014-02-25 15:13:40 +0000  Tim-Philipp Müller <tim@centricular.com>

	* examples/Makefile.am:
	  examples: use LDADD for libs instead of LDFLAGS

2014-02-25 14:42:09 +0000  Tim-Philipp Müller <tim@centricular.com>

	* configure.ac:
	  configure: make sure releases are in .doap file

2014-02-25 14:11:00 +0000  Tim-Philipp Müller <tim@centricular.com>

	* examples/test-cgroups.c:
	  examples: test-cgroups: don't put code with side effects into g_assert()
	  The g_assert() might get compiled out with the right
	  compiler/preprocessor flags.

2014-02-25 14:07:50 +0000  Tim-Philipp Müller <tim@centricular.com>

	* examples/.gitignore:
	  examples: add cgroup test binary to .gitignore

2014-02-25 14:06:47 +0000  Tim-Philipp Müller <tim@centricular.com>

	* examples/test-cgroups.c:
	  examples: fix cgroup test build
	  Fixes build failure caused by compiler warning:
	  test-cgroups.c:82:35: error: no previous prototype for ‘gst_rtsp_cgroup_pool_get_type’ [-Werror=missing-prototypes]

2014-02-21 16:46:45 +0000  Tim-Philipp Müller <tim@centricular.com>

	* .gitignore:
	  .gitignore: ignore temp files created in the course of 'make check'

2014-02-18 09:44:34 +0100  Branko Subasic <branko@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: don't loose frames handling new PLAY request
	  If client supplied a range check if the range specifies the start point.
	  If not, then do an accurate seek to the current position. If a start
	  point was specified do do a key unit seek to make sure the streaming
	  starts with decodeable frames.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=724611

2014-02-18 16:58:45 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-media.c:
	  Revert "media: only flush when setting a new start position"
	  This reverts commit f67fc23aab59f28796bebf130504ff46ccb97b0a.
	  We need to do the flush in all cases, demuxer block currently for
	  non-flushing seeks.

2014-02-18 16:38:39 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-media.c:
	  media: only flush when setting a new start position
	  Only flush the pipeline when we change the start position with
	  a seek.
	  See https://bugzilla.gnome.org/show_bug.cgi?id=724611

2014-02-17 10:43:05 +0100  Göran Jönsson <goranjn@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: set ttl-mc before adding the socket
	  Set ttl-mc before adding the socket. Otherwise the value ttl-mc will
	  never be set on socket.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=724531

2014-02-11 14:20:39 -0800  Aleix Conchillo Flaqué <aleix@oblong.com>

	* gst/rtsp-server/rtsp-media.c:
	  media: stop thread if media is already prepared
	  in gst_rtsp_media_prepare() the thread is not used if media is already
	  prepared (e.g. media shared) so we want to stop the thread. otherwise, a
	  leak occurs.
	  https://bugzilla.gnome.org/show_bug.cgi?id=724182

2014-02-09 10:52:29 +0100  Sebastian Dröge <sebastian@centricular.com>

	* Makefile.am:
	  build: Ship gst-rtsp-server.doap file

2014-02-09 10:47:09 +0100  Sebastian Dröge <sebastian@centricular.com>

	* tests/check/gst/rtspserver.c:
	  tests: Fix another compiler warning with gcc

2014-02-09 10:45:28 +0100  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-mount-points.c:
	* gst/rtsp-server/rtsp-stream.c:
	* tests/check/gst/client.c:
	  rtsp-server: Fix lots of compiler warnings with clang

2014-02-09 10:41:14 +0100  Sebastian Dröge <sebastian@centricular.com>

	* configure.ac:
	* gst-rtsp-server.doap:
	* tests/Makefile.am:
	  configure: Synchronise with the configure scripts of the other modules

2014-02-09 10:25:44 +0100  Sebastian Dröge <sebastian@centricular.com>

	* configure.ac:
	  configure: Update version to 1.3.0.1 and require GStreamer 1.3.0

2014-02-09 10:19:50 +0100  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-stream.c:
	  Revert "rtsp-server: support build against last stable release"
	  This reverts commit 099a10f61f11413ad0ada8ee0b7b7ad1210b1b2f.
	  Let us require 1.2.3 now, which is going to be released in a few
	  minutes.

2014-02-07 16:39:49 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-session-media.c:
	* gst/rtsp-server/rtsp-stream-transport.c:
	  session: improve RTP-Info
	  Ignore streams that can't generate RTP-Info instead of failing.
	  Don't return the empty string when all streams are unconfigured but
	  return NULL so that we don't generate and empty RTP-Info header.
	  Improve docs a little.

2014-02-03 22:41:48 +0200  Andrey Utkin <andrey.krieger.utkin@gmail.com>

	* gst/rtsp-server/rtsp-session-media.c:
	  Don't free rtpinfo GString when it is NULL
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=723554

2014-02-06 09:48:05 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-media.c:
	  media: only set keyframe flag when modifying start
	  Only set the keyframe flag when we modify the start position. The
	  keyframe flag should probably be ignored when no change is requested but
	  until we can claim this is all documented properly and all demuxer
	  implement this, avoid setting the flag.
	  See also https://bugzilla.gnome.org/show_bug.cgi?id=723075

2014-02-06 09:03:50 +0100  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-thread-pool.c:
	  thread-pool: Unref source after mainloop has quit to avoid races in GLib
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=723741

2014-02-04 16:27:12 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: handle NULL seqnum and rtptime arguments

2014-01-31 15:02:22 +0100  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-thread-pool.c:
	* tests/check/gst/threadpool.c:
	  thread-pool: Unref reused threads in gst_rtsp_thread_stop()
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=723519

2014-02-04 10:14:45 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: add fallback for missing stats property
	  Use a fallback when the payloader does not have a stats property
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=723554

2014-01-30 10:45:56 +0100  Edward Hervey <bilboed@bilboed.com>

	* common:
	  Automatic update of common submodule
	  From f7bc1c3 to 1a07da9

2014-01-28 14:51:26 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: don't leak stats structure
	  Don't leak the stats structure and deal with NULL stats.

2014-01-22 22:03:14 +0100  Sebastian Rasmussen <sebrn@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: Get rtpinfo properties atomically from payloader
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=722844

2014-01-21 14:46:47 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-media.c:
	  media: refactor state change functions and signals
	  Make functions to set the target state and the pipeline state and emit
	  the signals from those functions.

2014-01-21 12:01:25 +0100  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media: add signal to notify of pending state changes

2014-01-12 16:55:21 +0000  Tim-Philipp Müller <tim@centricular.com>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-server: support build against last stable release
	  Until 1.2.3 is out with the new get_type function and we
	  can require that.

2014-01-07 15:28:05 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: fix compilation

2014-01-07 12:21:09 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  stream: add property to configure profiles

2014-01-07 12:28:47 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: let stream check supported transport
	  Delegate the check if a transport is allowed to the stream.
	  See https://bugzilla.gnome.org/show_bug.cgi?id=720696

2014-01-07 12:14:15 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  stream: add method to check supported transport
	  Add a method to check if a transport is supported

2013-12-27 13:11:45 +0100  Sebastian Dröge <sebastian@centricular.com>

	* configure.ac:
	  configure.ac: Only check for gstreamer-check, not check
	  We include check in gstreamer-check since quite some time now.

2013-12-26 17:02:50 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-session-media.c:
	* gst/rtsp-server/rtsp-stream-transport.c:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  stream: return clock-rate from get_rtpinfo
	  And use it to correct the rtptime to the requested start-time.
	  See https://bugzilla.gnome.org/show_bug.cgi?id=712198

2013-12-26 16:28:59 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-session-media.c:
	* gst/rtsp-server/rtsp-stream-transport.c:
	* gst/rtsp-server/rtsp-stream-transport.h:
	  session-media: calculate start-time

2013-12-26 14:43:35 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-stream-transport.c:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  stream: also return the running-time
	  Return the running-time in the rtpinfo as well.

2013-12-26 15:41:14 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-session-media.c:
	* gst/rtsp-server/rtsp-session-media.h:
	* gst/rtsp-server/rtsp-stream-transport.c:
	* gst/rtsp-server/rtsp-stream-transport.h:
	  session-media: let the session-media make the RTPInfo
	  Add method to create the RTPInfo for a stream-transport.
	  Add method to create the RTPInfo for all stream-transports in a
	  session-media.
	  Use the session-media RTPInfo code in client. This allows us to refactor
	  another method to link the TCP callbacks.

2013-12-20 16:39:07 -0800  Aleix Conchillo Flaqué <aleix@oblong.com>

	  mount-points: sort sequence before g_sequence_lookup
	  * gst/rtsp-server/rtsp-mount-points.c (gst_rtsp_mount_points_remove_factory):
	  sort sequence if dirty, otherwise lookup will fail.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=720855

2013-12-22 23:16:56 +0000  Tim-Philipp Müller <tim@centricular.com>

	* configure.ac:
	  configure: rename package from gst-rtsp to gst-rtsp-server
	  To match git module name and avoid confusion with the
	  rtsp lib in gst-plugins-base and rtsp plugin in -good.

2013-12-22 23:15:02 +0000  Tim-Philipp Müller <tim@centricular.com>

	* configure.ac:
	  configure: bump core/base/good requirement to 1.2.0
	  Bump to released stable version and make implicit
	  requirements explicit.

2013-12-22 23:04:48 +0000  Tim-Philipp Müller <tim@centricular.com>

	* autogen.sh:
	* common:
	* configure.ac:
	  Fix broken gettext setup which is not used anyway

2013-12-22 22:36:06 +0000  Tim-Philipp Müller <tim@centricular.com>

	* common:
	  Automatic update of common submodule
	  From dbedaa0 to d48bed3

2013-12-18 16:37:27 +0100  Aleix Conchillo Flaqué <aleix@oblong.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media: add setup_sdp vmethod
	  gst/rtsp-server/rtsp-media.[ch]: added setup_sdp vmethod and public
	  gst_rtsp_media_setup_sdp.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=720155

2013-12-19 14:26:34 +0100  Edward Hervey <bilboed@bilboed.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: Check return value of sscanf
	  streamid is only valid if sscanf matched something.

2013-12-19 14:24:54 +0100  Edward Hervey <bilboed@bilboed.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: Fix iteration
	  Wouldn't even enter the code block otherwise (i++ was used as the check
	  and not the postfix).

2013-12-18 15:57:03 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  client: add vmethod to configure media and streams
	  Implement a vmethod that can be used to configure the media and the
	  streams based on the current context. Handle the blocksize handling in
	  the default handler.
	  See https://bugzilla.gnome.org/show_bug.cgi?id=720667

2013-12-12 00:38:07 +0000  Tim-Philipp Müller <tim@centricular.com>

	* .gitignore:
	  Make git ignore more unit test binaries

2013-12-12 00:36:07 +0000  Tim-Philipp Müller <tim@centricular.com>

	* gst/rtsp-server/rtsp-address-pool.h:
	* gst/rtsp-server/rtsp-auth.h:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-context.h:
	* gst/rtsp-server/rtsp-media-factory-uri.h:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-mount-points.h:
	* gst/rtsp-server/rtsp-server.h:
	* gst/rtsp-server/rtsp-session-media.h:
	* gst/rtsp-server/rtsp-session-pool.h:
	* gst/rtsp-server/rtsp-session.h:
	* gst/rtsp-server/rtsp-stream-transport.h:
	* gst/rtsp-server/rtsp-stream.h:
	* gst/rtsp-server/rtsp-thread-pool.h:
	* gst/rtsp-server/rtsp-token.h:
	  rtsp-server: add padding to many public structures
	  Not mini objects though, since they are not subclassable
	  anyway, nor kept on the stack or inlined in a structure.

2013-12-03 11:54:42 -0800  Aleix Conchillo Flaqué <aleix@oblong.com>

	  media: add new create_rtpbin vmethod
	  * gst/rtsp-server/rtsp-media.[ch]: add new create_rtpbin vmethod.
	  https://bugzilla.gnome.org/show_bug.cgi?id=719734

2013-12-03 00:34:52 +0100  Sebastian Rasmussen <sebras@gmail.com>

	* tests/check/gst/media.c:
	  tests: fix memory leak, free test's thread pool
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=719733

2013-11-29 15:50:52 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-stream-transport.c:
	  stream-transport: free url in finalize

2013-11-29 15:50:23 +0100  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	  media: also do state change in suspended state

2013-11-29 10:53:08 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	  media: also handle prepare and range in suspended state
	  When we are suspended, we are already prepared.
	  We can get the range in the suspended state.

2013-11-27 15:04:04 +0100  Branko Subasic <branko@axis.com>

	* tests/check/Makefile.am:
	* tests/check/gst/sessionmedia.c:
	  check: add test for uri in setup
	  Added unit tests for the new functionality in GstRTSPStreamTransport.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=715168

2013-11-28 17:47:18 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: store setup uri and use in PLAY response
	  Store the uri used when doing the setup and use that in the PLAY
	  response.
	  fixes https://bugzilla.gnome.org/show_bug.cgi?id=715168

2013-11-28 17:35:45 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-stream-transport.c:
	* gst/rtsp-server/rtsp-stream-transport.h:
	  stream-transport: add method to get/set url

2013-11-28 14:14:35 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: suspend after SDP and unsuspend before PLAYING
	  Based on patches by Ognyan Tonchev <ognyan@axis.com>
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=711257

2013-11-28 14:10:19 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-session-media.c:
	* gst/rtsp-server/rtsp-session.c:
	* tests/check/gst/media.c:
	* tests/check/gst/mediafactory.c:
	  media: add suspend modes
	  Add support for different suspend modes. The stream is suspended right after
	  producing the SDP and after PAUSE. Different suspend modes are available that
	  affect the state of the pipeline. NONE leaves the pipeline state unchanged and
	  is the current and old behaviour, PAUSE will set the pipeline to the PAUSED
	  state and RESET will bring the pipeline to the NULL state.
	  A stream is also unsuspended when it goes back to PLAYING, for RESET streams,
	  this means that the pipeline needs to be prerolled again.
	  Base on patches by Ognyan Tonchev <ognyan@axis.com>
	  See https://bugzilla.gnome.org/show_bug.cgi?id=711257

2013-11-28 14:06:53 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-media.c:
	  media: start live streams in blocked state
	  Start live streams in the blocked state and make them preroll using the
	  messages. This ensure that no data is played by the sink until we explicitly
	  unblock the stream right before going to PLAYING.
	  See https://bugzilla.gnome.org/show_bug.cgi?id=711257

2013-11-28 13:58:05 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-media.c:
	  media: refactor starting and waiting for preroll
	  Based on patches from Ognyan Tonchev <ognyan@axis.com>
	  See https://bugzilla.gnome.org/show_bug.cgi?id=711257

2013-11-28 13:42:21 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  stream: add API to block streams
	  Add an API to block on the streams and make it post a message.
	  Based on patch by Ognyan Tonchev <ognyan@axis.com>
	  See https://bugzilla.gnome.org/show_bug.cgi?id=711257

2013-11-27 15:42:45 +0100  Edward Hervey <edward@collabora.com>

	* docs/libs/Makefile.am:
	  docs: Specify the override file
	  Even if it's empty (for now) it avoids make distcheck complaining

2013-11-26 17:23:04 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-media.c:
	  media: move default implementations to where they are used

2013-11-26 16:25:37 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-media.c:
	  media: take the right lock in gst_rtsp_media_set_pipeline_state()
	  We need to take the state_lock when calling this method.

2013-11-26 16:24:35 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-media.c:
	  media: handle add-added on non-bins too
	  Handle dynamic payloaders that are not bins, as used in the unit-test.

2013-11-22 01:30:53 +0100  Sebastian Rasmussen <sebras@hotmail.com>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media/-factory: Fix request pad name comments
	  These must be escaped for gtk-doc to parse the comments without warnings.

2013-11-20 15:51:54 -0800  Aleix Conchillo Flaque <aleix@oblong.com>

	  rtsp-media: remove transports if media is in error status
	  * gst/rtsp-server/rtsp-media.c (gst_rtsp_media_set_state): if we are
	  trying to change to GST_STATE_NULL and media is in error status, we
	  remove all transports.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=712776

2013-11-22 11:16:20 +0100  Wim Taymans <wtaymans@redhat.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: use element metadata to find payloader
	  Use the element metadata to find the payloader instead of checking
	  for the base class.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=712396

2013-11-15 12:14:32 -0800  Aleix Conchillo Flaque <aleix@oblong.com>

	  rtsp-stream: add getter for payload type
	  * gst/rtsp-server/rtsp-stream.c: add new method gst_rtsp_stream_get_pt.
	  * gst/rtsp-server/rtsp-media.c (pad_added_cb): find real payloader
	  element and create the stream with this one instead of the dynpay%d
	  element.
	  https://bugzilla.gnome.org/show_bug.cgi?id=712396

2013-11-22 02:28:28 +0100  Sebastian Rasmussen <sebras@hotmail.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-context.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-mount-points.c:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-token.c:
	  rtsp-*: Refer to NULL as a constant in comments
	  Plus one typo fix.
	  https://bugzilla.gnome.org/show_bug.cgi?id=714988

2013-11-22 03:10:01 +0100  Sebastian Rasmussen <sebras@hotmail.com>

	  rtsp-*: Fix type name typos in comments
	  * rtsp-auth: Refer to GstRTSPToken, not GstRTSPtoken
	  * rtsp-auth: Refer to part of constant name as text
	  * rtsp-auth/-permissions/-token: Refer to Permissions not Permission
	  * rtsp-session-media: Fix GstRTSPSessionMedia typo
	  * rtsp-stream: Fix typo when refering to GstBin
	  https://bugzilla.gnome.org/show_bug.cgi?id=714988

2013-11-22 00:45:17 +0100  Sebastian Rasmussen <sebras@hotmail.com>

	* docs/README:
	* docs/libs/gst-rtsp-server-docs.sgml:
	* docs/libs/gst-rtsp-server-sections.txt:
	  docs: Improve documentation
	  * Include annotation-glossary to quiet gtk-doc
	  * Rename remaining ClientState -> Context
	  * Rename object hierarchy file
	  * Remove stale chapter references
	  * Add missing function and object references
	  * Include missing GstRTSPAddressPoolResult
	  https://bugzilla.gnome.org/show_bug.cgi?id=714988

2013-11-18 10:47:04 +0000  Tim-Philipp Müller <tim@centricular.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-session-pool.c:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-server: sprinkle some allow-none annotations for g-i

2013-11-18 11:18:15 +0100  Wim Taymans <wim.taymans@gmail.com>

	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  stream: add method to filter transports
	  Add a method to safely iterate and collect the stream transports
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=711664

2013-11-15 16:35:05 +0100  Wim Taymans <wim.taymans@gmail.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-session-pool.c:
	* gst/rtsp-server/rtsp-session.c:
	  rtsp: allow NULL func in filters
	  Passing a null function make the filters return a list of
	  refcounted objects.

2013-11-12 16:52:35 +0100  Wim Taymans <wim.taymans@gmail.com>

	* gst/rtsp-server/rtsp-address-pool.c:
	* tests/check/gst/addresspool.c:
	  address-pool: fix address increment
	  Use a guint instead of guint8 to increment the address. It's still not
	  completely correct because a guint might not be able to hold the complete
	  address range, but that's an enhacement for later.
	  Add unit test to test improved behaviour.
	  https://bugzilla.gnome.org/show_bug.cgi?id=708237

2013-11-12 10:55:14 +0100  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* tests/check/gst/client.c:
	  client: allow absolute path in requests
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=711689

2013-11-07 13:22:09 +0100  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  client: make make_path_from_uri a vmethod

2013-11-12 12:04:55 +0100  Wim Taymans <wim.taymans@gmail.com>

	* docs/libs/gst-rtsp-server-sections.txt:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	* tests/check/Makefile.am:
	* tests/check/gst/stream.c:
	  stream: Add functions to get rtp and rtcp sockets
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=710100

2013-11-12 11:21:55 +0100  Wim Taymans <wim.taymans@gmail.com>

	* gst/rtsp-server/rtsp-context.c:
	* gst/rtsp-server/rtsp-context.h:
	  context: defing a GType for the context
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=710018

2013-10-12 23:56:00 +0200  Sebastian Pölsterl <sebp@k-d-w.org>

	* gst/rtsp-server/Makefile.am:
	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-context.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-mount-points.c:
	* gst/rtsp-server/rtsp-server.h:
	* gst/rtsp-server/rtsp-session-media.c:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-stream.c:
	  Fixed several GIR warnings

2013-11-12 11:15:46 +0100  Wim Taymans <wim.taymans@gmail.com>

	* gst/rtsp-server/rtsp-auth.c:
	  auth: small typos

2013-10-19 19:25:27 +0200  Sebastian Rasmussen <sebras@hotmail.com>

	* tests/check/Makefile.am:
	* tests/check/gst/token.c:
	  tests: Add unit tests for token
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=710520

2013-10-19 19:24:34 +0200  Sebastian Rasmussen <sebras@hotmail.com>

	* gst/rtsp-server/rtsp-token.c:
	  token: Validate args for gst_rtsp_token_is_allowed
	  See https://bugzilla.gnome.org/show_bug.cgi?id=710520

2013-10-19 19:21:53 +0200  Sebastian Rasmussen <sebras@hotmail.com>

	* gst/rtsp-server/rtsp-token.c:
	  token: Fix bug when creating empty token
	  We always want to have a valid GstStructure in the token.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=710520

2013-11-12 10:28:55 +0100  Wim Taymans <wim.taymans@gmail.com>

	* gst/rtsp-server/rtsp-thread-pool.c:
	  thread-pool: avoid race in shutdown
	  If we call g_main_loop_quit before the thread has entered g_main_loop_run, we
	  don't actually stop the mainloop ever. Solve this race by adding an idle source
	  to the mainloop that calls the _quit. This way we immediately exit the mainloop
	  if quit was called before we started it.

2013-10-19 17:36:05 +0200  Sebastian Rasmussen <sebras@hotmail.com>

	* tests/check/Makefile.am:
	* tests/check/gst/permissions.c:
	  tests: Add unit tests for permissions
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=710202

2013-10-15 18:50:47 +0200  Sebastian Rasmussen <sebras@hotmail.com>

	* tests/check/gst/mediafactory.c:
	  tests: Test mediafactory permissions
	  See https://bugzilla.gnome.org/show_bug.cgi?id=710202

2013-10-19 17:39:35 +0200  Sebastian Rasmussen <sebras@hotmail.com>

	* gst/rtsp-server/rtsp-permissions.c:
	  permissions: Fix refcounting when adding/removing roles
	  Previously a role that was removed was unreffed twice, and when
	  replacing an existing role the replaced role was freed while still being
	  referenced. Both bugs are now fixed.
	  See https://bugzilla.gnome.org/show_bug.cgi?id=710202

2013-10-15 18:01:38 +0200  Sebastian Rasmussen <sebras@hotmail.com>

	* tests/check/gst/media.c:
	* tests/check/gst/mediafactory.c:
	* tests/check/gst/rtspserver.c:
	  tests: Check gst_rtsp_url_parse return value
	  See https://bugzilla.gnome.org/show_bug.cgi?id=710202

2013-11-05 11:22:51 +0000  Tim-Philipp Müller <tim@centricular.com>

	* common:
	  Automatic update of common submodule
	  From 865aa20 to dbedaa0

2013-10-14 12:03:07 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-server.c:
	  rtsp-server: Fix socket leak
	  https://bugzilla.gnome.org/show_bug.cgi?id=710088

2013-10-30 22:16:54 +0100  Sebastian Dröge <sebastian@centricular.com>

	* gst/rtsp-server/rtsp-session-pool.c:
	  rtsp-session-pool: Make sure session IDs are properly URI-escaped
	  https://bugzilla.gnome.org/show_bug.cgi?id=643812

2013-10-15 16:37:34 -0700  Aleix Conchillo Flaque <aleix@oblong.com>

	* examples/.gitignore:
	* examples/test-video.c:
	  examples: fix compilation when WITH_AUTH is defined
	  https://bugzilla.gnome.org/show_bug.cgi?id=710228

2013-10-30 19:10:59 +0100  Sebastian Dröge <sebastian@centricular.com>

	* .gitignore:
	  gitignore: Add new test binary

2013-10-09 15:19:12 +0200  Ognyan Tonchev <ognyan@axis.com>

	* tests/check/Makefile.am:
	* tests/check/gst/threadpool.c:
	  thread-pool: Add unit test for the thread pools
	  https://bugzilla.gnome.org/show_bug.cgi?id=710228

2013-10-09 15:25:10 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-thread-pool.c:
	  thread-pool: Fix thread leak when reusing threads
	  https://bugzilla.gnome.org/show_bug.cgi?id=709730

2013-10-14 08:30:33 +0200  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-server.c:
	* tests/check/gst/rtspserver.c:
	  tests: fixed racy behavior in rtspserver tests
	  https://bugzilla.gnome.org/show_bug.cgi?id=710078

2013-10-14 19:36:24 +0200  Sebastian Rasmussen <sebras@hotmail.com>

	* tests/check/gst/addresspool.c:
	  tests: Improve address pool unit tests
	  Add a range with mixed IPV4 and IPV6 addresses to pool.
	  Get an IPV4 address from an IPV6-only pool.
	  Get an IPV6 address from an IPV4-only pool.
	  Reserve a IPV6 address from an IPV4-only pool.
	  Check for unicast addresses in multicast-only pool.
	  Check for unicast addresses in uni-/multicast-mixed pool.
	  https://bugzilla.gnome.org/show_bug.cgi?id=710128

2013-10-04 06:29:30 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: append query string in PAUSE/PLAY/TEARDOWN as well

2013-10-01 14:04:17 +0200  Jonas Holmberg <jonashg@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: Add query to control path
	  If the SETUP url contains a query it must be appended to the control
	  path so that it matches any already created stream in the media. The
	  query will also be appended to the session media path.

2013-10-04 05:48:52 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: remove old line

2013-10-01 13:15:19 +0200  Jonas Holmberg <jonashg@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: Correct control comparison
	  https://bugzilla.gnome.org/show_bug.cgi?id=709176

2013-09-09 21:51:44 -0400  Youness Alaoui <youness.alaoui@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: Check dynamically if the pipeline supports seeking
	  We should not depend on whether or not the pipeline state change
	  returned NO_PREROLL or not. A media could dynamically change its
	  element and switch from seekable to non seekable so it's best to test
	  the seekable nature of the pipeline dynamically when we try to do a seek.

2013-09-09 21:51:23 -0400  Youness Alaoui <youness.alaoui@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: Return FALSE if seeking is not supported

2013-10-01 17:16:11 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: don't seek accurate by default
	  Accurate seeking is perhaps a little overkill in the most common situation and
	  causes some formats (mp3) over slow media to seek extremely slowly.

2013-09-26 14:36:58 +0200  Ognyan Tonchev <ognyan@axis.com>

	* tests/check/gst/rtspserver.c:
	  tests: fix unit test
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=708742

2013-09-26 11:20:05 +0200  Jonas Holmberg <jonashg@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: Reply 400 if media cannot be constructed
	  Reply 400 Bad Request instead of 503 Service Unavailable if media
	  cannot be constructed in SETUP.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=708821

2013-09-26 09:41:10 +0200  Jonas Holmberg <jonashg@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: Send setup reply once only
	  If find_media() failed in handle_setup_request() two replies was sent.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=708819

2013-09-24 18:35:36 +0100  Tim-Philipp Müller <tim@centricular.net>

	* common:
	  Automatic update of common submodule
	  From 6b03ba7 to 865aa20

2013-09-23 14:28:04 +0200  Jonas Holmberg <jonashg@axis.com>

	* gst/rtsp-server/rtsp-server.c:
	  server: Emit client-connected signal earlier
	  Emit client-connected before the client ref is given to a GSource,
	  otherwise client-connected can be emitted after the client object has
	  been freed.

2013-09-24 17:30:18 +0200  Patrick Radizi <patrick.radizi at axis.com>

	* gst/rtsp-server/rtsp-address-pool.c:
	* gst/rtsp-server/rtsp-address-pool.h:
	* gst/rtsp-server/rtsp-stream.c:
	* tests/check/gst/addresspool.c:
	  addresspool: return reason of failure
	  Let gst_rtsp_address_pool_reserve_address() return the reason why
	  the address could not be reserved.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=708229

2013-09-20 16:47:56 +0200  Edward Hervey <edward@collabora.com>

	* autogen.sh:
	  autogen.sh: Sync behaviour with other GStreamer modules
	  Allows building from outside of tree amongst other things

2013-09-20 16:18:54 +0200  Edward Hervey <edward@collabora.com>

	* common:
	  Automatic update of common submodule
	  From b613661 to 6b03ba7

2013-09-19 18:46:14 +0100  Tim-Philipp Müller <tim@centricular.net>

	* common:
	  Automatic update of common submodule
	  From 74a6857 to b613661

2013-09-19 17:39:24 +0100  Tim-Philipp Müller <tim@centricular.net>

	* common:
	  Automatic update of common submodule
	  From 01a7a46 to 74a6857

2013-09-19 15:44:26 +0200  Jonas Holmberg <jonashg@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: Do not read beyond end of path string
	  If the setup was done without a control url, make sure we don't try to read the
	  non-existing control string and crash.

2013-09-17 14:39:44 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: Fix RTPInfo header
	  Refactor the method to make the content_base.
	  Use the content-base and the control url to construct the RTPInfo
	  url.

2013-09-17 12:21:02 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: map url to path only in describe
	  Only map the request url to a path in the DESCRIBE method. The SDP then
	  contains the base and control urls that should be used to SETUP/PAUSE/
	  PLAY/TEARDOWN the media.

2013-09-17 11:41:57 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  Revert "client: map URL to path in requests"
	  This reverts commit e3fded2cec897a2ec003450607b916cc1601fd2d.
	  This is not correct, we only remap the URL to a path in DESCRIBE, the SDP then
	  contains the base and control urls which are used in the SETUP, PLAY,
	  PAUSE and TEARDOWN requests.

2013-09-16 17:16:49 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: map URL to path in requests

2013-09-16 16:47:40 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-mount-points.c:
	* gst/rtsp-server/rtsp-mount-points.h:
	  mount-points: make vmethod to make path from uri
	  Make a vmethod to transform an url into a path. The path is then used to lookup
	  the factory. This makes it possible to also use other bits of the url, such as
	  the query parameters, to locate the factory.

2013-09-09 11:05:26 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-thread-pool.c:
	* gst/rtsp-server/rtsp-thread-pool.h:
	  thread-pool: Add cleanup to wait for the threadpool to finish
	  Also fix race condition if two threads are asking for the first
	  thread from the thread pool at once. This would case two internal
	  GThreadPools to be created.
	  https://bugzilla.gnome.org/show_bug.cgi?id=707753

2013-09-05 08:56:02 +0200  Jonas Holmberg <jonashg@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* tests/check/gst/client.c:
	  client: free threadpool
	  https://bugzilla.gnome.org/show_bug.cgi?id=707638

2013-09-06 17:23:20 +0200  Jonas Holmberg <jonashg@axis.com>

	* tests/check/gst/mountpoints.c:
	  mountpoints tests: unref matched factories
	  https://bugzilla.gnome.org/show_bug.cgi?id=707638

2013-09-05 18:01:18 +0200  Jonas Holmberg <jonashg@axis.com>

	* tests/check/gst/media.c:
	  media tests: unref thread pool and caps
	  https://bugzilla.gnome.org/show_bug.cgi?id=707638

2013-09-05 08:53:55 +0200  Jonas Holmberg <jonashg@axis.com>

	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media.c:
	  auth, media, media-factory: unref permissions
	  https://bugzilla.gnome.org/show_bug.cgi?id=707638

2013-08-23 15:15:12 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/Makefile.am:
	  Makefile: add rule for appsrc example

2013-08-23 15:14:29 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-appsrc.c:
	  tests: add appsrc example
	  Add an example on how to use appsrc to feed the server pipeline with data.

2013-08-22 12:10:39 +0200  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: remove query part from content-base string
	  Make sure that after the control url has been resolved, it's
	  not a part of the query-string.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=706568

2013-08-23 10:38:43 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: don't check url in response
	  There is no url or method in the response to check

2013-08-08 10:57:42 -0400  Youness Alaoui <youness.alaoui@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  Add handle-response signal for when we receive a GET_PARAMETER response

2013-08-16 12:42:22 -0400  Youness Alaoui <youness.alaoui@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	  Fix gst_rtsp_server_client_filter, using wrong variable type

2013-08-22 18:39:59 +0100  Tim-Philipp Müller <tim@centricular.net>

	* gst/rtsp-server/rtsp-media-factory-uri.c:
	  rtsp-media-factory-uri: check AAC properly for whether it's parsed or not
	  For AAC we need to check for framed=true instead of parsed=true.
	  https://bugzilla.gnome.org/show_bug.cgi?id=701384

2013-08-16 17:05:24 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: optimize pipeline for protocols
	  When TCP is not an allowed protocol for the stream, avoid creating the
	  appsrc/appsink/queue and tee elements.

2013-08-16 16:34:56 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: set protocols on streams

2013-08-16 16:16:31 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: use protocols supported by stream

2013-08-16 16:16:00 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-stream.c:
	  media-factory: allow all protocols

2013-08-16 16:10:43 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: configure protocols in new streams

2013-08-16 16:08:43 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  stream: add protocols property

2013-08-05 10:46:33 -0400  Youness Alaoui <youness.alaoui@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: send state in "new-state" signal
	  https://bugzilla.gnome.org/show_bug.cgi?id=705110

2013-08-02 14:11:01 +0200  Lubosz Sarnecki <lubosz@gmail.com>

	* configure.ac:
	  build: add subdir-objects to AM_INIT_AUTOMAKE
	  Fixes warnings with automake 1.14
	  https://bugzilla.gnome.org/show_bug.cgi?id=705350

2013-08-02 17:15:09 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* docs/libs/gst-rtsp-server-sections.txt:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	  server: add method to iterate clients of server

2013-06-11 19:10:01 -0400  Youness Alaoui <youness.alaoui@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  Add vmethod for rtsp-media subclass to access rtpbin

2013-07-11 16:12:04 -0400  Youness Alaoui <youness.alaoui@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.h:
	  small documentation fix

2013-07-11 16:11:55 -0400  Youness Alaoui <youness.alaoui@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  Do not take range header if range is invalid

2013-08-02 16:57:26 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* docs/libs/gst-rtsp-server-sections.txt:
	* gst/rtsp-server/rtsp-media.c:
	  media: add docs for new method

2013-07-02 18:55:28 -0400  Youness Alaoui <youness.alaoui@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  Add API to rtsp-media set the pipeline's state

2013-06-11 19:09:42 -0400  Youness Alaoui <youness.alaoui@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  Update current position/duration when gst_rtsp_media_get_range_string is called

2013-07-22 17:27:27 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-cgroups.c:
	  tests: add some more docs

2013-07-22 14:25:04 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-cgroups.c:
	* gst/rtsp-server/Makefile.am:
	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-auth.h:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-context.c:
	* gst/rtsp-server/rtsp-context.h:
	* gst/rtsp-server/rtsp-params.c:
	* gst/rtsp-server/rtsp-params.h:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-thread-pool.c:
	* gst/rtsp-server/rtsp-thread-pool.h:
	* tests/check/gst/client.c:
	  ClientState -> Context
	  Rename the clientstate to context and put the code in a separate file.

2013-07-18 12:19:25 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-auth.c:
	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-auth.h:
	  auth: add support for default token
	  The default token is used when the user is not authenticated and can be used to
	  give minimal permissions.

2013-07-18 11:44:50 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-auth.c:
	* gst/rtsp-server/rtsp-auth.c:
	  auth: use defines when possible

2013-07-18 11:44:21 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-address-pool.c:
	  address-pool: improve docs

2013-07-18 12:26:45 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-permissions.c:
	  permissions: add the role to the copy

2013-07-17 19:35:33 -0400  Olivier Crête <olivier.crete@collabora.com>

	* gst/rtsp-server/rtsp-permissions.c:
	  permissions: Also copy the roles

2013-07-17 19:32:09 -0400  Olivier Crête <olivier.crete@collabora.com>

	* gst/rtsp-server/rtsp-permissions.c:
	  permissions: Make it build

2013-07-16 12:36:56 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-address-pool.h:
	  docs: small fixes

2013-07-16 12:32:51 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* docs/libs/gst-rtsp-server-sections.txt:
	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-auth.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-session-media.c:
	* gst/rtsp-server/rtsp-stream-transport.c:
	* gst/rtsp-server/rtsp-stream-transport.h:
	* gst/rtsp-server/rtsp-stream.c:
	* tests/check/gst/client.c:
	  docs: improve docs

2013-07-16 12:32:00 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* docs/libs/gst-rtsp-server-sections.txt:
	* gst/rtsp-server/rtsp-address-pool.c:
	* gst/rtsp-server/rtsp-address-pool.h:
	* tests/check/gst/addresspool.c:
	* tests/check/gst/rtspserver.c:
	  address-pool: cleanups
	  Remove redundant method, improve docs.

2013-07-15 17:31:35 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* docs/libs/gst-rtsp-server-sections.txt:
	* gst/rtsp-server/rtsp-auth.h:
	* gst/rtsp-server/rtsp-permissions.c:
	* gst/rtsp-server/rtsp-permissions.h:
	* gst/rtsp-server/rtsp-token.c:
	  docs: improve docs

2013-07-15 17:12:57 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-permissions.c:
	  permissions: implement _remove_role

2013-07-15 17:12:43 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-permissions.c:
	  permissions: update docs

2013-07-15 16:48:37 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* tests/check/gst/client.c:
	  tests: simplify tests
	  Client settings are now disabled by default so we don't need an auth
	  module to disable them.

2013-07-15 16:47:07 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-auth.c:
	  auth: add default authorizations
	  When no auth module is specified, use our table of defaults to look up the
	  default value of the check instead of always allowing everything. This was
	  we can disallow client settings by default.

2013-07-15 16:05:02 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* docs/README:
	  README: update readme

2013-07-15 15:25:00 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-thread-pool.c:
	* gst/rtsp-server/rtsp-thread-pool.h:
	  thread-pool: add more docs

2013-07-15 14:50:38 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-thread-pool.c:
	* gst/rtsp-server/rtsp-thread-pool.h:
	  thread-pool: fix race in thread reuse
	  If we try to reuse a thread right after we made it stop, we end up using a
	  stopped thread. Catch this case and only reuse threads that are not stopping.

2013-07-15 14:50:26 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	  server: add small debug

2013-07-15 11:58:58 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* tests/check/gst/client.c:
	  client: fix test
	  Add some permissions to media so we can use the auth and enable
	  client settings.

2013-07-15 11:57:49 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: support pushed context in handle_request
	  If we already have a pushed state, reuse it and add our own things. This makes
	  it easier to write tests.

2013-07-15 11:56:06 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-auth.c:
	  auth: don't auth on methods
	  Don't authorize on methods anymore but on the resources that we
	  try to access, this is more flexible.
	  Move the authorization checks to where they are needed and let the
	  check return the response on error.

2013-07-15 11:51:34 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-mount-points.c:
	  mount-points: add some debug

2013-07-12 17:26:55 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* tests/check/gst/client.c:
	  tests: almost fix test

2013-07-12 17:07:53 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-auth.h:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	  auth: let the auth module check client_settings
	  Let the auth module decide if client settings are allowed for the
	  current client.

2013-07-12 17:06:37 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-token.c:
	* gst/rtsp-server/rtsp-token.h:
	  token: add method to check boolean permission

2013-07-12 16:36:05 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-auth.c:
	* examples/test-cgroups.c:
	* gst/rtsp-server/rtsp-token.c:
	* gst/rtsp-server/rtsp-token.h:
	  token: simplify token constructor
	  Use variable arguments to make easier API.

2013-07-12 16:17:57 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-auth.c:
	* examples/test-cgroups.c:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	  media-factory: add convenience API for factory

2013-07-12 16:03:07 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-auth.c:
	* examples/test-cgroups.c:
	* gst/rtsp-server/rtsp-permissions.c:
	* gst/rtsp-server/rtsp-permissions.h:
	  permissions: simplify API a little
	  Avoid passing GstStructure in the add_role method, use varargs instead
	  to construct the structure behind the scenes. We can then also use the
	  structure name as the role and simplify some more logic.

2013-07-12 16:01:14 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-auth.c:
	  auth: fix typo

2013-07-12 15:19:29 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-auth.h:
	* gst/rtsp-server/rtsp-client.c:
	  auth: handle unauthorized response
	  Move handling of the unauthorized response to the auth module, it can add
	  the appropriate headers to request authorization for the required method
	  much better than the client.

2013-07-12 15:13:48 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  client: allow for sending any message, not only requests
	  Change the _send_request() method to _send_message() so that we
	  can both send requests and replies.

2013-07-12 14:10:13 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* docs/libs/gst-rtsp-server-sections.txt:
	* gst/rtsp-server/rtsp-server.h:
	  docs: fix docs

2013-07-12 12:41:52 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-video.c:
	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-auth.h:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	  auth: move TLS handling to auth module
	  Remove the TLS settings on the server and move it to the auth module because
	  that is where security related bits go.

2013-07-12 12:38:54 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  client: add state push/pop

2013-07-12 12:36:40 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  client: add connection to state

2013-07-11 20:45:11 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-mount-points.c:
	  mount-points: fix debug

2013-07-11 17:28:17 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* tests/check/gst/media.c:
	  tests: fix media test

2013-07-11 17:28:04 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-thread-pool.c:
	  thread-pool: we don't require a state

2013-07-11 17:18:58 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	  server: let context ref the server
	  So that we don't risk losing the server object early anc crash.

2013-07-11 17:05:00 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* tests/check/gst/client.c:
	  tests: fix client test

2013-07-11 16:57:14 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* docs/README:
	* docs/libs/gst-rtsp-server-docs.sgml:
	* docs/libs/gst-rtsp-server-sections.txt:
	* gst/rtsp-server/rtsp-address-pool.c:
	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-media-factory-uri.c:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-mount-points.c:
	* gst/rtsp-server/rtsp-params.c:
	* gst/rtsp-server/rtsp-permissions.c:
	* gst/rtsp-server/rtsp-sdp.c:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	* gst/rtsp-server/rtsp-session-media.c:
	* gst/rtsp-server/rtsp-session-pool.c:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-stream-transport.c:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-thread-pool.c:
	* gst/rtsp-server/rtsp-token.c:
	  docs: improve docs

2013-07-11 16:28:09 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-session-pool.c:
	* gst/rtsp-server/rtsp-session-pool.h:
	  session-pool: make vmethod to create a session
	  Make a vmethod to create a sessions so that subclasses can create
	  custom session objects

2013-07-11 12:24:33 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-mount-points.h:
	* gst/rtsp-server/rtsp-session-pool.h:
	* gst/rtsp-server/rtsp-stream.h:
	  docs: more updates

2013-07-11 12:18:26 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* docs/libs/gst-rtsp-server-docs.sgml:
	* docs/libs/gst-rtsp-server-sections.txt:
	* gst/rtsp-server/rtsp-address-pool.c:
	* gst/rtsp-server/rtsp-address-pool.h:
	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-permissions.c:
	* gst/rtsp-server/rtsp-permissions.h:
	* gst/rtsp-server/rtsp-server.h:
	* gst/rtsp-server/rtsp-session-media.c:
	* gst/rtsp-server/rtsp-session-media.h:
	* gst/rtsp-server/rtsp-session-pool.h:
	* gst/rtsp-server/rtsp-session.h:
	* gst/rtsp-server/rtsp-stream-transport.h:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-thread-pool.h:
	  docs: update docs

2013-07-11 10:28:06 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* configure.ac:
	* examples/Makefile.am:
	  configure: compile cgroup example conditionally
	  Only compile the cgroup example when we have libcgroup

2013-07-10 20:57:12 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* configure.ac:
	* examples/Makefile.am:
	* examples/test-cgroups.c:
	  examples: add cgroups example

2013-07-10 20:55:03 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* tests/check/gst/rtspserver.c:
	  tests: fix compilation

2013-07-10 20:48:47 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-thread-pool.c:
	  thread-pool: fix vmethod invocation

2013-07-10 20:48:18 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-thread-pool.c:
	* gst/rtsp-server/rtsp-thread-pool.h:
	  thread-pool: store thread type in thread

2013-07-10 17:09:27 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: pass thread from pool to media _prepare
	  Get a thread from the configured threadpool and pass it to the prepare method of
	  the media.

2013-07-10 17:08:14 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media: Accept a thread in _prepare
	  Remove out own threadpool handling and use the provided thread and
	  maincontext for the bus messages and the state changes.

2013-07-10 17:07:13 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	  server: configure client thread pool

2013-07-10 17:06:36 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  client: add method to configure thread pool

2013-07-10 16:49:55 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	  server: use thread pool
	  Use the thread pool instead of doing our own thing.

2013-07-10 16:47:43 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/Makefile.am:
	* gst/rtsp-server/rtsp-thread-pool.c:
	* gst/rtsp-server/rtsp-thread-pool.h:
	  thread-pool: add object to manage threads
	  Add an object to manage the client and media threads.

2013-07-10 15:28:35 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-auth.c:
	  auth: debug authorization check

2013-07-09 20:44:51 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: start media pipeline in context
	  Start the media pipeline in the provided context (or our default one
	  when NULL). This makes sure that we run the bus thread in this context and that
	  all media threads are children of this context.

2013-07-09 16:38:39 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory.c:
	  factory: pass permissions to media by default

2013-07-09 16:09:07 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-auth.c:
	  test: add permissions to auth test
	  Ass some permissions to the media factory in the test.

2013-07-09 16:04:35 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-auth.h:
	* gst/rtsp-server/rtsp-client.c:
	  auth: simplify auth checks
	  Remove client from methods, it's now in the state
	  Perform the check specified by the string, use the information from the
	  thread local context.

2013-07-09 16:01:29 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  client: add state to current thread
	  Add the client to the ClientState object.
	  Place the ClientState on the current thread.

2013-07-09 14:33:43 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media: make it possible to set permissions
	  Make it possible to set permissions on media and media factory objects

2013-07-09 14:31:15 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/Makefile.am:
	* gst/rtsp-server/rtsp-permissions.c:
	* gst/rtsp-server/rtsp-permissions.h:
	  permissions: add permissions object
	  Add a mini object to store permissions based on a role.

2013-07-08 16:29:01 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-auth.c:
	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-auth.h:
	* gst/rtsp-server/rtsp-client.c:
	  auth: add auth checks
	  Add an enum with auth checks and implement the checks in the auth object.
	  Perform the checks from the client.

2013-07-05 20:48:18 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-auth.c:
	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-auth.h:
	* gst/rtsp-server/rtsp-client.h:
	  auth: use the token after authentication
	  After we authenticated a user, keep the Token around in the state.

2013-07-05 20:43:39 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* tests/check/gst/media.c:
	  media: add optional context for bus messages
	  Add an optional mainloop to _prepare that will handle the bus messages instead
	  of always using the shared mainloop.

2013-07-05 20:34:40 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/Makefile.am:
	* gst/rtsp-server/rtsp-token.c:
	* gst/rtsp-server/rtsp-token.h:
	  token: add authorization token
	  Add a simply miniobject that contains the authorizations. The object contains a
	  GstStructure that hold all authorization fields. When a user is authenticated,
	  the auth module will create a Token for the user. The token is then used to
	  check what operations the user is allowed to do and various other configuration
	  values.

2013-07-05 12:08:36 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-auth.c:
	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-auth.h:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  auth: remove auth from media and factory
	  Remove the auth object from media and factory. We want to have the RTSPClient
	  authenticate and authorize resources, there is no need to place another auth
	  manager on the media/factory.

2013-07-04 14:33:59 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-auth.c:
	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-auth.h:
	* gst/rtsp-server/rtsp-client.h:
	  auth: add support for multiple basic auth tokens
	  Make it possible to add multiple basic authorisation tokens to one authorization
	  object. Associate with each token an authorization group that will define what
	  capabilities are allowed.

2013-07-03 16:15:04 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: error out on non-aggregate control
	  We require aggregate control (for now) for PLAY, PAUSE and TEARDOWN.

2013-07-03 15:55:38 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: rework setup request a little
	  Cache the media in DESCRIBE based on the longest matching path with the uri
	  that we can find in the mount points.
	  Rework the setup request a little to get the media from the session or from
	  the longest matching path, this way we can derive the control string as
	  everything after the path instead of hardcoding it.
	  Find the stream based on the control string and only open a session when all
	  this can be done.

2013-07-03 15:14:39 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media: add method to find a stream by control url

2013-07-03 15:13:45 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  stream: add method to check control url of stream

2013-07-03 12:37:48 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-session-media.c:
	* gst/rtsp-server/rtsp-session-media.h:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-session.h:
	  session: use path matching for session media
	  Use a path string instead of a uri to lookup session media in the sessions. Also
	  use path matching to find the largest possible path that matches.

2013-07-03 11:04:53 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-mount-points.c:
	* gst/rtsp-server/rtsp-mount-points.h:
	* tests/check/gst/mountpoints.c:
	  mount-points: remove useless vmethod
	  Making lookups in the mount points should not be done with a URL, if there is a
	  mapping to be done from URL to mount points, we'll need to do it somewhere
	  else.

2013-07-03 10:25:46 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-mount-points.c:
	* gst/rtsp-server/rtsp-mount-points.h:
	* tests/check/gst/mountpoints.c:
	  mount-points: improve mount point searching
	  Use a GSequence to keep track of the mount points.
	  Match a URL to the longest matching registered mount point. This should be the
	  URL to perform aggreagate control and the remainder is the stream specific
	  control part.
	  Add some unit tests for this.

2013-07-03 10:40:33 +0200  Sebastian Dröge <slomo@circular-chaos.org>

	* gst/rtsp-server/Makefile.am:
	  rtsp-server: Allow building of static library

2013-07-02 15:59:16 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* tests/check/gst/mediafactory.c:
	  tests: fix compilation

2013-07-02 15:54:43 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-sdp.c:
	  sdp: get control string from stream
	  Use the control string as configured in the stream.

2013-07-02 14:44:35 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  stream: add methods and property to set control string

2013-07-02 11:58:02 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: cleanups
	  Rename variables for clarity
	  Keep media in state when we can

2013-07-01 16:46:07 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  stream: add more support for IPv6
	  Rename _get_address to _get_multicast_address in GstRTSPStream to
	  make it clear that this function only deals with multicast.
	  Make it possible to have both an IPv4 and IPv6 multicast address on
	  a stream. Give the client an IPv4 or IPv6 address depending on the
	  address it used to connect to the server.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=702002

2013-07-01 15:18:43 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: fix comment

2013-07-01 14:45:49 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: handle failed port allocation
	  Allow for ipv4 or ipv6 socket allocations to fail. Only report failure if we
	  can't allocate any family at all. Also keep track of what port families we
	  allocated.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=703175

2013-07-01 12:20:50 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: improve docs

2013-07-01 12:04:45 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-stream-transport.c:
	  stream-transport: remove old if 0 block

2013-06-27 11:21:42 +0200  Patricia Muscalu <patricia@axis.com>

	* tests/check/gst/client.c:
	  tests: fix tests
	  gst_rtsp_client_get_uri() has been removed
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=703173

2013-06-26 17:18:33 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  client: add method to filter managed sessions
	  Add a method to filter the sessions managed by this client connection.
	  See https://bugzilla.gnome.org/show_bug.cgi?id=703016

2013-06-26 16:32:06 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  client: remove _get_uri() method
	  Remove the get_uri() method on the client. A client has no uri, the uri
	  property is an internal property to manage the last cached media for
	  the client.

2013-06-26 16:31:39 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory.h:
	  media-factory: fix typo

2013-06-26 14:42:15 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Do not leak the query in default_query_stop
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=703120

2013-06-25 15:46:41 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: don't unlock when conversion fails
	  Don't unlock the state lock when conversion fails because it was not locked.

2013-06-10 17:32:40 -0400  Youness Alaoui <youness.alaoui@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  Add query_position and query_stop vmethods to rtsp-media

2013-06-10 17:33:01 -0400  Youness Alaoui <youness.alaoui@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  Fix typo in property install for rtsp-media's time-provider

2013-06-25 15:09:13 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  client: clean some variables
	  Clean some variables and add some guards to _send_request()

2013-06-10 17:32:12 -0400  Youness Alaoui <youness.alaoui@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  Add gst_rtsp_client_send_request API
	  This makes it possible to send arbitrary messages to a client, such as
	  SET_PARAMETER or GET_PARAMETER

2013-06-24 23:56:57 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media: add _get_element() method
	  Add method to get the element used when creating the media.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=703008

2013-06-24 23:51:38 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: fix docs

2013-06-24 11:41:27 -0700  Aleix Conchillo Flaque <aleix@oblong.com>

	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  stream: allow access to the rtp session
	  https://bugzilla.gnome.org/show_bug.cgi?id=703004

2013-06-24 10:43:59 +0200  Alexander Schrab <alexas@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  dscp qos support in gst-rtsp-stream
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=702645

2013-06-20 17:30:49 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* tests/check/gst/rtspserver.c:
	  tests: fix test
	  Actually do what the comment says. Also keep the old code around, not sure what
	  should happen when you get a 454 from a TEARDOWN, does it close the connection?
	  it currently doesn't.

2013-06-20 12:20:21 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: also watch newly created session
	  When we newly created a session, start watching it immediately instead of
	  on the next request.

2013-06-20 12:18:23 +0200  Patricia Muscalu <patricia@axis.com>

	* tests/check/gst/client.c:
	  tests: add unit test for new-session
	  See https://bugzilla.gnome.org/show_bug.cgi?id=701587

2013-06-20 12:16:07 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: emit new-session when new session is created
	  Only emit new-session when we created a new session for a client, not when a
	  client picked up a previous session.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=701587

2013-06-20 11:17:29 +0200  Alexander Schrab <alexas@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: handle asterisk as path in requests
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=701266

2013-06-20 11:14:31 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: handle segment query format mismatch
	  It's possible that the segment query returns with a different format than what
	  we asked for, handle this case also.

2013-06-11 15:28:32 +0200  David Svensson Fors <davidsf@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	  media: use segment stop in collect_media_stats
	  Use segment stop instead of duration as range end point.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=701185

2013-06-17 16:47:56 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	* tests/check/gst/media.c:
	  rtsp-media: Do not leak the element in take_pipeline
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=702470

2013-06-17 16:18:37 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  rtsp-client: Make configure_client_transport virtual
	  This patch makes configure_client_transport virtual. The functionality is
	  needed to handle some weird clients sending multicast transport settings as url
	  options.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=702173

2013-06-12 12:23:56 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  rtsp-client: Make param_set and param_get virtual
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=702072

2013-06-05 15:49:45 +0200  David Svensson Fors <davidsf@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media: convert_range replaces get_range_times
	  get_range_times worked for handling UTC ranges for seeks, but we also
	  need to convert back from NPT to the requested unit in
	  get_range_string. convert_range is now used for both.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=702084

2013-06-14 16:05:59 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-sdp.c:
	* gst/rtsp-server/rtsp-sdp.h:
	  sdp: cleanup sdp info
	  We don't need to pass the proto, we can more easily check a boolean.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=702063

2013-06-12 15:22:57 +0200  Alexander Schrab <alexas@axis.com>

	* gst/rtsp-server/rtsp-sdp.c:
	  use 0.0.0.0 or :: for c= line instead of server address

2013-06-12 10:56:16 +0200  Alexander Schrab <alexas@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  use local address, not remote, in SDP
	  See https://bugzilla.gnome.org/show_bug.cgi?id=702063

2013-06-05 15:18:26 +0200  Sebastian Dröge <sebastian.droege@collabora.co.uk>

	* common:
	  Automatic update of common submodule
	  From 098c0d7 to 01a7a46

2013-05-29 13:45:00 +0200  David Svensson Fors <davidsf@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media: possibility to override range time conversion
	  Make it possible to override the conversion from GstRTSPTimeRange to
	  GstClockTimes, that is done before seeking on the media
	  pipeline. Overriding can be useful for UTC ranges, where the default
	  conversion gives nanoseconds since 1900.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=701191

2013-06-03 12:04:44 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	  rtsp-server: Expose the use_client_settings API
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=699935

2013-05-30 08:07:48 +0200  Alexander Schrab <alexas@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  rtspstream: handle both ipv4 and ipv6 clients
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=701129

2013-05-31 15:28:58 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-sdp.c:
	  Revert "rtsp-sdp: Parse width/height from caps and set SDP attribute"
	  This reverts commit 5fd034ff1a517db7f629ffcc3ed16839c61f5c97.
	  We already have a way to place extra attributes in the SDP by using a string
	  property with prefix x- or a- in the caps.

2013-05-31 15:27:48 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-sdp.c:
	  Revert "rtsp-sdp: Parse framerate caps field and set SDP attribute"
	  This reverts commit d6a4dee03642a2d2c05fec4752dc3ccb60b19494.
	  We already have a way to place extra attributes in the SDP, just make a string
	  property in the payloader with a- or x- prefix.

2013-05-31 15:41:55 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-sdp.c:
	  rtsp: place a- and x- properties as attributes
	  application/x-rtp has properties with a- and x- prefixes that should be
	  placed as attributes in the SDP for the media instead of being added to the
	  fmtp.

2013-05-31 12:10:28 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/Makefile.am:
	* examples/test-video.c:
	  example: add TLS example

2013-05-31 11:42:36 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	  server: add support for TLS
	  Add methods to set and get a TLS certificate.
	  Add vmethod to configure a new connection. By default, configure the TLS
	  certificate in a new connection if needed.

2013-05-31 11:14:17 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	  server: remove accept_client vmethod
	  This vmethod is not very useful so remove it.

2013-05-30 17:23:51 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	  server: don't crash on NULL GError

2013-05-30 10:46:33 +0200  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-session-pool.c:
	  rtsp-session-pool: corrected session timeout detection
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=701253

2013-05-30 10:52:46 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: improve debug

2013-05-30 07:18:22 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-server.c:
	  server: refactor connection setup
	  Let the server accept the socket connection and construct a GstRTSPConnection
	  from it. Remove the code from the client and let the client only deal with
	  a fully configure GstRTSPConnection object.
	  We will need this later when the server will configure the connection for
	  TLS.

2013-05-30 06:49:20 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: keep the transport object alive
	  Keep the transport object alive while we have it as qdata on the
	  source.

2013-05-27 12:58:07 +0200  Alexander Schrab <alexas@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-server.c:
	  rtsp-server: Do not crash on nmapping of server
	  * generate error when gst_rtsp_connection_accept fails
	  * do not stop accepting incoming connections because
	  accepting a client fails
	  https://bugzilla.gnome.org/show_bug.cgi?id=701072

2013-05-24 13:39:50 +0200  Alexander Schrab <alexas@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: ipv4 adress should not be marked ipv6 even if socket is ipv6
	  https://bugzilla.gnome.org/show_bug.cgi?id=700953

2013-05-22 03:29:38 +0200  Sebastian Rasmussen <sebrn@axis.com>

	* gst/rtsp-server/rtsp-sdp.c:
	  rtsp-sdp: Parse framerate caps field and set SDP attribute
	  The SDP attribute and its format is described in RFC4566.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=700747

2013-05-22 03:29:30 +0200  Sebastian Rasmussen <sebrn@axis.com>

	* gst/rtsp-server/rtsp-sdp.c:
	  rtsp-sdp: Parse width/height from caps and set SDP attribute
	  The SDP attribute and its format is described in RFC6064.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=700747

2013-04-29 14:46:30 +0200  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-sdp.c:
	* tests/check/gst/client.c:
	  rtsp-sdp: add bandwidth line
	  https://bugzilla.gnome.org/show_bug.cgi?id=699220

2013-05-15 10:55:09 +0200  Sebastian Dröge <sebastian.droege@collabora.co.uk>

	* common:
	  Automatic update of common submodule
	  From 5edcd85 to 098c0d7

2013-04-23 11:28:39 +0200  Ognyan Tonchev <ognyan@axis.com>

	* tests/check/gst/media.c:
	  tests: add dynamic payloader prepare/unprepare check

2013-04-23 10:27:35 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: release lock when removing fakesink

2013-04-23 10:16:17 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: set elements to NULL before removing
	  When removing a stream, set the elements to NULL first. This avoids
	  element-is-not-in-NULL-state errors when we dispose the elements.

2013-04-22 23:55:48 +0100  Tim-Philipp Müller <tim@centricular.net>

	* common:
	  Automatic update of common submodule
	  From 3cb3d3c to 5edcd85

2013-04-22 17:34:37 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media: listen to pad-removed signals
	  Listen to the pad-removed signal and remove the stream associated with the
	  removed pad.
	  Add signal to be notified of the removed pad.
	  Remove the fakesink in unprepare()
	  Fix signatures of the signal methods

2013-04-22 17:33:30 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-sdp.c:
	  tests: add example of reusable pipelines

2013-04-22 17:32:31 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  stream: add method to get the srcpad

2013-04-22 16:49:39 +0200  Ognyan Tonchev <ognyan@axis.com>

	* tests/check/gst/media.c:
	  check: add media prepare/unprepare test
	  See https://bugzilla.gnome.org/show_bug.cgi?id=698376

2013-04-22 16:40:48 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	  media: disconnect from signal handlers in unprepare()
	  We connected to the pad-added and no-more-pads signals in prepare() so
	  we need to disconnect from them in unprepare().
	  See https://bugzilla.gnome.org/show_bug.cgi?id=698376

2013-04-22 16:25:17 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	  media: don't free streams array
	  Don't free the streams array in the unprepare() method, they were not
	  added in prepare().
	  See https://bugzilla.gnome.org/show_bug.cgi?id=698376

2013-04-22 16:19:35 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	  media: don't unref the pipeline in unprepare
	  Unprepare() should undo what prepare() does. Because the pipeline is
	  not created in prepare(), we should not unref it in unprepare()

2013-04-22 16:09:22 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: clear session and caps for reuse
	  Set the session and caps to NULL after unref otherwise we might unref
	  them again later.
	  See https://bugzilla.gnome.org/show_bug.cgi?id=698376

2013-04-15 12:21:54 +0200  David Svensson Fors <davidsf@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: send out teardown signal before tearing down
	  The advantage is that in the signal handler you get direct access to
	  information about what streams are about to get torn down (in the
	  GstRTSPClientState).
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=697686

2013-04-15 12:17:34 +0200  David Svensson Fors <davidsf@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  client: expose connection
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=697546

2013-04-14 17:58:22 +0100  Tim-Philipp Müller <tim@centricular.net>

	* common:
	  Automatic update of common submodule
	  From aed87ae to 3cb3d3c

2013-04-12 11:34:38 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-session-media.c:
	* gst/rtsp-server/rtsp-session-media.h:
	  media: add method to get the base_time of the pipeline
	  Together with a shared clock, this base-time could eventually be sent to
	  the client so that it can reconstruct the exact running-time of the clock
	  on the server.

2013-04-09 22:35:28 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/Makefile.am:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-sdp.c:
	  media: add GstNetTimeProvider support
	  Add a property to let the media provide a GstNetTimeProvider for its clock.
	  Make methods to get the clock and nettimeprovider
	  Add a x-gst-clock property to the SDP with the IP and port number of the nettime
	  provider and also the current time of the clock. This should make it possible
	  for (GStreamer) clients to slave their clock to the server clock.

2013-04-09 21:02:47 +0200  Stefan Sauer <ensonic@users.sf.net>

	* common:
	  Automatic update of common submodule
	  From 04c7a1e to aed87ae

2013-04-09 20:39:58 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: wait for buffering to complete
	  Wait for buffering to complete before changing the state to the target state.

2013-04-09 20:11:35 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: small cleanup

2013-03-20 12:33:54 +0100  David Svensson Fors <davidsf@axis.com>

	* tests/check/gst/rtspserver.c:
	  tests: remove extra unref in test_setup_non_existing_stream
	  The unref is not needed anymore, teardown runs without it.
	  https://bugzilla.gnome.org/show_bug.cgi?id=696542

2013-03-20 11:28:11 +0100  David Svensson Fors <davidsf@axis.com>

	* tests/check/gst/rtspserver.c:
	  tests: GSocketService cleanup in test_bind_already_in_use
	  Use g_socket_service_stop so the rtspserver test stops listening for
	  incoming connections in test_bind_already_in_use.
	  https://bugzilla.gnome.org/show_bug.cgi?id=696541

2013-03-22 18:25:07 -0400  Olivier Crête <olivier.crete@collabora.com>

	* gst/rtsp-server/rtsp-media-factory.c:
	  rtsp-media-factory: g_signal_connect_object is not thread safe, can't use it here
	  Instead use a GWeakRef which is safe to use
	  This is a known GLib bug, see:
	  https://bugzilla.gnome.org/show_bug.cgi?id=667145

2013-02-22 14:17:29 -0500  Olivier Crête <olivier.crete@collabora.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-sdp.c:
	* tests/check/gst/media.c:
	* tests/check/gst/rtspserver.c:
	  rtsp-media/client: Reply to PLAY request with same type of Range
	  Remember the type of Range from the PLAY request and use the same type for
	  the reply.

2013-03-18 09:25:54 +0100  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	* tests/check/gst/client.c:
	  rtsp-client: expose uri

2013-03-13 17:46:58 -0400  Olivier Crête <olivier.crete@collabora.com>

	* tests/check/gst/mediafactory.c:
	  tests: Hold ref while creating second media
	  To test if the media aren't shared, make sure we keep the first one while creating a second
	  otherwise the same memory address may be reused.

2013-03-12 00:10:18 +0000  Tim-Philipp Müller <tim@centricular.net>

	* configure.ac:
	  configure: remove out-of-date comment

2013-03-12 00:05:49 +0000  Tim-Philipp Müller <tim@centricular.net>

	* .gitignore:
	  .gitignore: ignore more build files

2013-03-12 00:03:36 +0000  Tim-Philipp Müller <tim@centricular.net>

	* tests/check/Makefile.am:
	  tests: use right _LIBS variable for gst-plugins-base libs

2013-03-11 11:35:14 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* tests/check/Makefile.am:
	  check: add librtp to libs

2013-02-20 19:37:51 -0500  Olivier Crête <olivier.crete@collabora.com>

	* tests/check/gst/rtspserver.c:
	  tests: Add test to check selecting a port the server will send from

2013-02-20 18:30:01 -0500  Olivier Crête <olivier.crete@collabora.com>

	* tests/check/gst/rtspserver.c:
	  tests: Make sure packets are actually received

2013-02-19 18:27:20 -0500  Olivier Crête <olivier.crete@collabora.com>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: Select unicast address from pool if appropriate

2013-02-19 16:43:08 -0500  Olivier Crête <olivier.crete@collabora.com>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: Properties are always there in Gst 1.0

2013-02-19 16:36:20 -0500  Olivier Crête <olivier.crete@collabora.com>

	* tests/check/gst/addresspool.c:
	  tests: Add tests for unicast addresses in pool

2013-02-20 14:26:03 -0500  Olivier Crête <olivier.crete@collabora.com>

	* gst/rtsp-server/rtsp-address-pool.c:
	* tests/check/gst/addresspool.c:
	  address-pool: Verify that multicast addresses are used for multicast and vice-versa

2013-02-19 16:34:16 -0500  Olivier Crête <olivier.crete@collabora.com>

	* docs/libs/gst-rtsp-server-sections.txt:
	* gst/rtsp-server/rtsp-address-pool.c:
	* gst/rtsp-server/rtsp-address-pool.h:
	* gst/rtsp-server/rtsp-stream.c:
	* tests/check/gst/addresspool.c:
	  address-pool: Add unicast addresses

2013-02-19 13:19:41 -0500  Olivier Crête <olivier.crete@collabora.com>

	* configure.ac:
	* gst/rtsp-server/rtsp-server.c:
	* tests/check/gst/rtspserver.c:
	  rtsp-server: Limit the number of threads per server instance
	  If we exceed the maximum, just round robin the clients over the existing
	  threads.

2013-02-19 12:31:23 -0500  Olivier Crête <olivier.crete@collabora.com>

	* gst/rtsp-server/rtsp-server.c:
	  rtsp-server: No need to store the GMainContext in the client context

2013-02-18 20:22:18 -0500  Olivier Crête <olivier.crete@collabora.com>

	* tests/check/gst/rtspserver.c:
	  tests: Add test for client disconnection

2013-02-18 20:15:41 -0500  Olivier Crête <olivier.crete@collabora.com>

	* tests/check/gst/rtspserver.c:
	  tests: Test client and session timeouts with multiple threads

2013-02-18 14:59:58 -0500  Olivier Crête <olivier.crete@collabora.com>

	* gst/rtsp-server/rtsp-address-pool.c:
	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media-factory-uri.c:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-mount-points.c:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-session-media.c:
	* gst/rtsp-server/rtsp-session-pool.c:
	* gst/rtsp-server/rtsp-session.c:
	  Document locking and its order

2013-02-15 20:02:31 -0500  Olivier Crête <olivier.crete@collabora.com>

	* tests/check/gst/rtspserver.c:
	  tests: Test that slow DESCRIBE don't block other clients

2013-02-14 19:52:09 -0500  Olivier Crête <olivier.crete@collabora.com>

	* tests/check/gst/client.c:
	  tests: Add tests for client-requested multicast address

2013-02-14 13:44:54 -0500  Olivier Crête <olivier.crete@collabora.com>

	* docs/libs/gst-rtsp-server-sections.txt:
	  docs: Put the various functions in the right sections

2013-02-14 13:38:07 -0500  Olivier Crête <olivier.crete@collabora.com>

	* docs/libs/gst-rtsp-server-docs.sgml:
	* docs/libs/gst-rtsp-server-sections.txt:
	* gst/rtsp-server/rtsp-address-pool.c:
	* gst/rtsp-server/rtsp-address-pool.h:
	  docs: Generate docs for GstRTSPAddressPool

2013-02-13 18:32:20 -0500  Olivier Crête <olivier.crete@collabora.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  client: Check client provided addresses against the address pool

2013-02-13 18:01:43 -0500  Olivier Crête <olivier.crete@collabora.com>

	* gst/rtsp-server/rtsp-address-pool.c:
	* gst/rtsp-server/rtsp-address-pool.h:
	* tests/check/gst/addresspool.c:
	  address-pool: Add API to request a specific address from the pool
	  Also add relevant unit tests.

2013-02-12 19:34:24 -0500  Olivier Crête <olivier.crete@collabora.com>

	* tests/check/gst/mediafactory.c:
	  tests: Check the passing around of a RTSPAddressPool
	  Make sure the RTSPAddressPool is propagated from the MediaFactory all the
	  way down to the stream.

2013-02-12 16:34:37 -0500  Olivier Crête <olivier.crete@collabora.com>

	* tests/check/gst/addresspool.c:
	  tests: Add more tests for the address pool

2013-02-12 16:29:25 -0500  Olivier Crête <olivier.crete@collabora.com>

	* gst/rtsp-server/rtsp-address-pool.c:
	  address-pool: Fix off by one error
	  When splitting a port range, the port after a skip is not part of range.

2013-03-07 00:04:19 +0000  Tim-Philipp Müller <tim@centricular.net>

	* common:
	  Automatic update of common submodule
	  From 2de221c to 04c7a1e

2013-02-07 16:18:08 -0600  George McCollister <george.mccollister@gmail.com>

	* configure.ac:
	  configure: replace deprecated AM_CONFIG_HEADER with AC_CONFIG_HEADERS
	  AM_CONFIG_HEADER was removed in automake 1.13
	  https://bugzilla.gnome.org/show_bug.cgi?id=693368

2013-01-28 20:45:44 +0100  Stefan Sauer <ensonic@users.sf.net>

	* common:
	  Automatic update of common submodule
	  From a942293 to 2de221c

2013-01-28 10:31:50 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: make sure the watch exists while sending data
	  Protect the send_func with a lock. This allows us to wait for sending
	  to complete before changing the send_func and user_data. We add an
	  extra ref to the watch to make sure that it remains valid during
	  sending.
	  When closing the connection, set the send_func to NULL
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=692433

2013-01-16 12:16:32 +0000  Tim-Philipp Müller <tim.muller@collabora.co.uk>

	* tests/check/Makefile.am:
	  tests: use GST_*_1_0 environment variables everywhere
	  The _1_0 suffixed environment variables override the
	  non-suffixed ones, so if we're in an environment that
	  sets the _1_0 suffixed ones, such as jhbuild, we need
	  to set those to make sure ours actually always get
	  used.

2013-01-15 15:09:24 +0000  Tim-Philipp Müller <tim.muller@collabora.co.uk>

	* common:
	  Automatic update of common submodule
	  From acb04d9 to a942293

2012-12-14 11:58:29 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: set the client backlog
	  Set the client backlog to a reasonable default

2012-12-04 09:47:35 +0100  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: Make the element a constructor parameter
	  https://bugzilla.gnome.org/show_bug.cgi?id=689594

2012-12-04 01:05:31 +0100  Sebastian Rasmussen <sebras@hotmail.com>

	* docs/libs/Makefile.am:
	  docs: Link with gcov library when gcov is enabled
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=689583

2012-11-30 15:03:15 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: match prepare with unprepare
	  Really unprepare when there were an equal amount of prepare calls.

2012-11-30 14:58:46 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: media has to be unprepared in finalize
	  Because unprepare takes away the last ref on the media.

2012-11-30 14:36:30 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  Revert "client: never call gst_rtsp_media_unprepare, let gst_rtsp_media_finalize do it"
	  This reverts commit ba5b78ff2ff223049188eb456e228c709ccd3e05.
	  We can't use the refcount to trigger unprepare because it is the unprepare call
	  that removes the last refcount after all messages are consumed. What we should
	  probably do is make a prepared refcount and only unprepare when the refcount
	  reaches 0.

2012-11-30 13:35:05 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: let the source unref the last media ref
	  the last ref to the media is held by the source so we don't need to add more ref
	  and unrefs, we simply destroy the media when the source is gone.

2012-11-30 12:54:10 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: improve debug

2012-11-30 12:53:02 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: check state
	  Make sure we are in the right state when collecting the position and duration.
	  Only make ourselves PREPARED when we were previously PREPARING.

2012-11-30 10:05:48 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: use g_object_ref/unref for GObjects

2012-11-30 07:05:25 +0100  Alessandro Decina <alessandro.d@gmail.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: never call gst_rtsp_media_unprepare, let gst_rtsp_media_finalize do it
	  Calling gst_rtsp_media_unprepare breaks shared medias. Just unref
	  GstRTSPMedia instances and let gst_rtsp_media_finalize unprepare when a media
	  isn't being used anymore.

2012-11-30 06:17:46 +0100  Alessandro Decina <alessandro.d@gmail.com>

	* gst/rtsp-server/rtsp-media.c:
	  Fix compiler warning

2012-11-30 06:14:49 +0100  Alessandro Decina <alessandro.d@gmail.com>

	* gst/rtsp-server/rtsp-media-factory-uri.c:
	  Add missing g_type_class_add_private in GstRTSPMediaFactoryURI

2012-11-29 17:21:12 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-session-media.h:
	  small cleanup

2012-11-29 17:20:56 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* tests/check/gst/media.c:
	  media: avoid element leak

2012-11-29 17:20:26 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: require an element in media constructor

2012-11-29 17:07:30 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  Revert "client: TEARDOWN brings that state to Init again"
	  This reverts commit 4b61fdad85a3ca84752bf074fdb2fa203954b32e.
	  The object is already disposed, there is no point in setting the state.

2012-11-29 12:30:20 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: TEARDOWN brings that state to Init again

2012-11-29 11:11:05 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* docs/libs/gst-rtsp-server-sections.txt:
	* examples/test-auth.c:
	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-auth.h:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-media-factory-uri.c:
	* gst/rtsp-server/rtsp-media-factory-uri.h:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-mount-points.c:
	* gst/rtsp-server/rtsp-mount-points.h:
	* gst/rtsp-server/rtsp-sdp.c:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	* gst/rtsp-server/rtsp-session-media.c:
	* gst/rtsp-server/rtsp-session-media.h:
	* gst/rtsp-server/rtsp-session-pool.c:
	* gst/rtsp-server/rtsp-session-pool.h:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-session.h:
	* gst/rtsp-server/rtsp-stream-transport.c:
	* gst/rtsp-server/rtsp-stream-transport.h:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	* tests/check/gst/media.c:
	  rtsp: make object details private
	  Make all object details private
	  Add methods to access private bits

2012-11-28 14:50:47 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* tests/check/Makefile.am:
	* tests/check/gst/media.c:
	  tests: add media tests

2012-11-28 14:45:30 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: check if prepared for some methods
	  Check that the media object is prepared before doing seek and getting the
	  current position etc.
	  Add some g_return checks.

2012-11-28 12:40:46 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* tests/check/Makefile.am:
	* tests/check/gst/mediafactory.c:
	  tests: add mediafactory test

2012-11-28 12:40:18 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: improve debug

2012-11-28 12:39:37 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media: unref pipeline in finalize to avoid leaking it

2012-11-28 12:10:47 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory-uri.c:
	* gst/rtsp-server/rtsp-media.c:
	  rtsp: use gst_object_unref on GstObjects

2012-11-28 12:10:14 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory.c:
	  media-factory: require an url

2012-11-28 11:40:33 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-uri.c:
	  examples: fix include

2012-11-28 11:17:27 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.h:
	  server: remove unused include

2012-11-28 11:07:57 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* tests/check/Makefile.am:
	* tests/check/gst/mountpoints.c:
	  tests: add test for mountpoints

2012-11-28 11:05:08 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: fix factory leak
	  Keep the factory in the state object only for authorization checks and make
	  sure we unref it on failure. Also don't keep invalid objects in the state
	  object.

2012-11-28 10:40:14 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-mount-points.c:
	  mounts: add g_return_if guards

2012-11-27 12:51:55 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* tests/check/gst/client.c:
	  tests: add more tests

2012-11-27 12:33:02 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: improve debug

2012-11-27 12:24:21 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: improve debug and fix leaks
	  Cleanup the uri and session when there is a bad request.

2012-11-27 12:17:05 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* common:
	  update common

2012-11-27 12:13:59 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* tests/check/gst/client.c:
	  test: add test for session in options request

2012-11-27 12:11:41 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: use 454 when session can't be found
	  We should use 454 when a session can't be found because there was no session
	  pool configured in the server. This is not a server configuration problem
	  because the server on which the request is done might not be the same one that
	  will keep the sessions for us and so it does not need to support sessions.

2012-11-27 11:17:45 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: only free connection when there is one
	  It's possible that the client doesn't have a connection when we try to free it.

2012-11-27 11:17:31 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* tests/check/Makefile.am:
	* tests/check/gst/client.c:
	  tests: add unit test for the client object

2012-11-26 17:35:51 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: small cleanup

2012-11-26 17:34:35 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.h:
	  client: remove unused include

2012-11-26 17:34:24 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: fix compilation

2012-11-26 17:28:29 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: call destroy without the lock

2012-11-26 17:20:39 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  client: make the client usable without a socket
	  Make a method to let the client handle a message and a callback when the client
	  wants us to send a response message back. This makes it possible to also use the
	  client object without the sockets, which should make it easier to test.

2012-11-26 16:45:04 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  client: small cleanup

2012-11-26 16:39:26 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* docs/libs/gst-rtsp-server-sections.txt:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-server.c:
	  client: remove reference to server
	  We don't need to keep a ref to the server

2012-11-26 16:30:16 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  client: add locking
	  Also add some g_return_if()

2012-11-26 13:37:20 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: log more errors

2012-11-26 13:35:48 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: fix compilation

2012-11-26 13:16:59 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  client: add generic close-after-send support
	  Add a property to send_response() to close the connection after the response has
	  been sent to the client.

2012-11-26 12:34:05 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* docs/README:
	* docs/libs/gst-rtsp-server-docs.sgml:
	* docs/libs/gst-rtsp-server-sections.txt:
	* docs/libs/gst-rtsp-server.types:
	* examples/test-auth.c:
	* examples/test-launch.c:
	* examples/test-mp4.c:
	* examples/test-multicast.c:
	* examples/test-multicast2.c:
	* examples/test-ogg.c:
	* examples/test-readme.c:
	* examples/test-sdp.c:
	* examples/test-uri.c:
	* examples/test-video.c:
	* gst/rtsp-server/Makefile.am:
	* gst/rtsp-server/rtsp-auth.h:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-media-mapping.c:
	* gst/rtsp-server/rtsp-media-mapping.h:
	* gst/rtsp-server/rtsp-mount-points.c:
	* gst/rtsp-server/rtsp-mount-points.h:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	* gst/rtsp-server/rtsp-session-media.c:
	* gst/rtsp-server/rtsp-session-pool.c:
	* gst/rtsp-server/rtsp-session-pool.h:
	* tests/check/gst/rtspserver.c:
	  MediaMapping -> MountPoints
	  Describes better what the object manages.

2012-11-26 09:36:09 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* configure.ac:
	  configure: bump required version of -base

2012-11-21 17:21:28 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: fix seeking

2012-11-21 16:41:56 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media: support more Range formats
	  Use the new -base methods to convert the Range string into a seek start and stop
	  value.

2012-11-21 16:41:37 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-launch.c:
	  examples: fix whitespace

2012-11-20 13:34:46 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-auth.c:
	  test-auth: add example of how to remove sessions
	  Add an example of the session filter api.

2012-11-20 12:47:49 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-uri.c:
	  test-uri: remove mapping example

2012-11-20 12:47:20 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-uri.c:
	  test-uri: fix callback signature

2012-11-20 12:29:55 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory.c:
	  factory: keep ref to factory while media active
	  While the media from a factory is alive, keep a ref to the factory.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=663555

2012-11-20 12:29:26 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory-uri.c:
	  factory-uri: add some debug

2012-11-20 12:24:13 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: set udp sources to PLAYING
	  Set the UDP sources to PLAYING and locked state before we add it to the pipeline
	  so that it doesn't cause our pipeline to produce ASYNC-DONE.

2012-11-20 12:10:16 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory-uri.c:
	  factory-uri: take ref to factory
	  Take a ref to the factory that we place in our list.

2012-11-20 11:30:09 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* tests/Makefile.am:
	* tests/test-reuse.c:
	  test: add test for server reuse
	  See https://bugzilla.gnome.org/show_bug.cgi?id=688395

2012-11-15 14:02:37 +0100  David Svensson Fors <davidsf@axis.com>

	* gst/rtsp-server/rtsp-server.c:
	  server: start and stop multiple times
	  Stop listening on the RTSP port when the GSource is removed, so clients
	  can't connect and the server can be started again.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=688395

2012-11-20 11:24:35 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	  server: fix small leak

2012-11-20 09:42:51 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: unref source in finish_unprepare
	  The source is created in prepare, unref it in finish_unprepare.
	  See https://bugzilla.gnome.org/show_bug.cgi?id=688707

2012-11-19 15:47:08 +0100  David Svensson Fors <davidsf@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: remove bus watch before finalizing
	  * A GDestroyNotify function is set for the bus watch in gst_rtsp_media_prepare.
	  * An extra media ref is added for the bus watch. This extra ref is unreffed by
	  the GDestroyNotify function.
	  * gst_rtsp_media_unprepare destroys the source so the bus watch is removed.
	  * GstRTSPClient, which calls gst_rtsp_media_prepare, also calls
	  gst_rtsp_media_unprepare before unreffing the media.
	  This way, the bus watch will be removed before the media is finalized.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=688707

2012-11-17 14:51:52 +0100  Alessandro Decina <alessandro.d@gmail.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  client: wait until the TEARDOWN response is sent to close the connection
	  Responses can be sent async so we need to wait until the TEARDOWN response has
	  been written before we close the connection to the client. This avoids the risk
	  of writing/polling closed sockets.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=688535

2012-11-19 15:44:27 +0100  David Svensson Fors <davidsf@axis.com>

	* gst/rtsp-server/rtsp-stream.c:
	  rtsp-stream: plug socket leak
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=688703

2012-11-19 11:31:12 +0000  Tim-Philipp Müller <tim@centricular.net>

	* common:
	  Automatic update of common submodule
	  From 6bb6951 to a72faea

2012-11-17 00:11:27 +0000  Tim-Philipp Müller <tim@centricular.net>

	* gst/rtsp-server/rtsp-media-factory-uri.c:
	  rtsp-server: don't use deprecated API

2012-11-17 00:03:42 +0000  Tim-Philipp Müller <tim@centricular.net>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: fix unused-but-set-variable compiler warning
	  rtsp-client.c:1260:21: error: variable 'protocols' set but not used

2012-11-15 17:11:16 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* TODO:
	* docs/libs/gst-rtsp-server-sections.txt:
	* gst/rtsp-server/rtsp-client.c:
	  rtsp: cleanups

2012-11-15 16:52:42 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/Makefile.am:
	* examples/test-multicast2.c:
	  examples: add another multicast example
	  Add an example for how to configure separate multicast ranges for each media
	  stream.

2012-11-15 16:21:51 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-multicast.c:
	  test: set shared

2012-11-15 16:18:29 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-session-media.c:
	* gst/rtsp-server/rtsp-session-media.h:
	* gst/rtsp-server/rtsp-stream-transport.c:
	* gst/rtsp-server/rtsp-stream-transport.h:
	  stream: use the address managed by the stream
	  Use the address managed by the stream for multicast. This allows us to have 1
	  multicast address for each stream.
	  Because the address is now managed by the stream we don't have to pass it around
	  anymore.
	  Set the address pool on the streams.

2012-11-15 16:15:20 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-stream.c:
	  rtsp: improve debug

2012-11-15 15:41:42 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media: add signal for new streams
	  This allows applications to listen for new streams and configure properties on
	  them, like the address pool.

2012-11-15 15:41:19 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: configure address pool in new streams

2012-11-15 15:36:21 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  stream: add methods to deal with address pool
	  Add methods to get and set the address pool for the stream
	  Add method to allocate and get the multicast addresses for this stream.

2012-11-15 15:32:43 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* docs/libs/gst-rtsp-server-sections.txt:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media: remove MTU property
	  It is a stream property

2012-11-15 15:29:35 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: set blocksize only on stream
	  Set the blocksize only on the current stream.

2012-11-15 13:52:07 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: share src and sink sockets
	  the allocated socket is in the used-socket property, not socket.

2012-11-15 13:25:14 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-address-pool.c:
	* gst/rtsp-server/rtsp-address-pool.h:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-session-media.c:
	* gst/rtsp-server/rtsp-session-media.h:
	* gst/rtsp-server/rtsp-stream-transport.c:
	* gst/rtsp-server/rtsp-stream-transport.h:
	* tests/check/gst/addresspool.c:
	  rtsp: make address-pool return an address object
	  Return a boxed GstRTSPAddress from the GstRTSPAddressPool. This allows us to
	  store more info in the structure and allows us to more easily return the address
	  to the right pool when no longer needed.
	  Pass the address to the StreamTransport so that we can return it to the pool
	  when the stream transport is freed or changed.

2012-11-15 13:22:54 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/Makefile.am:
	* examples/test-multicast.c:
	  examples: add multicast example
	  Show how to set up the multicast address pool so that media can be
	  server with multicast.

2012-11-14 17:23:59 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  rtsp: use AddressPool
	  Remove the multicast_group property.
	  Use the configured addresspool to allocate multicast addresses.

2012-11-14 16:17:33 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-address-pool.c:
	* gst/rtsp-server/rtsp-address-pool.h:
	  address-pool: add clear method

2012-11-14 16:10:45 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-address-pool.c:
	  address-pool: small cleanups

2012-11-14 15:50:42 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* tests/check/Makefile.am:
	* tests/check/gst/addresspool.c:
	  tests: add addresspool unit test

2012-11-14 15:49:06 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/Makefile.am:
	* gst/rtsp-server/rtsp-address-pool.c:
	* gst/rtsp-server/rtsp-address-pool.h:
	  address-pool: add object to manage multicast addresses
	  Make an object that can manage a rage of multicast addresses and ports.

2012-11-13 12:05:42 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	  server: set default max-threads property

2012-11-13 11:54:17 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: wait for concurrent _prepare
	  If a prepare is busy, wait for the result.

2012-11-13 11:49:08 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: add lock around message handler
	  We don't want to dispatch messages while we are still processing the result of
	  the state change.

2012-11-13 11:15:35 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media: add lock to protect state changes

2012-11-13 11:14:49 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  stream: add locking

2012-11-12 17:11:18 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-stream-transport.c:
	* gst/rtsp-server/rtsp-stream-transport.h:
	* gst/rtsp-server/rtsp-stream.c:
	  stream-transport: add keep-alive method

2012-11-12 17:06:42 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-stream-transport.c:
	* gst/rtsp-server/rtsp-stream-transport.h:
	* gst/rtsp-server/rtsp-stream.c:
	  stream-transport: add method to handle RTP/RTCP
	  Call new methods instead of poking into the structures directly.

2012-11-12 16:51:03 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-session-media.c:
	* gst/rtsp-server/rtsp-session-media.h:
	  session-media: add locking

2012-11-12 16:42:37 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-session.h:
	  session: add locking

2012-11-12 16:30:16 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	  server: free old socket

2012-11-12 16:18:57 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-mapping.c:
	* gst/rtsp-server/rtsp-media-mapping.h:
	  mapping: add locking

2012-11-12 16:14:19 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory.c:
	  media-factory: add locking

2012-11-12 16:03:21 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-auth.h:
	  auth: add locking

2012-11-12 15:53:28 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	  server: add max-thread property

2012-11-12 15:29:39 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	  server: use a threadpool for the mainloops

2012-11-12 14:30:43 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  client: rename method
	  gst_rtsp_client_create_from_socket -> gst_rtsp_client_use_socket: we
	  don't really create the client from the socket, we use the socket for the
	  client.

2012-11-12 14:09:09 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-server.c:
	  server: rework maincontext handling in clients
	  Make a separate method to attach a client to a MainContext.
	  Let the server decide in what GMainContext the client will operate and give this
	  context to the client in attach. Then the server can later decide to use a
	  separate thread for each client or just use the mainthread.

2012-11-12 12:40:34 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-session.h:
	  session: move session header code in session object

2012-11-04 00:14:25 +0000  Tim-Philipp Müller <tim@centricular.net>

	* COPYING:
	* COPYING.LIB:
	* examples/test-auth.c:
	* examples/test-launch.c:
	* examples/test-mp4.c:
	* examples/test-ogg.c:
	* examples/test-readme.c:
	* examples/test-sdp.c:
	* examples/test-uri.c:
	* examples/test-video.c:
	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-auth.h:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-media-factory-uri.c:
	* gst/rtsp-server/rtsp-media-factory-uri.h:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media-mapping.c:
	* gst/rtsp-server/rtsp-media-mapping.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-params.c:
	* gst/rtsp-server/rtsp-params.h:
	* gst/rtsp-server/rtsp-sdp.c:
	* gst/rtsp-server/rtsp-sdp.h:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	* gst/rtsp-server/rtsp-session-media.c:
	* gst/rtsp-server/rtsp-session-media.h:
	* gst/rtsp-server/rtsp-session-pool.c:
	* gst/rtsp-server/rtsp-session-pool.h:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-session.h:
	* gst/rtsp-server/rtsp-stream-transport.c:
	* gst/rtsp-server/rtsp-stream-transport.h:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	* tests/check/gst/rtspserver.c:
	* tests/test-cleanup.c:
	  Fix FSF address

2012-10-28 13:48:44 +0100  Sebastian Pölsterl <sebp@k-d-w.org>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-session-media.c:
	* gst/rtsp-server/rtsp-session.c:
	  rtsp-server: added annotations to indicate type of ownership transfer of return values
	  https://bugzilla.gnome.org/show_bug.cgi?id=680777

2012-10-28 15:37:51 +0000  Tim-Philipp Müller <tim@centricular.net>

	* configure.ac:
	  No need to define GST_USE_UNSTABLE_API any more, 1.0 is stable now

2012-10-28 15:09:04 +0000  Tim-Philipp Müller <tim@centricular.net>

	* Makefile.am:
	* bindings/Makefile.am:
	* bindings/vala/Makefile.am:
	* bindings/vala/gst-rtsp-server-0.10.deps:
	* bindings/vala/gst-rtsp-server-0.10.vapi:
	* bindings/vala/packages/gst-rtsp-server-0.10.deps:
	* bindings/vala/packages/gst-rtsp-server-0.10.files:
	* bindings/vala/packages/gst-rtsp-server-0.10.gi:
	* bindings/vala/packages/gst-rtsp-server-0.10.metadata:
	* bindings/vala/packages/gst-rtsp-server-0.10.namespace:
	* configure.ac:
	  bindings: remove vala bindings
	  They'll be reunited with the other GStreamer bindings
	  https://bugzilla.gnome.org/show_bug.cgi?id=680777

2012-10-28 00:23:57 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-session-media.c:
	* gst/rtsp-server/rtsp-session-media.h:
	* gst/rtsp-server/rtsp-stream-transport.c:
	* gst/rtsp-server/rtsp-stream-transport.h:
	  rtsp: only create transport when needed
	  Only create the StreamTransport when configured.

2012-10-27 23:53:35 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: small cleanup

2012-10-27 23:49:24 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-stream-transport.c:
	* gst/rtsp-server/rtsp-stream-transport.h:
	  rtsp: refactor configuration of transport
	  Move the configuration of the transport to a place where it makes
	  more sense.

2012-10-27 21:26:55 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: refactor transport parsing

2012-10-27 21:05:03 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: refuse to change the MTU on shared media
	  If we change the MTU of chared media, it changes for all clients.
	  We don't want to set the MTU to something large for clients that
	  stream over UDP.

2012-10-27 11:53:51 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-mp4.c:
	* gst/rtsp-server/rtsp-media.c:
	  small fixes to docs and debug

2012-10-26 17:29:30 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-stream.c:
	  stream: transports must already have been removed

2012-10-26 17:28:10 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  stream: improve join and leave of the pipeline
	  simplify code
	  Do the cleanup properly
	  Add some docs

2012-10-26 15:23:16 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: move unprepare below default implementation
	  Makes it easier to find the default implementation

2012-10-26 15:21:50 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: signal unprepared when we actually finish

2012-10-26 15:19:23 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: no need to unlock, unprepare does that when needed

2012-10-26 12:33:21 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* docs/libs/gst-rtsp-server-sections.txt:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media-mapping.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-params.c:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-session-pool.h:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-session.h:
	* gst/rtsp-server/rtsp-stream-transport.h:
	* gst/rtsp-server/rtsp-stream.h:
	  docs: update docs

2012-10-26 12:04:02 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media-mapping.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-server.h:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  rtsp: fix MTU setting
	  Fix setting of the MTU. There is no need for a vmethod.

2012-10-26 11:02:43 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* docs/README:
	  docs: update docs

2012-10-26 11:24:55 +0100  Tim-Philipp Müller <tim.muller@collabora.co.uk>

	* configure.ac:
	  configure: bump version number after refactoring

2012-10-25 21:29:58 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/Makefile.am:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-media-factory-uri.c:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-sdp.c:
	* gst/rtsp-server/rtsp-session-media.c:
	* gst/rtsp-server/rtsp-session-media.h:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-session.h:
	* gst/rtsp-server/rtsp-stream-transport.c:
	* gst/rtsp-server/rtsp-stream-transport.h:
	* gst/rtsp-server/rtsp-stream.c:
	* gst/rtsp-server/rtsp-stream.h:
	  rtsp: massive refactoring
	  Make GObjects from the remaining simple structures.
	  Remove GstRTSPSessionStream, it's not needed.
	  Rename GstRTSPMediaStream -> GstRTSPStream: It is shorter
	  Rename GstRTSPMediaTrans -> GstRTSPStreamTransport: It describes how
	  a GstRTSPStream should be transported to a client.
	  Rename GstRTSPMediaFactory::get_element -> create_element because that
	  more accurately describes what it does.
	  Make nice methods instead of poking in the structures.
	  Move some methods inside the relevant object source code.
	  Use GPtrArray to store objects instead of plain arrays, it is more
	  natural and allows us to more easily clean up.
	  Move the allocation of udp ports to the Stream object. The Stream object
	  contains the elements needed to stream the media to a client.
	  Improve the prepare and unprepare methods. Unprepare should now undo
	  everything prepare did. Improve also async unprepare when doing EOS on
	  shutdown. Make sure we always unprepare correctly.

2012-10-23 22:11:17 +0200  Sebastian Rasmussen <sebrn@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: Unref server address clients connected to
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=686725

2012-10-22 16:09:24 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-server.c:
	  rtsp-server: don't ref server socket if it is NULL
	  Fixes test_bind_already_in_use unit test again after commit 6a497440.
	  https://bugzilla.gnome.org/show_bug.cgi?id=686644

2012-10-22 16:29:09 +0200  Sebastian Rasmussen <sebrn@axis.com>

	* tests/check/Makefile.am:
	  tests: Add libgio link dependency
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=686647

2012-10-01 20:03:43 +0200  Sebastian Pölsterl <sebp@k-d-w.org>

	* gst/rtsp-server/rtsp-media-mapping.c:
	* gst/rtsp-server/rtsp-media-mapping.h:
	  rtsp-media-mapping: rename find_media vfunc to find_factory
	  The virtual method and class method should have the same name
	  so it is correctly represented in GIR file
	  https://bugzilla.gnome.org/show_bug.cgi?id=680777

2012-10-01 19:46:15 +0200  Sebastian Pölsterl <sebp@k-d-w.org>

	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media-factory-uri.c:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-mapping.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-session-pool.c:
	* gst/rtsp-server/rtsp-session.c:
	  rtsp-server: fixed comments and GIR annotations
	  https://bugzilla.gnome.org/show_bug.cgi?id=680777

2012-10-12 07:18:19 +0200  Alessandro Decina <alessandro.d@gmail.com>

	* gst/rtsp-server/rtsp-media-mapping.c:
	  media-mapping: fix transfer mode for gst_rtsp_media_mapping_add_factory

2012-10-12 07:08:57 +0200  Alessandro Decina <alessandro.d@gmail.com>

	* gst/rtsp-server/rtsp-server.c:
	  rtsp-server: allow binding on port 0 (binds on a random port)

2012-10-12 06:21:24 +0200  Alessandro Decina <alessandro.d@gmail.com>

	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	  rtsp-server: add bound-port property
	  bound-port can be used to retrieve the port number when the server is bound on
	  port 0, which binds on a random port.

2012-10-12 06:11:36 +0200  Alessandro Decina <alessandro.d@gmail.com>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	  rtsp-media-factory: make ::get_element overridable by GI bindings
	  The way to annotate vfuncs with GI seems to be to create an invoker (GI term)
	  for them and to annotate the invoker. Add gst_rtsp_media_factory_get_element()
	  as the invoker for ::get_element(), making it overridable by GI generated
	  bindings.

2012-10-12 06:07:07 +0200  Alessandro Decina <alessandro.d@gmail.com>

	* gst/rtsp-server/rtsp-media-factory-uri.c:
	  rtsp-media-factory-uri: don't autoplug parsers in a loop
	  Stop autoplugging parsers if caps have parsed=true set. Fixes autoplugging
	  h264parse forever.

2012-10-06 15:49:07 +0200  Alessandro Decina <alessandro.d@gmail.com>

	* gst/rtsp-server/Makefile.am:
	  Explicitly link against gio. Fix link error on mac.

2012-10-10 11:13:10 +0200  Ognyan Tonchev <ognyan.tonchev at axis.com>

	* gst/rtsp-server/rtsp-session.c:
	  session: add ttl to the transport header in SETUP
	  See https://bugzilla.gnome.org/show_bug.cgi?id=685561

2012-10-10 11:06:02 +0200  Ognyan Tonchev <ognyan.tonchev at axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-media.c:
	  client: Use client transport settings for multicast if allowed.
	  This patch makes it possible for the client to send transport settings for
	  multicast (destination && ttl). Client settings must be explicitly allowed or
	  the server will use its own settings.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=685561

2012-10-06 15:02:27 +0100  Tim-Philipp Müller <tim@centricular.net>

	* common:
	  Automatic update of common submodule
	  From 6c0b52c to 6bb6951

2012-10-01 16:13:50 +0200  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: do not destroy the rtsp watch
	  Don't destroy the client watch while dispatching.  The rtsp watch is
	  automatically destroyed after the rtsp watch function closed() has
	  been called.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=685220

2012-09-22 16:11:48 +0100  Tim-Philipp Müller <tim@centricular.net>

	* common:
	  Automatic update of common submodule
	  From 4f962f7 to 6c0b52c

2012-09-10 16:25:57 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	  media: fix check for seekability

2012-09-07 17:14:30 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: use more GIO
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=681593

2012-09-07 17:14:10 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	  server: remove obsolete includes

2012-09-03 17:33:17 -0700  Aleix Conchillo Flaque <aleix@oblong.com>

	  rtsp-media: also initialize transports in on_ssrc_active (bug #683304)
	  * gst/rtsp-server/rtsp-media.c: GstRTSPMediaStream transports might not
	  be available in "on_new_ssrc". The transports are added in
	  gst_rtsp_media_set_state when going to PLAYING state. However,
	  "on_new_ssrc" might be called before this happens.
	  https://bugzilla.gnome.org/show_bug.cgi?id=683304

2012-09-03 10:48:14 -0700  Aleix Conchillo Flaque <aleix@oblong.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  rtsp-client: add signals for rtsp requests (fixes #683287)

2012-08-30 12:03:27 -0700  Aleix Conchillo Flaque <aleix@oblong.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  add new-session signal to rtsp-client (fixes #683058)

2012-08-22 13:34:55 +0200  Stefan Sauer <ensonic@users.sf.net>

	* common:
	  Automatic update of common submodule
	  From 668acee to 4f962f7

2012-08-15 15:54:32 +0200  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-server.c:
	* tests/check/gst/rtspserver.c:
	  rtsp-server: fixed segfault in gst_rtsp_server_create_socket
	  Do not assume that *error is set in g_socket_address_enumerator_next.
	  Added test_bind_already_in_use unit-test.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=681914

2012-08-05 16:43:53 +0100  Tim-Philipp Müller <tim@centricular.net>

	* common:
	  Automatic update of common submodule
	  From 94ccf4c to 668acee

2012-07-18 15:54:49 +0200  Patricia Muscalu <patricia@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  rtsp-client: make create_sdp virtual method
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=680173

2012-07-23 08:48:25 +0200  Sebastian Dröge <sebastian.droege@collabora.co.uk>

	* common:
	  Automatic update of common submodule
	  From 98e386f to 94ccf4c

2012-07-10 11:39:58 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: fix docs

2012-07-03 18:06:00 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	  rtsp-server: use an existing socket to establish HTTP tunnel
	  Make it possible to transfer a socket from an HTTP server to be used as
	  an RTSP over HTTP tunnel.

2012-07-03 13:26:30 +0200  Ognyan Tonchev <ognyan@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  rtsp: Handle the blocksize parameter
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=679325

2012-06-25 14:28:10 +0200  Sebastian Rasmussen <sebrn@axis.com>

	* tests/check/Makefile.am:
	* tests/check/gst/rtspserver.c:
	  Have unit test get header from source dir, not installed dir
	  This makes compilation of unit tests work in a build directory other
	  than the source directory.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=678789

2012-06-23 15:06:11 +0100  Tim-Philipp Müller <tim@centricular.net>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: update for gst_element_make_from_uri() changes

2012-06-19 15:25:36 +0200  David Svensson Fors <davidsf@axis.com>

	* configure.ac:
	* tests/Makefile.am:
	* tests/check/Makefile.am:
	* tests/check/gst/rtspserver.c:
	  rtsp: add unit test
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=678076

2012-06-13 11:43:17 +0200  David Svensson Fors <davidsf@axis.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: don't collect media stats when going to NULL
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=678015

2012-06-14 09:59:06 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: don't leak transports

2012-06-12 14:45:39 +0200  David Svensson Fors <davidsf@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: free transport on no_stream in SETUP handler

2012-06-12 14:33:35 +0200  David Svensson Fors <davidsf@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: changed session media iteration
	  In client_unlink_session: now don't iterate in session->medias
	  list where items are removed by gst_rtsp_session_release_media.
	  Instead, repeatedly remove the first item.

2012-06-12 13:39:35 +0200  David Svensson Fors <davidsf@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: don't use g_object_unref on GstRTSPSessionMedia
	  GstRTSPSessionMedia is not a GObject type. When the
	  GstRTSPSession is freed, it will free the media.

2012-06-12 13:36:57 +0200  David Svensson Fors <davidsf@axis.com>

	* gst/rtsp-server/rtsp-media-factory.c:
	  factory: plug pad leak in collect_streams
	  In gst_rtsp_media_factory_collect_streams: unref the srcpad that
	  was retrieved using gst_element_get_static_pad. gst_ghost_pad_new
	  will take one reference, and the other reference will otherwise
	  give a memory leak.

2012-05-25 16:43:38 +0200  Sebastian Rasmussen <sebrn@axis.com>

	* configure.ac:
	  configure: suppress some warnings when debug is disabled
	  Warnings about unused variables should be suppressed if core has the
	  debug system disabled.
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=676824

2012-06-09 17:41:05 +0100  Tim-Philipp Müller <tim.muller@collabora.co.uk>

	* docs/libs/Makefile.am:
	  docs: fix build in uninstalled setup
	  Include gst-plugins-base libs properly.

2012-05-25 16:38:15 +0200  Sebastian Rasmussen <sebrn@axis.com>

	* docs/libs/gst-rtsp-server.types:
	  docs: include headers defining rtsp-server object types
	  Fixes compiler warnings during docs build.
	  https://bugzilla.gnome.org/show_bug.cgi?id=676824

2012-05-25 17:11:53 +0200  Sebastian Rasmussen <sebrn@axis.com>

	* configure.ac:
	  configure: Add warning flags for compiler when configuring
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=676824

2012-06-08 15:07:06 +0200  Edward Hervey <edward.hervey@collabora.co.uk>

	* common:
	  Automatic update of common submodule
	  From 03a0e57 to 98e386f

2012-06-06 18:20:49 +0200  Edward Hervey <edward.hervey@collabora.co.uk>

	* common:
	  Automatic update of common submodule
	  From 1fab359 to 03a0e57

2012-06-06 14:49:02 +0200  David Svensson Fors <davidsf at axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: fix GSocketAddress leak in gst_rtsp_client_accept
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=677463

2012-06-01 10:30:58 +0200  Edward Hervey <edward.hervey@collabora.co.uk>

	* common:
	  Automatic update of common submodule
	  From f1b5a96 to 1fab359

2012-05-31 13:11:43 +0200  Sebastian Dröge <sebastian.droege@collabora.co.uk>

	* common:
	  Automatic update of common submodule
	  From 92b7266 to f1b5a96

2012-05-30 12:48:51 +0200  Sebastian Dröge <sebastian.droege@collabora.co.uk>

	* common:
	  Automatic update of common submodule
	  From ec1c4a8 to 92b7266

2012-05-30 11:27:31 +0200  Sebastian Dröge <sebastian.droege@collabora.co.uk>

	* common:
	  Automatic update of common submodule
	  From 3429ba6 to ec1c4a8

2012-05-22 15:37:25 +0200  David Svensson Fors <davidsf at axis.com>

	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media-factory-uri.c:
	* gst/rtsp-server/rtsp-server.c:
	  rtsp: fix compiler warnings
	  Fixes https://bugzilla.gnome.org/show_bug.cgi?id=676500

2012-05-13 15:59:10 +0200  Sebastian Dröge <sebastian.droege@collabora.co.uk>

	* common:
	  Automatic update of common submodule
	  From dc70203 to 3429ba6

2012-05-11 09:42:47 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	* gst/rtsp-server/rtsp-session-pool.c:
	* gst/rtsp-server/rtsp-session-pool.h:
	  rtsp-server: port to new thread API

2012-04-16 09:11:54 +0200  Sebastian Dröge <sebastian.droege@collabora.co.uk>

	* common:
	  Automatic update of common submodule
	  From 6db25be to dc70203

2012-04-13 15:27:22 +0200  Sebastian Dröge <sebastian.droege@collabora.co.uk>

	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-auth.h:
	* gst/rtsp-server/rtsp-client.c:
	  rtsp-server: Fix compilation and compiler warnings

2012-04-13 13:49:08 +0200  Sebastian Dröge <sebastian.droege@collabora.co.uk>

	* autogen.sh:
	* configure.ac:
	* gst/rtsp-server/Makefile.am:
	  configure: Modernize autotools setup a bit
	  Also we now only create tar.bz2 and tar.xz tarballs.

2012-04-13 13:39:40 +0200  Sebastian Dröge <sebastian.droege@collabora.co.uk>

	* common:
	  Automatic update of common submodule
	  From 464fe15 to 6db25be

2012-04-05 18:45:43 +0200  Sebastian Dröge <sebastian.droege@collabora.co.uk>

	* common:
	  Automatic update of common submodule
	  From 7fda524 to 464fe15

2012-04-04 14:45:55 +0200  Sebastian Dröge <sebastian.droege@collabora.co.uk>

	* configure.ac:
	* docs/libs/Makefile.am:
	* docs/version.entities.in:
	* gst-rtsp.spec.in:
	* gst/rtsp-server/Makefile.am:
	* pkgconfig/Makefile.am:
	* pkgconfig/gstreamer-rtsp-server-uninstalled.pc.in:
	* pkgconfig/gstreamer-rtsp-server.pc.in:
	* tests/Makefile.am:
	  rtsp-server: Update versioning

2012-03-29 15:12:21 +0200  Sebastian Dröge <sebastian.droege@collabora.co.uk>

	  Merge remote-tracking branch 'origin/0.10'
	  Conflicts:
	  gst/rtsp-server/rtsp-session-pool.c

2012-03-27 10:13:20 +0200  Sebastian Dröge <sebastian.droege@collabora.co.uk>

	* gst/rtsp-server/rtsp-session-pool.c:
	  rtsp-server: Don't use deprecated GLib API

2012-03-26 12:23:36 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	  Replace master with 0.11

2012-03-26 12:22:05 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	  Merge branch 'master' into 0.11

2012-03-26 12:20:51 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	  Merge branch 'master' into 0.11

2012-03-19 10:48:09 +0000  Vincent Penquerc'h <vincent.penquerch@collabora.co.uk>

	* docs/README:
	  A couple minor typo fixes

2012-03-13 18:10:53 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: fix state of the appqueue

2012-03-13 16:06:50 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory-uri.c:
	  factory: use videoconvert

2012-03-13 16:02:47 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory-uri.c:
	  factory: change to new style caps

2012-03-07 15:03:55 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-media-factory-uri.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	* gst/rtsp-server/rtsp-session-pool.c:
	  rtsp-server: port to GIO
	  Port to GIO

2012-03-07 15:03:24 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* configure.ac:
	  configure: fix build

2012-02-29 15:56:06 +0000  Tim-Philipp Müller <tim.muller@collabora.co.uk>

	* docs/README:
	  docs: fix for gst_rtsp_server_set_port() -> _set_service()
	  https://bugzilla.gnome.org/show_bug.cgi?id=666548

2012-02-13 11:42:51 +0000  Tim-Philipp Müller <tim.muller@collabora.co.uk>

	* configure.ac:
	* examples/Makefile.am:
	  First rule of gst-rtsp-server club: don't talk about gst-phonon

2012-02-13 11:40:44 +0000  Tim-Philipp Müller <tim.muller@collabora.co.uk>

	* configure.ac:
	* pkgconfig/Makefile.am:
	* pkgconfig/gstreamer-rtsp-server-uninstalled.pc.in:
	* pkgconfig/gstreamer-rtsp-server.pc.in:
	  pkg-config: rename gst-rtsp-server-0.11.pc to gstreamer-rtsp-server-0.11.pc
	  For consistency with all other modules.

2012-02-13 11:06:33 +0000  Tim-Philipp Müller <tim.muller@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: update for new map API

2012-02-13 10:37:37 +0000  Tim-Philipp Müller <tim.muller@collabora.co.uk>

	* .gitignore:
	* bindings/Makefile.am:
	* bindings/python/Makefile.am:
	* bindings/python/arg-types.py:
	* bindings/python/codegen/Makefile.am:
	* bindings/python/codegen/__init__.py:
	* bindings/python/codegen/argtypes.py:
	* bindings/python/codegen/code-coverage.py:
	* bindings/python/codegen/codegen.py:
	* bindings/python/codegen/definitions.py:
	* bindings/python/codegen/defsparser.py:
	* bindings/python/codegen/docextract.py:
	* bindings/python/codegen/docgen.py:
	* bindings/python/codegen/fileprefix.override:
	* bindings/python/codegen/fileprefixmodule.c:
	* bindings/python/codegen/h2def.py:
	* bindings/python/codegen/mergedefs.py:
	* bindings/python/codegen/mkskel.py:
	* bindings/python/codegen/override.py:
	* bindings/python/codegen/reversewrapper.py:
	* bindings/python/codegen/scmexpr.py:
	* bindings/python/rtspserver-types.defs:
	* bindings/python/rtspserver.defs:
	* bindings/python/rtspserver.override:
	* bindings/python/rtspservermodule.c:
	* bindings/python/test.py:
	* configure.ac:
	  python: remove pygst-based python bindings
	  pygi is the future, apparently.

2012-01-25 14:12:41 +0100  Thomas Vander Stichele <thomas (at) apestaart (dot) org>

	* common:
	  Automatic update of common submodule
	  From c463bc0 to 7fda524

2012-01-25 11:40:59 +0100  Sebastian Dröge <sebastian.droege@collabora.co.uk>

	* common:
	  Automatic update of common submodule
	  From 2a59016 to c463bc0

2012-01-18 16:48:41 +0100  Sebastian Dröge <sebastian.droege@collabora.co.uk>

	* common:
	  Automatic update of common submodule
	  From 0807187 to 2a59016

2012-01-04 19:56:02 +0000  Tim-Philipp Müller <tim.muller@collabora.co.uk>

	* common:
	  Automatic update of common submodule
	  From 11f0cd5 to 0807187

2011-12-09 11:00:46 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-auth.c:
	  example: update for new caps

2011-12-09 10:53:30 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-video.c:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media-factory-uri.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-session.h:
	  rtsp-server: port some more to 0.11
	  Fix caps.
	  Remove bufferlist stuff
	  Update for new API.
	  Add queue before appsink now that preroll-queue-len is gone.
	  Update for request pad changes.

2011-11-03 16:14:03 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	  Merge branch 'master' into 0.11

2011-11-03 16:06:23 +0100  Fabian Deutsch <fabian.deutsch@gmx.de>

	* bindings/vala/packages/gst-rtsp-server-0.10.metadata:
	  bindings: Fix vala binding of gst_rtsp_media_mapping_add_factory to transfer ownership.
	  Signed-off-by: Fabian Deutsch <fabian.deutsch@gmx.de>

2011-11-03 16:06:23 +0100  Fabian Deutsch <fabian.deutsch@gmx.de>

	* bindings/vala/packages/gst-rtsp-server-0.10.metadata:
	  bindings: Fix vala binding of gst_rtsp_media_mapping_add_factory to transfer ownership.
	  Signed-off-by: Fabian Deutsch <fabian.deutsch@gmx.de>

2011-11-03 12:58:42 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	  Merge branch 'master' into 0.11

2011-11-03 12:55:24 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media: add a seekable boolean
	  Maintain the seekable state with a new variable instead of reusing the
	  is_live variable.

2011-09-16 11:31:17 -0400  Victor Gottardi <vgottardi@hotmail.com>

	* gst/rtsp-server/rtsp-media.c:
	  Disallow seek in live media

2011-11-03 11:58:42 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	  Merge branch 'master' into 0.11

2011-11-03 10:48:40 +0100  mat <matzepopatze@gmx.de>

	* gst/rtsp-server/rtsp-server.c:
	  #ifdef statements for windows socket creation were missing

2011-09-06 21:53:46 +0200  Stefan Sauer <ensonic@users.sf.net>

	* common:
	  Automatic update of common submodule
	  From a39eb83 to 11f0cd5

2011-09-06 16:07:18 +0200  Stefan Sauer <ensonic@users.sf.net>

	* common:
	  Automatic update of common submodule
	  From 605cd9a to a39eb83

2011-08-16 16:39:26 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	  Merge branch 'master' into 0.11

2011-08-16 16:07:04 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: use method to access property

2011-08-16 15:15:19 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	  media-factory: add protocols property
	  Add a property to configure the allowed protocols in the media created from the
	  factory.

2011-08-16 15:03:06 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	  media-factory: add media-configure signal
	  Add signal to allow the application to configure the media after it was created
	  from the factory.

2011-08-16 16:07:04 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: use method to access property

2011-08-16 15:15:19 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	  media-factory: add protocols property
	  Add a property to configure the allowed protocols in the media created from the
	  factory.

2011-08-16 15:03:06 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	  media-factory: add media-configure signal
	  Add signal to allow the application to configure the media after it was created
	  from the factory.

2011-08-16 14:50:50 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	  Merge branch 'master' into 0.11

2011-08-16 13:43:44 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: use media multicast group

2011-08-16 13:37:50 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-server.h:
	* gst/rtsp-server/rtsp-session-pool.h:
	* gst/rtsp-server/rtsp-session.h:
	  retab some .h

2011-08-16 13:31:52 +0200  Robert Krakora <rob.krakora at messagenetsystems.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-sdp.h:
	  sdp: copy and free the server ip address
	  Copy and free the server ip address to make memory management easier later.

2011-08-16 13:27:39 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory.c:
	  media-factory: configure multicast in media

2011-08-16 13:25:16 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media: add property for multicast group
	  Add a property to configure the multicast group in the media.
	  Based on patches from Marc Leeman and Robert Krakora.

2011-08-16 13:13:36 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	  media-factory: add property for multicast group
	  Add a property to configure the multicast group in the media factory.
	  Based on patches from Marc Leeman and Robert Krakora.

2011-08-16 12:51:44 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: do configuration of transport in one place
	  Move the configuration of the transport destination address to where we also
	  configure the other bits.

2011-08-16 13:43:44 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: use media multicast group

2011-08-16 13:37:50 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-server.h:
	* gst/rtsp-server/rtsp-session-pool.h:
	* gst/rtsp-server/rtsp-session.h:
	  retab some .h

2011-08-16 13:31:52 +0200  Robert Krakora <rob.krakora at messagenetsystems.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-sdp.h:
	  sdp: copy and free the server ip address
	  Copy and free the server ip address to make memory management easier later.

2011-08-16 13:27:39 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory.c:
	  media-factory: configure multicast in media

2011-08-16 13:25:16 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media: add property for multicast group
	  Add a property to configure the multicast group in the media.
	  Based on patches from Marc Leeman and Robert Krakora.

2011-08-16 13:13:36 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	  media-factory: add property for multicast group
	  Add a property to configure the multicast group in the media factory.
	  Based on patches from Marc Leeman and Robert Krakora.

2011-08-16 12:51:44 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: do configuration of transport in one place
	  Move the configuration of the transport destination address to where we also
	  configure the other bits.

2011-08-16 12:11:59 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	  Merge branch 'master' into 0.11

2011-08-16 12:09:48 +0200  Robert Krakora <rob.krakora at messagenetsystems.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: destroy pipeline on client disconnect with no prior TEARDOWN.
	  The problem occurs when the client abruptly closes the connection without
	  issuing a TEARDOWN.  The TEARDOWN handler in the rtsp-client.c file of the RTSP
	  server is where the pipeline gets torn down.  Since this handler is not called,
	  the pipeline remains and is up and running.  Subsequent clients get their own
	  pipelines and if the do not issue TEARDOWNs then those pipelines will also
	  remain up and running.  This is a resource leak.

2011-08-16 11:53:37 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	  Merge branch 'master' into 0.11

2011-06-30 10:13:59 +0200  Emmanuel Pacaud <emmanuel@gnome.org>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	  media-factory: add a "media-constructed" signal to GstRTSPMediaFactory
	  For example, it can be used to retrieve source elements like appsrc, in a more
	  convenient way than subclassing get_element.

2011-08-16 11:12:33 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	  Merge branch 'master' into 0.11

2011-08-11 18:07:08 -0700  David Schleef <ds@schleef.org>

	* gst/rtsp-server/rtsp-server.c:
	  rtsp-server: hold on to reference while using object

2011-08-04 08:59:17 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: use new api

2011-08-04 08:58:58 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* configure.ac:
	  configure: use unstable api

2011-06-27 11:26:26 -0700  David Schleef <ds@schleef.org>

	* gst/rtsp-server/rtsp-client.c:
	  client: fix reference counting

2011-07-20 17:16:42 +0200  Thijs Vermeir <thijsvermeir@gmail.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	  fix compiler warnings about unused variables

2011-07-19 16:10:39 +0200  Stefan Sauer <ensonic@google.com>

	* examples/test-launch.c:
	* examples/test-readme.c:
	* examples/test-uri.c:
	* examples/test-video.c:
	  examples: tell rtsp uri when ready

2011-06-23 11:30:14 -0700  David Schleef <ds@schleef.org>

	* common:
	  Automatic update of common submodule
	  From 69b981f to 605cd9a

2011-06-13 19:05:57 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: update for buffer API change

2011-06-07 10:54:26 +0200  Edward Hervey <edward.hervey@collabora.co.uk>

	* gst/rtsp-server/Makefile.am:
	  Makefile.am: 0.10 => @GST_MAJORMINOR@

2011-06-07 10:59:16 +0200  Edward Hervey <edward.hervey@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory-uri.c:
	  rtsp-media-factory-uri: GST_PLUGIN_FEATURE_NAME is no longer

2011-06-07 10:59:03 +0200  Edward Hervey <edward.hervey@collabora.co.uk>

	* gst/rtsp-server/.gitignore:
	  .gitignore: 0.10 => 0.11

2011-06-07 10:54:26 +0200  Edward Hervey <edward.hervey@collabora.co.uk>

	* gst/rtsp-server/Makefile.am:
	  Makefile.am: 0.10 => @GST_MAJORMINOR@

2011-05-24 18:26:06 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	  Merge branch 'master' into 0.11

2011-05-19 23:00:52 +0300  Stefan Kost <ensonic@users.sf.net>

	* common:
	  Automatic update of common submodule
	  From 9e5bbd5 to 69b981f

2011-05-18 16:14:10 +0300  Stefan Kost <ensonic@users.sf.net>

	* common:
	  Automatic update of common submodule
	  From fd35073 to 9e5bbd5

2011-05-18 12:27:35 +0300  Stefan Kost <ensonic@users.sf.net>

	* common:
	  Automatic update of common submodule
	  From 46dfcea to fd35073

2011-05-17 09:48:13 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory-uri.c:
	* gst/rtsp-server/rtsp-media.c:
	  media: port to new caps API

2011-05-17 09:45:04 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	  Merge branch 'master' into 0.11

2011-05-03 21:13:15 +0200  Fabian Deutsch <fabian.deutsch@gmx.de>

	* bindings/vala/gst-rtsp-server-0.10.vapi:
	  Updated Vala bindings.
	  Signed-off-by: Fabian Deutsch <fabian.deutsch@gmx.de>

2011-05-03 16:24:28 +0200  Fabian Deutsch <fabian.deutsch@gmx.de>

	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	  Add a signal for newly connected clients.
	  Signed-off-by: Fabian Deutsch <fabian.deutsch@gmx.de>

2011-05-08 13:15:19 +0200  Alessandro Decina <alessandro.d@gmail.com>

	* bindings/python/rtspserver.override:
	  python: override gst_rtsp_media_mapping_add_factory to fix refcounting

2011-04-26 19:22:50 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/Makefile.am:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-funnel.c:
	* gst/rtsp-server/rtsp-funnel.h:
	* gst/rtsp-server/rtsp-media.c:
	  rtsp-server: port to 0.11

2011-04-26 19:14:18 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* common:
	  add common

2011-04-26 19:07:13 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	  Merge branch 'master' into 0.11
	  Conflicts:
	  common
	  configure.ac

2011-04-24 14:07:11 +0100  Tim-Philipp Müller <tim.muller@collabora.co.uk>

	* common:
	  Automatic update of common submodule
	  From c3cafe1 to 46dfcea

2011-04-20 11:19:38 +0200  Alessandro Decina <alessandro.d@gmail.com>

	* bindings/python/Makefile.am:
	* bindings/python/rtspserver.defs:
	  python bindings: wrap GstRTSPMediaFactoryClass vfuncs

2011-04-20 11:13:56 +0200  Alessandro Decina <alessandro.d@gmail.com>

	* bindings/python/arg-types.py:
	  python bindings: add GstRTSPUrlParam
	  Needed to implement MediaFactory virtual proxies

2011-04-20 10:19:46 +0200  Alessandro Decina <alessandro.d@gmail.com>

	* bindings/python/arg-types.py:
	  python bindings: fix returning GstRTSPUrl types

2011-04-20 10:17:07 +0200  Alessandro Decina <alessandro.d@gmail.com>

	* bindings/python/arg-types.py:
	  python bindings: add arg type for GstRTSPUrl

2011-04-20 10:16:08 +0200  Alessandro Decina <alessandro.d@gmail.com>

	* bindings/python/rtspserver.defs:
	  python bindings: fix the definition of MediaFactory.collect_stream

2011-04-04 15:59:50 +0300  Stefan Kost <ensonic@users.sf.net>

	* common:
	  Automatic update of common submodule
	  From 1ccbe09 to c3cafe1

2011-03-25 22:38:06 +0100  Sebastian Dröge <sebastian.droege@collabora.co.uk>

	* common:
	  Automatic update of common submodule
	  From 193b717 to 1ccbe09

2011-03-25 14:58:34 +0200  Stefan Kost <ensonic@users.sf.net>

	* common:
	  Automatic update of common submodule
	  From b77e2bf to 193b717

2011-03-25 10:04:57 +0100  Sebastian Dröge <sebastian.droege@collabora.co.uk>

	* Makefile.am:
	  build: Include lcov.mak to allow test coverage report generation

2011-03-25 09:35:15 +0100  Sebastian Dröge <sebastian.droege@collabora.co.uk>

	* common:
	  Automatic update of common submodule
	  From d8814b6 to b77e2bf

2011-03-25 09:11:40 +0100  Sebastian Dröge <sebastian.droege@collabora.co.uk>

	* common:
	  Automatic update of common submodule
	  From 6aaa286 to d8814b6

2011-03-24 18:51:37 +0200  Stefan Kost <ensonic@users.sf.net>

	* common:
	  Automatic update of common submodule
	  From 6aec6b9 to 6aaa286

2011-03-18 19:34:57 +0100  Luis de Bethencourt <luis@debethencourt.com>

	* autogen.sh:
	  autogen: wingo signed comment

2011-03-03 20:38:03 +0100  Miguel Angel Cabrera Moya <madmac2501@gmail.com>

	* gst/rtsp-server/rtsp-session-pool.c:
	  session: use full charset for RTSP session ID
	  As specified in RFC 2326 section 3.4 use full valid charset to make guessing
	  session ID more difficult.
	  https://bugzilla.gnome.org/show_bug.cgi?id=643812

2011-03-07 10:23:06 +0100  Sebastian Dröge <sebastian.droege@collabora.co.uk>

	* gst/rtsp-server/Makefile.am:
	  rtsp-server: Don't install the funnel header

2011-02-28 18:35:03 +0100  Mark Nauwelaerts <mark.nauwelaerts@collabora.co.uk>

	* common:
	  Automatic update of common submodule
	  From 1de7f6a to 6aec6b9

2011-02-26 19:58:02 +0000  Tim-Philipp Müller <tim.muller@collabora.co.uk>

	* configure.ac:
	  configure: require core/base 0.10.31
	  Needed at least for gst_plugin_feature_rank_compare_func().

2011-02-14 12:56:29 +0200  Stefan Kost <ensonic@users.sf.net>

	* common:
	  Automatic update of common submodule
	  From f94d739 to 1de7f6a

2011-02-02 15:37:03 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: remove more unused code

2011-02-02 15:30:45 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media: remove duplicate filtering
	  Remove the duplicate filtering code now that we have a released -good version.
	  Give a warning instead.

2011-01-31 17:38:47 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media.c:
	  media: fix default buffer size

2011-01-31 17:37:02 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	  media-factory: add property to configure the buffer-size
	  Add a property to configure the kernel UDP buffer size.

2011-01-31 17:28:22 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media: add property to configure kernel buffer sizes
	  Add a property to configure the kernel UDP buffer size.

2011-01-26 15:52:54 +0000  Tim-Philipp Müller <tim.muller@collabora.co.uk>

	* configure.ac:
	  configure: set PYGOBJECT_REQ before using it
	  https://bugzilla.gnome.org/show_bug.cgi?id=640641

2011-01-24 11:59:22 +0000  Tim-Philipp Müller <tim.muller@collabora.co.uk>

	* docs/Makefile.am:
	  docs: recursive into sub-directories on 'make upload'

2011-01-24 11:53:17 +0000  Tim-Philipp Müller <tim.muller@collabora.co.uk>

	* docs/libs/gst-rtsp-server-docs.sgml:
	* docs/version.entities.in:
	  docs: mention full version these docs are for, not just major-minor

2011-01-24 12:07:17 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* configure.ac:
	  back to development

=== release 0.10.8 ===

2011-01-24 11:57:12 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* configure.ac:
	  release 0.10.8

2011-01-19 15:29:55 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	  rtsp-server: clarify docs a little

2011-01-13 18:57:15 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: init debug category before starting thread

2011-01-13 18:40:48 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-auth.c:
	  auth: add realm to make it more spec compliant

2011-01-12 18:57:41 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	  server: add locking

2011-01-12 18:33:49 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-video.c:
	  example: improve example docs a little

2011-01-12 18:26:57 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	  server: ensure the watch has a ref to the server

2011-01-12 18:24:44 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	  server: simpify channel function

2011-01-12 18:18:13 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	  server: simplify management of channel and source
	  We don't need to keep around the channel and source objects. Let the mainloop
	  and the source manage the source and channel respectively.

2011-01-12 18:17:26 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* Makefile.am:
	* configure.ac:
	  build tests

2011-01-12 18:16:46 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* tests/.gitignore:
	* tests/Makefile.am:
	* tests/test-cleanup.c:
	  tests: add tests directory and cleanup test

2011-01-12 18:14:48 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory-uri.c:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-mapping.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-session-pool.c:
	* gst/rtsp-server/rtsp-session.c:
	  server: improve debugging in various objects

2011-01-12 16:38:34 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	  server: chain up to the parent finalize

2010-09-21 17:04:02 -0300  André Dieb Martins <andre.dieb@gmail.com>

	* bindings/python/rtspserver-types.defs:
	* bindings/python/rtspserver.defs:
	* bindings/python/rtspserver.override:
	* bindings/python/test.py:
	  gst-rtsp-server: update python bindings

2011-01-12 15:37:39 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: use the response from the clientstate
	  Create the response object only once and store in the client state.
	  Make all methods use the state response,

2011-01-12 15:36:22 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	  server: use signal to keep track of clients
	  Keep track of all the clients that the server creates and remove them when they
	  fire the 'closed' signal.

2011-01-12 15:35:51 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  client: emit signal when closing

2011-01-12 13:57:09 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/.gitignore:
	* examples/Makefile.am:
	* examples/test-auth.c:
	* examples/test-video.c:
	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-auth.h:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-session-pool.h:
	* gst/rtsp-server/rtsp-session.h:
	  media: enable per factory authorisations
	  Allow for adding a GstRTSPAuth on the factory and media level and check
	  permissions when accessing the factory.
	  Add hints to the auth methods for future more fine grained authorisation.
	  Add example application for per factory authentication.

2011-01-12 13:16:08 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-auth.h:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-params.c:
	* gst/rtsp-server/rtsp-params.h:
	  rtsp-server: Pass ClientState structure arround
	  Pass the collected information for the ongoing request in a GstRTSPClientState
	  structure that we can then pass around to simplify the method arguments. This
	  will also be handy when we implement logging functionality.

2011-01-12 12:07:40 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	  media-factory: add methods to configure authorisation

2011-01-12 12:07:20 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: unref auth in finalize

2011-01-12 12:07:04 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	  server: unref auth in finalize

2011-01-12 11:07:26 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* docs/libs/gst-rtsp-server-docs.sgml:
	* docs/libs/gst-rtsp-server-sections.txt:
	* docs/libs/gst-rtsp-server.types:
	  docs: add more docs

2011-01-12 10:57:08 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	  server: separate create and accept
	  Create separate create and accept methods so that subclasses can create custom
	  client object.
	  Configure the server in the client object and prepare for keeping track of
	  connected clients.

2011-01-12 10:42:52 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  client: add support for setting the server.
	  Add support for keeping a ref to the server that started this client
	  connection.

2011-01-12 10:41:42 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-auth.c:
	  auth: fix memleak and add some docs
	  Fix a memleak of the basic auth token.
	  Add docs for the helper function

2011-01-12 00:35:28 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-auth.h:
	* gst/rtsp-server/rtsp-client.c:
	  client: delegate setup of auth to the manager
	  Delegate the configuration of the authentication tokens to the manager object
	  when configured.

2011-01-12 00:17:54 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-video.c:
	* gst/rtsp-server/Makefile.am:
	* gst/rtsp-server/rtsp-auth.c:
	* gst/rtsp-server/rtsp-auth.h:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	  auth: add authentication object
	  Add an object that can check the authorization of requests.
	  Implement basic authentication.
	  Add example authentication to test-video

2011-01-12 00:20:36 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	  server: move includes back
	  the includes are needed for sockaddr_in.

2011-01-11 22:41:12 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	  rtsp: move network includes where they are needed

2011-01-07 23:45:32 +0200  Sreerenj Balachandran <sreerenj.balachandran@nokia.com>

	* gst/rtsp-server/rtsp-media.h:
	  rtsp-media.h: Minor corrections in comments.
	  Fixes #638944

2011-01-11 15:52:44 +0200  Stefan Kost <ensonic@users.sf.net>

	* common:
	  Automatic update of common submodule
	  From e572c87 to f94d739

2011-01-11 13:01:44 +0100  Edward Hervey <edward.hervey@collabora.co.uk>

	* .gitignore:
	* docs/.gitignore:
	* docs/libs/.gitignore:
	* examples/.gitignore:
	* gst/rtsp-server/.gitignore:
	  gitignore: updates

2011-01-11 12:58:39 +0100  Edward Hervey <edward.hervey@collabora.co.uk>

	* docs/libs/Makefile.am:
	  docs: We don't build ps/pdf for API reference docs

2011-01-10 16:39:36 +0000  Tim-Philipp Müller <tim.muller@collabora.co.uk>

	* common:
	  Automatic update of common submodule
	  From ccbaa85 to e572c87

2011-01-10 14:56:39 +0000  Tim-Philipp Müller <tim.muller@collabora.co.uk>

	* common:
	  Automatic update of common submodule
	  From 46445ad to ccbaa85

2011-01-10 15:10:53 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/Makefile.am:
	* gst/rtsp-server/rtsp-funnel.c:
	* gst/rtsp-server/rtsp-funnel.h:
	* gst/rtsp-server/rtsp-media.c:
	  funnel: rename fsfunnel to rtspfunnel
	  Rename the funnel to avoid conflicts with the farsight one.

2011-01-10 13:41:43 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/Makefile.am:
	* gst/rtsp-server/fs-funnel.c:
	* gst/rtsp-server/fs-funnel.h:
	* gst/rtsp-server/rtsp-media.c:
	  rtsp-media: add and use fsfunnel
	  Add a copy of fsfunnel to the build because input-selector removed the (broken)
	  select-all property that we need.

2011-01-08 01:58:44 +0000  Tim-Philipp Müller <tim.muller@collabora.co.uk>

	* gst/rtsp-server/Makefile.am:
	  gobject-introspection: use PKG_CONFIG_PATH specified at configure time
	  Use PKG_CONFIG_PATH specified at configure time (if any) as well
	  for the g-ir-compiler, rather than just assuming the env var has
	  been set.

2011-01-08 01:55:06 +0000  Tim-Philipp Müller <tim.muller@collabora.co.uk>

	* .gitignore:
	* Makefile.am:
	* configure.ac:
	* m4/Makefile.am:
	* m4/codeset.m4:
	  build: make autotools put all .m4 cruft into m4/ rather than polluting common/m4

2011-01-08 01:15:35 +0000  Tim-Philipp Müller <tim.muller@collabora.co.uk>

	* configure.ac:
	* gst/rtsp-server/Makefile.am:
	  gobject-introspection: fix g-i build for uninstalled setup
	  Requires gst-plugins-base git (> 0.10.31.2).

2011-01-07 11:27:57 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-uri.c:
	  examples: add some more options and comments

2011-01-07 11:24:39 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory-uri.c:
	  factory-uri: use right property type

2011-01-05 12:07:42 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory-uri.c:
	  factory-uri: attempt to configure buffer-lists
	  Attempt to configure buffer lists in the payloader for improved performance.

2011-01-05 12:06:23 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: attempt to configure bigger UDP buffers
	  Attempt to configure bigger udp kernel send buffers to avoid overflowing the
	  send buffers with high bitrate streams.

2011-01-05 11:26:30 +0100  Jonas Larsson <jonas at hallerud dot se>

	* gst/rtsp-server/rtsp-client.c:
	  client: use the socket length from getsockname
	  Use the length returned by getsockname to perform the getnameinfo call because
	  the size can depend on the socket type and platform.
	  Fixes #638723

2010-12-30 12:41:53 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* docs/libs/gst-rtsp-server-docs.sgml:
	* docs/libs/gst-rtsp-server-sections.txt:
	  docs: add uri factory to the docs

2010-12-30 12:41:31 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.h:
	  docs: improve docs

2010-12-29 16:26:41 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-session.h:
	  rtsp-server: add support for buffer lists
	  Add support for sending bufferlists received from appsink.
	  Fixes #635832

2010-12-28 18:35:01 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-sdp.c:
	  media: make method to retrieve the play range
	  Make a method to retrieve the playback range so that we can conditionally create
	  a different range for the SDP and the PLAY requests.

2010-12-28 18:34:10 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media: add signal to notify of state changes

2010-12-28 18:31:26 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.h:
	  client: cleanup headers

2010-12-28 12:18:41 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: fix typo

2010-12-23 18:53:01 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory-uri.c:
	* gst/rtsp-server/rtsp-media-factory-uri.h:
	  factory-uri: add support for gstpay
	  Add an option to prefer gstpay over decoder + raw payloader.

2010-12-23 15:58:14 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory-uri.c:
	* gst/rtsp-server/rtsp-media-factory-uri.h:
	  factory-uri: rework the autoplugger.
	  Rewrite the autoplugger a little so that it prefers to plug demuxers and parsers
	  before payloaders.

2010-12-21 17:37:26 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory-uri.c:
	  factory-uri: use better factory filter
	  Make better payloader filter based on autoplug rank and RTP use case.

2010-12-20 17:48:41 +0100  Edward Hervey <edward.hervey@collabora.co.uk>

	* common:
	  Automatic update of common submodule
	  From 169462a to 46445ad

2010-12-18 11:24:48 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	  server: set SO_REUSEADDR before bind
	  Set the SO_REUSEADDR _before_ bind() to make it actually work.

2010-12-13 16:58:36 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media: emit prepared signal when prepared
	  Make a 'prepared' signal and emit it when we successfully prepared the element.
	  This signal can be used to configure the media object after it has been prepared
	  for streaming.

2010-12-15 14:58:00 +0200  Stefan Kost <ensonic@users.sf.net>

	* common:
	  Automatic update of common submodule
	  From 011bcc8 to 169462a

2010-12-13 16:38:09 +0100  Andy Wingo <wingo@oblong.com>

	  python an optional dependency
	  * configure.ac: Move up valgrind and g-i checks. Make the python
	  dependency optional, as it was before.

2010-12-13 11:43:13 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	  Merge branch 'master' into 0.11
	  Conflicts:
	  common
	  configure.ac

2010-12-12 15:48:47 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: update range when active clients changed
	  When we changed the number of active clients, update the current range
	  information because we want the second client connecting to a shared resource
	  continue from where the stream currently.

2010-12-12 04:06:41 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory-uri.c:
	* gst/rtsp-server/rtsp-media-factory-uri.h:
	  factory-uri: add colorspace and fix pt
	  Rework the way we pass data to the autoplugger.
	  When we have raw caps, plug a converter element to make pluggin to raw
	  payloaders more successful.
	  Make sure all dynamically plugged payloaders have a unique payload types.

2010-12-11 18:06:26 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/Makefile.am:
	* examples/test-uri.c:
	  example: add example of the uri factory

2010-12-11 18:01:53 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/Makefile.am:
	* gst/rtsp-server/rtsp-media-factory-uri.c:
	* gst/rtsp-server/rtsp-media-factory-uri.h:
	* gst/rtsp-server/rtsp-server.h:
	  factory-uri: add a factory to stream any URI
	  Make a factory that uses uridecodebin to decode any uri and autoplug a payloader
	  when we have one.

2010-12-11 17:31:44 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media: ignore spurious ASYNC_DONE messages
	  When we are dynamically adding pads, the addition of the udpsrc elements will
	  trigger an ASYNC_DONE. We have to ignore this because we only want to react to
	  the real ASYNC_DONE when everything is prerolled.

2010-12-11 13:41:24 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	  media-factory: make lock macro

2010-12-11 10:53:28 +0100  Edward Hervey <bilboed@bilboed.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-server: Remove unused variable and dead assignment

2010-12-11 10:49:30 +0100  Edward Hervey <bilboed@bilboed.com>

	* examples/test-launch.c:
	* examples/test-mp4.c:
	* examples/test-ogg.c:
	* examples/test-readme.c:
	* examples/test-sdp.c:
	* examples/test-video.c:
	  examples: Run gst-indent

2010-12-11 10:48:42 +0100  Edward Hervey <bilboed@bilboed.com>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-mapping.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-params.c:
	* gst/rtsp-server/rtsp-sdp.c:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-session-pool.c:
	* gst/rtsp-server/rtsp-session.c:
	  rtsp-server: Run gst-indent
	  Since it wasn't using the upstream common previously, there was no
	  indentation check before commiting.

2010-12-11 10:48:25 +0100  Edward Hervey <bilboed@bilboed.com>

	* gst/rtsp-server/rtsp-media-mapping.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-sdp.c:
	* gst/rtsp-server/rtsp-session-pool.h:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-session.h:
	  rtsp-server: Some more doc fixups

2010-12-07 18:56:03 +0100  Edward Hervey <edward.hervey@collabora.co.uk>

	* Makefile.am:
	  Makefile: Add cruft-cleaning support

2010-12-07 18:52:15 +0100  Edward Hervey <edward.hervey@collabora.co.uk>

	* Makefile.am:
	* configure.ac:
	* docs/Makefile.am:
	* docs/libs/Makefile.am:
	* docs/libs/gst-rtsp-server-docs.sgml:
	* docs/libs/gst-rtsp-server-sections.txt:
	* docs/libs/gst-rtsp-server.types:
	* docs/version.entities.in:
	  docs: Add gtk-doc build system

2010-12-07 18:14:39 +0100  Edward Hervey <edward.hervey@collabora.co.uk>

	* gst/rtsp-server/Makefile.am:
	  Makefile.am: Use standard GIR make behaviour

2010-12-07 18:14:22 +0100  Edward Hervey <edward.hervey@collabora.co.uk>

	* autogen.sh:
	* configure.ac:
	  autogen/configure: Bring more in sync to standard gst module behaviour

2010-12-06 19:29:53 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: warn and fail when gstrtpbin is not found

2010-12-06 12:40:30 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* configure.ac:
	  configure: open 0.11 branch

2010-12-01 20:00:22 +0100  Edward Hervey <bilboed@bilboed.com>

	* .gitmodules:
	* common:
	  Add common submodule

2010-12-01 19:58:49 +0100  Edward Hervey <bilboed@bilboed.com>

	* common/ChangeLog:
	* common/Makefile.am:
	* common/c-to-xml.py:
	* common/check.mak:
	* common/coverage/coverage-report-entry.pl:
	* common/coverage/coverage-report.pl:
	* common/coverage/coverage-report.xsl:
	* common/coverage/lcov.mak:
	* common/gettext.patch:
	* common/glib-gen.mak:
	* common/gst-autogen.sh:
	* common/gst-xmlinspect.py:
	* common/gst.supp:
	* common/gstdoc-scangobj:
	* common/gtk-doc-plugins.mak:
	* common/gtk-doc.mak:
	* common/m4/.gitignore:
	* common/m4/Makefile.am:
	* common/m4/README:
	* common/m4/as-ac-expand.m4:
	* common/m4/as-auto-alt.m4:
	* common/m4/as-compiler-flag.m4:
	* common/m4/as-compiler.m4:
	* common/m4/as-docbook.m4:
	* common/m4/as-libtool-tags.m4:
	* common/m4/as-libtool.m4:
	* common/m4/as-python.m4:
	* common/m4/as-scrub-include.m4:
	* common/m4/as-version.m4:
	* common/m4/ax_create_stdint_h.m4:
	* common/m4/check.m4:
	* common/m4/glib-gettext.m4:
	* common/m4/gst-arch.m4:
	* common/m4/gst-args.m4:
	* common/m4/gst-check.m4:
	* common/m4/gst-debuginfo.m4:
	* common/m4/gst-default.m4:
	* common/m4/gst-doc.m4:
	* common/m4/gst-error.m4:
	* common/m4/gst-feature.m4:
	* common/m4/gst-function.m4:
	* common/m4/gst-gettext.m4:
	* common/m4/gst-glib2.m4:
	* common/m4/gst-libxml2.m4:
	* common/m4/gst-plugindir.m4:
	* common/m4/gst-valgrind.m4:
	* common/m4/gtk-doc.m4:
	* common/m4/introspection.m4:
	* common/m4/pkg.m4:
	* common/mangle-tmpl.py:
	* common/plugins.xsl:
	* common/po.mak:
	* common/release.mak:
	* common/scangobj-merge.py:
	* common/upload.mak:
	  common: Remove static version

2010-11-08 17:04:00 +0000  Bastien Nocera <hadess@hadess.net>

	* common/m4/introspection.m4:
	  Update introspection.m4 to match usage

2010-10-30 13:26:12 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* README:
	  README: update
	  Remove old stuff from the README

2010-10-11 11:12:11 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* configure.ac:
	  back to development

=== release 0.10.7 ===

2010-10-11 11:05:40 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* configure.ac:
	  release 0.10.7

2010-10-04 17:16:40 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-ogg.c:
	  test-ogg: remove parsers
	  Remove the parsers, they are not needed anymore as oggdemux now outputs normal
	  buffers with timestamps. Using the parsers also seems to break things.

2010-09-23 12:44:18 +0200  Sebastian Pölsterl <sebp@k-d-w.org>

	* bindings/vala/gst-rtsp-server-0.10.vapi:
	* bindings/vala/packages/gst-rtsp-server-0.10.metadata:
	  Updated Vala bindings

2010-09-22 23:13:37 +0200  Sebastian Pölsterl <sebp@k-d-w.org>

	* common/m4/introspection.m4:
	* configure.ac:
	* gst/rtsp-server/Makefile.am:
	  Added initial gobject-introspection support

2010-09-23 11:32:58 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory.c:
	  media-factory: don't use host for shared hash key
	  When we generate the key to share made between connections, don't include the
	  host used to connect so that we can share media even if between clients that
	  connected with localhost and ones with the ip address.

2010-09-22 21:16:03 +0100  Tim-Philipp Müller <tim.muller@collabora.co.uk>

	* bindings/vala/Makefile.am:
	  build: fix distcheck

2010-09-22 18:24:12 +0200  Sebastian Dröge <sebastian.droege@collabora.co.uk>

	* bindings/vala/gst-rtsp-server-0.10.vapi:
	* bindings/vala/packages/gst-rtsp-server-0.10.gi:
	* bindings/vala/packages/gst-rtsp-server-0.10.metadata:
	  Update Vala bindings

2010-09-22 18:12:50 +0200  Sebastian Dröge <sebastian.droege@collabora.co.uk>

	* bindings/vala/Makefile.am:
	* configure.ac:
	  Fix configure checks and installation location for Vala bindings
	  Fixes bug #628676.

2010-09-22 16:32:30 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* configure.ac:
	  back to development

=== release 0.10.6 ===

2010-09-22 16:22:49 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* configure.ac:
	  configure: release 0.10.6

2010-09-22 16:15:56 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: help the compiler a little

2010-08-24 16:47:30 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-session.c:
	  media: cleanup media transport before freeing
	  Cleanup the media transport data before freeing. In particular, remove the qdata
	  from the rtpsource object.

2010-08-20 18:17:08 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media-factory: add eos-shutdown property
	  Add an eos-shutdown property that will send an EOS to the pipeline before
	  shutting it down. This allows for nice cleanup in case of a muxer.
	  Fixes #625597

2010-08-20 15:58:39 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media: use multiudpsink send-duplicates when we can
	  If we have a new enough multiudpsink with the send-duplicates property, use this
	  instead of doing our own filtering. Our custom filtering code should eventually
	  be removed when we can depend on a released -good.

2010-08-20 13:19:56 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: don't leak destinations
	  Refactor and cleanup the destinations array when the stream is destroyed.

2010-08-20 13:09:12 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media: don't add udp addresses multiple times
	  Keep track of the udp addresses we added to udpsink and never add the same udp
	  destination twice. This avoids duplicate packets when using multicast.

2010-08-20 10:18:34 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	  server: disable use of SO_LINGER
	  SO_LINGER cause the client to fail to receive a TEARDOWN message because the
	  server close()s the connection.

2010-08-19 18:52:47 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	  server: use 5 second linger period in SO_LINGER
	  Wait 5 seconds before clearing the send buffers and reseting the connection with
	  the client when we do a close. This should be enough time to get the message to
	  the client.
	  See #622757

2010-08-16 12:32:28 +0200  Robert Krakora <rob.krakora at messagenetsystems.com>

	* gst/rtsp-server/rtsp-server.c:
	  server: use SO_LINGER
	  SO_LINGER on the socket will make sure that any pending data on the socket is
	  flushed ASAP and that the socket connection is reset. This makes sure that the
	  socket can be reused immediately.
	  Fixes 622757

2010-08-16 12:24:50 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* docs/README:
	  README: add blurb about shared media factories

2010-08-09 12:56:23 -0700  David Schleef <ds@schleef.org>

	* gst/rtsp-server/rtsp-media.c:
	  Add stdlib.h for atoi()

2010-05-20 14:33:24 +0100  Tim-Philipp Müller <tim.muller@collabora.co.uk>

	* bindings/python/Makefile.am:
	* bindings/vala/Makefile.am:
	  build: distcheck fixes
	  Fix 'make distcheck', somewhat (it still fails because it tries to
	  install files into /usr/share/vala/vapi/ irrespective of the
	  configured prefix).

2010-05-20 14:09:18 +0100  Tim-Philipp Müller <tim.muller@collabora.co.uk>

	* configure.ac:
	  configure: bump core/base requirements to released version
	  Makes things less confusing for people.

2010-04-25 16:35:30 +0100  Tim-Philipp Müller <tim.muller@collabora.co.uk>

	* configure.ac:
	  configure: fail if GStreamer core/base requirements are not met

2010-04-06 17:08:40 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: improve client cleanups
	  Make sure the session does not timeout when using TCP. We need to do this
	  because quicktime player does not send RTCP for some reason in tunneled
	  mode.
	  Refactor some cleanup code.
	  Fixes #612915

2010-04-06 17:07:27 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-session.h:
	  session: add support for prevent session timeouts
	  Add an atomix counter to prevent session timeouts when we are, for example,
	  streaming over TCP.

2010-04-06 15:45:56 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: fix unlink on session timeouts
	  When our session times out, make sure we unlink all streams in this
	  session.
	  Remove the tunnelid when closing the connection.

2010-04-06 15:44:45 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-session.c:
	  session: small cleanups

2010-04-06 11:13:51 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: handle lost_tunnel callbacks
	  Handle lost_tunnel callbacks and use it to store the tunnelid back into the
	  hashtable so that we can reuse it for when the client reopens the POST
	  socket.
	  Close the connection after a TEARDOWN.
	  Make sure or watchid is cleared when the watch is removed.
	  Fixes #612915

2010-03-19 18:03:40 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-sdp.c:
	  rtsp-server: add more support for multicast

2010-03-19 15:15:29 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* configure.ac:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media: allow configuration of allowed lower transport

2010-03-16 18:37:18 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-sdp.c:
	* gst/rtsp-server/rtsp-sdp.h:
	* gst/rtsp-server/rtsp-server.c:
	  rtsp: keep track of server ip and ipv6
	  Keep track of how the client connected to the server and setup the udp ports
	  with the same protocol.
	  Copy the server ip address in the SDP so that clients can send RTCP back to
	  us.

2010-03-16 18:34:43 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-session.c:
	  session: indent

2010-03-16 18:33:23 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: use right size for malloc

2010-03-10 11:45:30 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	  server: comment ipv6 server listening address

2010-03-10 11:45:06 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: allow for ipv6 sockets

2010-03-09 13:49:00 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	  server: rework server part
	  Allow setting a bind address, make sure we can deal with ipv6.
	  Remove the port property and change with the service property.

2010-03-09 13:44:20 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.h:
	  media: update comments a little

2010-03-09 13:43:29 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: make content-base better
	  Use the URI formatting functions to make a content-base. Also make sure that
	  there is a trailing / at the end.

2010-03-09 13:42:50 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: guard against invalid paths

2010-03-09 13:41:33 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-video.c:
	  test: catch server bind errors

2010-03-09 10:27:38 +0100  Alessandro Decina <alessandro.d@gmail.com>

	* gst/rtsp-server/rtsp-media.c:
	  rtspmedia: emit "unprepared" if _prepare fails.
	  Emit the unprepared signal if gst_rtsp_media_prepare fails so that the
	  media object is removed from its factory's cache.

2010-03-05 19:08:08 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: collect media position when seek completes

2010-03-05 18:37:17 +0100  Luca Ognibene <luca.ognibene at gmail.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: call unlink_streams in client finalize
	  Fixes #599027

2010-03-05 18:23:18 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: limit the time to wait to something huge
	  Avoid waiting forever but limit the timeout to 20 seconds.

2010-03-05 17:57:08 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-sdp.c:
	  sdp: reindent and check for prepared status

2010-03-05 17:51:26 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-session.c:
	  media: avoid doing _get_state() for state changes
	  When preparing, use the ASYNC_DONE and ERROR messages in the bus handler to wait
	  until the media is prerolled or in error. This avoids doing a blocking call of
	  gst_element_get_state() that can cause lockups when there is an error.
	  Fixes #611899

2010-03-05 16:20:08 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: reindent

2010-03-05 13:34:15 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory.c:
	  media-factory: better error handling
	  Improve the error handling a bit.

2010-03-05 13:31:37 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: rework transport parsing
	  Rework the transport parsing code so that we can ignore transports we don't
	  support instead of just picking the first one we can parse.
	  Configure a (for now hardcoded) destination for multicast transports.

2010-03-05 13:28:58 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: set multicast sink parameters
	  Disable loop and automatic multicast join on the udpsink elements.
	  Add some more debug info.
	  Reset some state variables in the right place.
	  Use the right port numbers for multicast.

2010-03-05 13:27:18 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-session.c:
	  session: handle transport setup correctly
	  Handle UDP, MCAST and TCP transport negotiation more correctly.
	  Store the server session SSRC in the transport.

2010-01-27 18:38:27 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp-client: implement error_full
	  Implement error_full to avoid some segfaults when the rtspconnection calls it.
	  See #608245

2009-12-25 18:24:10 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* docs/README:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-server.c:
	  docs: update docs and comments

2009-12-25 15:22:23 +0100  Nikolay Ivanov <ivnik@mail.ru>

	* gst/rtsp-server/rtsp-sdp.c:
	  sdp: make server work better when behind a proxy

2009-11-21 01:17:25 +0100  Sebastian Pölsterl <sebp@k-d-w.org>

	* gst/rtsp-server/rtsp-client.c:
	  client: dump rtsp message only if debug threshold is higher than GST_LEVEL_LOG

2009-11-21 19:20:23 +0100  Sebastian Pölsterl <sebp@k-d-w.org>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-mapping.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-session-pool.c:
	* gst/rtsp-server/rtsp-session.c:
	  Use GStreamer's debugging subsystem

2009-11-21 01:00:39 +0100  Sebastian Pölsterl <sebp@k-d-w.org>

	* gst/rtsp-server/rtsp-media-factory.c:
	  server: Set ghost pad active in gst_rtsp_media_factory_collect_streams

2009-11-05 11:22:44 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* configure.ac:
	  back to development

=== release 0.10.5 ===

2009-11-05 11:20:45 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* configure.ac:
	  release 0.10.5

2009-10-14 12:11:31 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* configure.ac:
	  configure: bump required versions

2009-10-11 13:57:54 +0200  Luca Ognibene <luca.ognibene@gmail.com>

	* gst/rtsp-server/rtsp-client.c:
	  client: call weak-unref on client->sessions from finalize
	  Fixes bug #596305

2009-10-09 23:08:18 +0200  Sebastian Pölsterl <sebp@k-d-w.org>

	* gst/rtsp-server/rtsp-media.c:
	  media: Fixed crasher where caps got unref'ed too often

2009-10-09 16:26:30 +0200  Sebastian Pölsterl <sebp@k-d-w.org>

	* configure.ac:
	* pkgconfig/.gitignore:
	* pkgconfig/Makefile.am:
	* pkgconfig/gst-rtsp-server-uninstalled.pc.in:
	  Added pkg-config file to use gst-rtsp-server uninstalled

2009-09-11 13:52:27 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: add some docs

2009-08-24 13:27:00 +0200  Peter Kjellerstedt <pkj@axis.com>

	* gst/rtsp-server/rtsp-client.c:
	  rtsp: Use gst_rtsp_watch_send_message().
	  Use gst_rtsp_watch_send_message() since the old API which used
	  gst_rtsp_watch_queue_message() has been deprecated.

2009-08-05 11:53:56 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* configure.ac:
	  back to development

=== release 0.10.4 ===

2009-08-05 11:44:49 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* configure.ac:
	  Release 0.10.4

2009-07-27 19:42:44 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-session.h:
	  rtsp: allocate channels in TCP mode
	  When the client does not provide us with channels in TCP mode, allocate channels
	  ourselves.

2009-07-24 12:49:41 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: don't crash when tunnelid is missing
	  When a clients tries to open an HTTP tunnel but fails to provide a tunnelid,
	  don't crash but return an error response to the client.
	  Fixes #589489

2009-07-13 11:31:23 +0200  Sebastian Pölsterl <sebp@k-d-w.org>

	* bindings/vala/gst-rtsp-server-0.10.vapi:
	* bindings/vala/packages/gst-rtsp-server-0.10.gi:
	* bindings/vala/packages/gst-rtsp-server-0.10.metadata:
	  bindings: update vala bindings with new method

2009-06-30 21:27:53 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-session-pool.c:
	* gst/rtsp-server/rtsp-session-pool.h:
	  sessionpool: add function to filter sessions
	  Add generic function to retrieve/remove sessions.

2009-06-22 18:57:25 +0100  Tim-Philipp Müller <tim.muller@collabora.co.uk>

	* configure.ac:
	  configure: bump core/base requirements to release

2009-06-18 16:05:18 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: fix indentation

2009-06-14 23:12:13 +0200  Sebastian Pölsterl <sebp@k-d-w.org>

	* gst/rtsp-server/rtsp-media.c:
	  Unref pipeline and set it to NULL. Set stream's caps to NULL, otherwise we unref it too often.

2009-06-13 16:05:02 +0200  Sebastian Pölsterl <sebp@k-d-w.org>

	* gst/rtsp-server/rtsp-media.c:
	  set state and remove elements of media in for loop

2009-06-13 14:38:39 +0200  Sebastian <sebastian@ubuntu.(none)>

	* bindings/vala/gst-rtsp-server-0.10.vapi:
	* bindings/vala/packages/gst-rtsp-server-0.10.gi:
	  Added gst_rtsp_media_remove_elements function to Vala bindings

2009-06-13 14:38:20 +0200  Sebastian <sebastian@ubuntu.(none)>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  Added gst_rtsp_media_remove_elements function

2009-06-12 22:22:40 +0200  Sebastian <sebastian@ubuntu.(none)>

	* gst/rtsp-server/rtsp-media.c:
	  Don't use name for gstrtpbin so we can add multiple instances to the pipeline

2009-06-12 19:28:04 +0200  Sebastian Pölsterl <sebp@k-d-w.org>

	* bindings/vala/gst-rtsp-server-0.10.vapi:
	* bindings/vala/packages/gst-rtsp-server-0.10.gi:
	* bindings/vala/packages/gst-rtsp-server-0.10.metadata:
	  Updated Vala bindings

2009-06-12 18:05:30 +0200  Sebastian Pölsterl <sebp@k-d-w.org>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  Added vmethod unprepare  to GstRTSPMedia
	  The default implementation sets the state of the pipeline to GST_STATE_NULL

2009-06-12 17:51:44 +0200  Sebastian Pölsterl <sebp@k-d-w.org>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	  Made collect_streams function public

2009-06-12 17:45:29 +0200  Sebastian Pölsterl <sebp@k-d-w.org>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	  Added vmethod create_pipeline to GstRTSPMediaFactory
	  The pipeline is created in this method and the GstRTSPMedia's element is added to it

2009-06-11 11:27:47 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: use g_source_destroy()
	  We need to use g_source_destroy() because we might have added the source to a
	  different main context than the default one.

2009-06-10 00:01:07 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/Makefile.am:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-params.c:
	* gst/rtsp-server/rtsp-params.h:
	  rtsp: prepare for handling GET/SET_PARAMETER
	  Add helper functions to handle GET/SET_PARAMETER. Reply with an error when there
	  is a body now.
	  Fix return codes of handlers.

2009-06-04 19:20:26 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: don't leak session pads

2009-06-04 18:32:15 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: clean up the messages a bit

2009-06-03 12:13:21 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-sdp.c:
	  sdp: warn and skip streams without media

2009-05-30 14:38:34 +0200  Sebastian Pölsterl <sebp@k-d-w.org>

	* bindings/vala/gst-rtsp-server-0.10.vapi:
	* bindings/vala/packages/gst-rtsp-server-0.10.metadata:
	  vala: Fixed typo in header file of RTSPMediaStream

2009-05-27 11:15:22 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: fix message
	  Fix a debug message
	  Make dumping RTCP stats configurable

2009-05-26 19:20:07 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: be less verbose and leak less

2009-05-26 19:05:07 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: don't leak the destination address

2009-05-26 19:01:10 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-session.h:
	  rtsp: use RTCP to keep the session alive
	  Use the RTCP rtcp-from stats field to find the associated session and use this
	  to keep the session alive.

2009-05-26 17:27:07 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-session.c:
	  session: add 5sec to the real session timeout
	  Allow the session to live 5sec longer before really timing out. This should give
	  clients some extra time to keep the session active.

2009-05-26 17:25:59 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: replay OK to GET/SET_PARAMETER
	  Some clients (vlc) use GET/SET_PARAMETER to keep the TCP session open. Make it
	  so that we return OK for those requests.

2009-05-26 11:42:41 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media: keep track of active transports
	  Keep track of which transport is active to avoid closing the connection too
	  soon.
	  Remove the destination transport also when going to NULL.
	  Print some stats about the SDES and other RTCP messages we receive from the
	  clients.

2009-05-24 20:00:19 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/.gitignore:
	* examples/Makefile.am:
	* examples/test-sdp.c:
	  example: add SDP relay example

2009-05-24 19:56:45 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: also count active TCP connections

2009-05-24 19:34:52 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  rtsp: add support for dynamic elements
	  Add support for dynamic elements.
	  Don't set live pipelines back to paused.

2009-05-24 19:33:22 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-sdp.c:
	  sdp: don't add encoding name when absent in caps

2009-05-23 16:30:55 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: warn when we can't do RTP-Info

2009-05-23 16:18:04 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory.c:
	  factory: factor out the stream construction

2009-05-23 16:17:02 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: only add RTP-Info when we have the info
	  Only add RTP-Info for a stream when we can get the seqnum and timestamp from the
	  depayloader.

2009-05-17 14:04:31 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* configure.ac:
	  back to development

=== release 0.10.3 ===

2009-05-17 13:59:10 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* configure.ac:
	  release: 0.10.3
	  - Fixes a bug where it put the wrong verion in pkgconfig
	  - Link RTP and RTCP sources

2009-05-15 17:58:44 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media: link the RTP udpsrc to the session manager
	  Link the RTP udpsrc and the appsrc to the session manager so that they don't
	  shut down when the client sends a packet to open firewalls.

2009-05-15 17:10:44 +0200  Sebastian Pölsterl <sebp@k-d-w.org>

	* pkgconfig/gst-rtsp-server.pc.in:
	  Don't use hard-coded version number in pkg-config file

2009-05-11 10:51:47 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* configure.ac:
	  back to development

=== release 0.10.2 ===

2009-05-11 10:50:31 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* configure.ac:
	  release 0.10.2

2009-05-11 10:38:44 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* .gitignore:
	* common/m4/.gitignore:
	* examples/.gitignore:
	* pkgconfig/.gitignore:
	  add some .gitignore files

2009-04-29 17:24:46 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: seek to key frames

2009-04-21 22:44:05 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  media: emit the unprepared signal by id
	  Emit the unprepared signal by id instead of name and set the media as
	  reused.

2009-04-21 22:23:54 +0200  Sebastian Pölsterl <sebp@k-d-w.org>

	* gst/rtsp-server/rtsp-media.c:
	  Set pipeline's state to NULL no matter if the media is reusable and emit unprepared signal in gst_rtsp_media_unprepare

2009-04-18 16:10:59 +0200  Sebastian Pölsterl <sebp@k-d-w.org>

	* gst/rtsp-server/rtsp-server.c:
	  Added finalize function to GstRTPSPServer to unref session pool and media mapping

2009-04-17 21:13:07 +0200  Sebastian Pölsterl <sebp@k-d-w.org>

	* bindings/vala/gst-rtsp-server-0.10.vapi:
	* bindings/vala/packages/gst-rtsp-server-0.10.gi:
	* bindings/vala/packages/gst-rtsp-server-0.10.metadata:
	  Updated vala bindings

2009-04-14 23:38:58 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/Makefile.am:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	  server: use appsink and appsrc with the API
	  Use the appsink/appsrc API instead of the signals for higher
	  performance.

2009-04-14 23:38:15 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-ogg.c:
	  tests: set the payload type correctly

2009-04-03 22:46:22 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory.c:
	  factory: connect to the unprepare signal
	  Connect to the unprepare signal for non-reusable media so that we can remove
	  them from the cache.

2009-04-03 22:45:57 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media: add signal to notify of unprepare

2009-04-03 22:22:30 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  media: more work on making the media shared
	  Add a reusable flag to medias, indicating that they can be reused after a state
	  change to NULL.
	  Small cleanups.

2009-04-03 19:47:38 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-readme.c:
	  examples: mark the example as shared for testing

2009-04-03 19:44:37 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  client: support shared media
	  Always perform the state actions even if the target state of the pipeline is
	  already correct, we still want to add/remove the transports when we are dealing
	  with shared media.
	  Keep a counter of the number of active transports for a media so that we can use
	  this to perform a state change when needed.
	  Perform a state change of the pipeline only when the first transport was added
	  or when there are no active transports.

2009-04-03 09:03:59 +0200  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  client: fix refcounting crasher
	  Don't need to remove the weak refs in the finalize methods, they are already
	  removed in the dispose.
	  Don't register the callback with a DestroyNofity.

2009-04-01 01:01:46 +0100  Tim-Philipp Müller <tim.muller@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  Fix rtsp client refcount management in TCP mode.
	  Don't unref a client ref we never had. Fixes an unref
	  of an already-free client object after a client
	  teardown request for me.

2009-04-01 00:45:17 +0100  Tim-Philipp Müller <tim.muller@collabora.co.uk>

	* gst/rtsp-server/rtsp-session.c:
	  docs: fix typo in API docs

2009-03-13 15:57:42 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  More seeking fixes.
	  Keep the udp sources in playing even if we go to paused. unlock the sources when
	  we shut down.
	  Add some more debug info.
	  Only seek when we need to.
	  Keep track of the position when we go to paused.

2009-03-12 20:32:14 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  Add beginnings of seeking.
	  Parse the Range header and perform a seek on the pipeline for the requested
	  position. It's disabled currently until I figure out what's going wrong.

2009-03-12 20:31:22 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  allow pause requests for now.
	  --

2009-03-11 20:03:06 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  Remove weak ref on the session in teardown
	  We need to remove our weakref from the session when we do a teardown because
	  else we close the TCP connection prematurely.

2009-03-11 19:38:06 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-session-pool.c:
	  Do some more session cleanup
	  Make session timeout kill the TCP connection that currently watches the
	  session.
	  Remove the client timeout property.

2009-03-11 16:45:12 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-session.h:
	  Add TCP transports
	  Use appsrc and appsink to send and receive RTP/RTCP packets in the TCP
	  connection.

2009-03-11 16:39:20 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/Makefile.am:
	* examples/test-launch.c:
	  Add example server that takes launch lines
	  Add an example server that streams any -launch line.

2009-03-06 19:34:14 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-readme.c:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  Add support for live streams
	  Add support for live streams and ranges
	  Start on handling TCP data transfer.

2009-03-04 16:33:59 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  Free the pipeline before other things
	  ---

2009-03-04 16:33:21 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  Only free the pending tunnel if there is one
	  --

2009-03-04 12:44:01 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-media.c:
	  rtsp-server: Add support for tunneling
	  Add support for tunneling over HTTP.
	  Use new connection methods to retrieve the url.
	  Dispatch messages based on the message type instead of blindly
	  assuming it's always a request.
	  Keep track of the watch id so that we can remove it later.
	  Set the media pipeline to NULL before unreffing the pipeline.

2009-02-19 15:53:50 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  Fix for channel -> watch rename in gstreamer
	  Rename the RTSPChannel to RTSPWatch and remove an unused variable.

2009-02-18 18:57:31 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  Use ASYNC RTSP io
	  Use the async RTSP channels instead of spawning a new thread for each client.
	  If a sessionid is specified in a request, fail if we don't have the session.

2009-02-18 17:49:03 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	  Add better debug info
	  Add some better debug info.

2009-02-13 20:00:34 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/test-video.c:
	  Time out sessions
	  Add support for session timeouts in the example.

2009-02-13 19:58:17 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-session-pool.c:
	* gst/rtsp-server/rtsp-session-pool.h:
	  Pass GTimeVal around for performance reasons
	  Get the current time only once and pass it around so that sessions don't have to
	  get the current time anymore.
	  Add experimental support for a GSource that dispatches when the session needs to
	  be cleaned up.

2009-02-13 19:56:01 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-session.h:
	  Add better support for session timeouts
	  Add a method to request the number of milliseconds when a session will timeout.

2009-02-13 19:54:18 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  Add suport for RTP manager monitoring
	  Add the first stage in monitoring the rtp manager.
	  Make sure we don't update the state to something we don't want.

2009-02-13 19:52:05 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  Add support for session keepalive
	  Get and update the session timeout for all requests. get the session as early as
	  possible.

2009-02-13 16:39:36 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  Handle media bus messages
	  Handle media bus messages in a custom mainloop and dispatch them to the
	  RTSPMedia objects. Let the default implementation handle some common messages.

2009-02-13 12:57:45 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-session-pool.c:
	* gst/rtsp-server/rtsp-session.c:
	  Some more session timeout handling
	  Move the session header setting code to a central place so that we always add
	  the timeout parameter too.
	  Handle timeouts by running the session cleanup code.
	  Stop media before cleaning up.

2009-02-10 16:24:13 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  Add timeout property
	  Add a timeout property ot the client and make the other properties into GObject
	  properties.

2009-02-10 16:21:17 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-session-pool.c:
	  Use getters and setters in property code
	  Use the getters and setters for the timeout property instead of locking
	  ourselves.

2009-02-04 20:13:32 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	  Merge branch 'master' of git+ssh://git.collabora.co.uk/git/gst-rtsp-server

2009-02-04 20:10:39 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-session-pool.c:
	* gst/rtsp-server/rtsp-session-pool.h:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-session.h:
	  Add more timeout stuff
	  Add method to check if a session is expired.
	  Add method to perform cleanup on a session pool.

2009-02-04 19:52:50 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-session-pool.c:
	* gst/rtsp-server/rtsp-session-pool.h:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-session.h:
	  Add beginnings of session timeouts and limits
	  Add the timeout value to the Session header for unusual timeout values.
	  Allow us to configure a limit to the amount of active sessions in a pool. Set a
	  limit on the amount of retry we do after a sessionid collision.
	  Add properties to the sessionid and the timeout of a session. Keep track of
	  creation time and last access time for sessions.

2009-02-04 17:00:42 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-sdp.c:
	* gst/rtsp-server/rtsp-session-pool.c:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-session.h:
	  Cleanup of sessions and more
	  Fix the refcounting of media and sessions in the client. Properly clean up the
	  session data when the client performs a teardown.
	  Add Server header to responses.
	  Allow for multiple uri setups in one session.
	  Add Range header to the PLAY response and add the range attribute to the SDP
	  message.
	  Fix the session pool remove method, it used the wrong key in the hashtable. Also
	  give the ownership of the sessionid to the session object.

2009-02-04 09:57:55 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	  Rename a variable
	  Rename the 'server_port' variable to simply 'port'.

2009-02-03 19:32:38 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* configure.ac:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-session.h:
	  Rework the way we handle transports for streams
	  Make the media accept an array of transports for the streams that we have
	  configured for the play/pause requests.
	  Implement server states for a client and its media.
	  Require 0.10.22.1 (git HEAD) of gstreamer.

2009-01-31 19:50:33 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media-factory.c:
	  Drop const from functions dealing with urls
	  Drop const from GstRTSPUrl stuff because the .h files in gst-plugins-base don't
	  have the right const in them.

2009-01-30 17:06:26 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-sdp.c:
	  Fix various leaks
	  Fix some leaks.

2009-01-30 16:24:10 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  More cleanups
	  Don't keep a reference to the GstRTSPMedia in the stream.
	  Free more things when freeing the GstRTSPMedia.

2009-01-30 14:53:28 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* docs/README:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	  More docs and small cleanups
	  Add some more docs and update the README
	  Cleanup some method names.
	  Remove an unneeded idx field in the GstRTSPMediaStream

2009-01-30 13:24:04 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* docs/README:
	* examples/Makefile.am:
	* examples/test-readme.c:
	  Add a README and more example code
	  Add a README file that contains a small introduction on how to use the server
	  along with the example code explained in the readme.

2009-01-30 11:06:31 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-server.c:
	  Fix some leaks and change default port
	  Fix some memory leaks by setting the udpsrc elements to the unlocked state after
	  we finished the initial preroll. If we keep them locked, setting the pipeline to
	  NULL will not stop and clean up the sources correctly.
	  Change the default RTSP port to 8554 aka the official alternative RTSP port.

2009-01-29 18:55:22 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-session.h:
	  Cleanups to the session object
	  Remove some unneeded variables in the session state of a stream such as the
	  owner media and the server transport.
	  Get the configuration of a media stream in a session based on the media_stream
	  in the original object instead of our cached index.
	  Free more data in the finalize method.

2009-01-29 18:51:02 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  Cleanups and reuse media from DESCRIBE
	  Handle thread create errors.
	  Rename some internal methods to better match what they actually do.
	  Handle misconfiguration of session_pool and media_mapping gracefully.
	  Cache the DESCRIBE media and uri in the client connection and reuse them when
	  we receive a SETUP request in the same connection for the same uri.
	  Cleanup the client connection object.

2009-01-29 17:20:27 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  Add shared properties to media and factory
	  Add the shared property to media.
	  Implement some simple caching in the factory depending on if the media is shared
	  or not.

2009-01-29 17:19:21 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  Add a little comment
	  Add some comment about the content-base header.

2009-01-29 13:31:27 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/Makefile.am:
	* examples/test-mp4.c:
	* examples/test-ogg.c:
	* examples/test-video.c:
	* gst/rtsp-server/Makefile.am:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-sdp.c:
	* gst/rtsp-server/rtsp-sdp.h:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-session.h:
	  Reorganize things, prepare for media sharing
	  Added various other test server examples
	  Move the SDP message generation to a separate helper.
	  Refactor common code for finding the session.
	  Add content-base for realplayer compatibility
	  Clean up request uris before processing for better vlc compatibility.
	  Move prerolling and pipeline construction to the RTSPMedia object.
	  Use multiudpsink for future pipeline reuse.

2009-01-30 11:23:57 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* configure.ac:
	  Back to development
	  Back to 0.10.1.1

=== release 0.10.1 ===

2009-01-30 11:20:18 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* configure.ac:
	  Make 0.10.1 release
	  Release 0.10.1

2009-01-29 15:19:01 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* bindings/vala/Makefile.am:
	  Fix make dist
	  Add more directories and files to the dist.

2009-01-24 14:34:35 +0100  Sebastian Pölsterl <sebp@k-d-w.org>

	* bindings/python/Makefile.am:
	* bindings/python/rtspserver.override:
	  Fixed compile error of python bindings

2009-01-23 21:03:53 +0100  Sebastian Pölsterl <sebp@k-d-w.org>

	* bindings/vala/gst-rtsp-server-0.10.vapi:
	* bindings/vala/packages/gst-rtsp-server-0.10.metadata:
	  Marked values as nullable accordingly

2009-01-23 20:31:11 +0100  Sebastian Pölsterl <sebp@k-d-w.org>

	* bindings/vala/gst-rtsp-server-0.10.vapi:
	* bindings/vala/packages/gst-rtsp-server-0.10.excludes:
	* bindings/vala/packages/gst-rtsp-server-0.10.gi:
	* bindings/vala/packages/gst-rtsp-server-0.10.metadata:
	  Updated Vala bindings

2009-01-22 18:35:17 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media-mapping.c:
	* gst/rtsp-server/rtsp-media-mapping.h:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-session-pool.h:
	  Cleanups and doc updates
	  Add some more documentation and do some minor cleanups here and there.

2009-01-22 17:58:19 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-session.h:
	  More improvements
	  Rename GstRTSPMediaBin to GstRTSPMedia
	  Parse the request url into a GstRTSPUri object and pass this object to the
	  various handlers and methods that require the uri.

2009-01-22 16:54:07 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/main.c:
	  Update example
	  Add some more docs and remove some old code from the example.

2009-01-22 16:53:16 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	  Handle state change failures better
	  Handle state change failures better when changing the state of the pipeline to
	  determine the SDP.

2009-01-22 16:51:08 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	  Make element creation more extendible
	  Add get_element vmethod to the default MediaFactory so that subclasses can just
	  override that method and still use the default logic for making a MediaBin from
	  that.

2009-01-22 15:33:29 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/main.c:
	* gst/rtsp-server/Makefile.am:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	* gst/rtsp-server/rtsp-media-mapping.c:
	* gst/rtsp-server/rtsp-media-mapping.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-session.h:
	  Make the server handle arbitrary pipelines
	  Make GstMediaFactory an object that can instantiate GstMediaBin objects.
	  The GstMediaBin object has a handle to a bin with elements and to a list of
	  GstMediaStream objects that this bin produces.
	  Add GstMediaMapper that can map url mountpoints to GstMediaFactory objects along
	  with methods to register and remove those mappings.
	  Add methods and a property to GstRTSPServer to manage the GstMediaMapper object
	  used by the server instance.
	  Modify the example application so that it shows how to create custom pipelines
	  attached to a specific mount point.
	  Various misc cleanps.

2009-01-20 19:47:07 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	  Allow setting a custom media factory for a server

2009-01-20 19:46:21 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  Allow setting a custom media factory for a client.

2009-01-20 19:45:28 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/Makefile.am:
	  Add Makefile entry for the media factory

2009-01-20 19:44:45 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media-factory.c:
	* gst/rtsp-server/rtsp-media-factory.h:
	  Add media factory to map urls to media pipeline objects.

2009-01-20 19:43:47 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	  Add comments. Remove unused field

2009-01-20 19:41:53 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-session-pool.c:
	* gst/rtsp-server/rtsp-session-pool.h:
	  Allow custom session pools to override the session id allocation algorithms Add some comments.

2009-01-20 19:40:42 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-session.h:
	  Add some comments.

2009-01-20 13:57:47 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  Move the connection code in one place Add some comments

2009-01-20 13:19:36 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	  Make vmethod to create and accept new clients. Add some docs.

2009-01-19 19:36:23 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	  Make more properties configurable in the server. Expose the GIOChannel and GSource better to allow for more customisations.

2009-01-19 19:34:29 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	  Name the parameters more appropriately.

2009-01-19 19:32:28 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-session-pool.c:
	  Do some more cleanup of the session pool.

2009-01-08 16:28:24 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/Makefile.am:
	* gst/rtsp-server/rtsp-client.c:
	  Check if return value of gst_rtsp_session_get_media is not NULL

2009-01-08 15:02:42 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/Makefile.am:
	  Install rtsp-session and rtsp-session-pool headers

2009-01-08 14:57:55 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* .gitignore:
	* Makefile.am:
	* acinclude.m4:
	* bindings/python/Makefile.am:
	* bindings/python/arg-types.py:
	* bindings/python/codegen/Makefile.am:
	* bindings/python/codegen/__init__.py:
	* bindings/python/codegen/argtypes.py:
	* bindings/python/codegen/code-coverage.py:
	* bindings/python/codegen/codegen.py:
	* bindings/python/codegen/definitions.py:
	* bindings/python/codegen/defsparser.py:
	* bindings/python/codegen/docextract.py:
	* bindings/python/codegen/docgen.py:
	* bindings/python/codegen/fileprefix.override:
	* bindings/python/codegen/fileprefixmodule.c:
	* bindings/python/codegen/h2def.py:
	* bindings/python/codegen/mergedefs.py:
	* bindings/python/codegen/mkskel.py:
	* bindings/python/codegen/override.py:
	* bindings/python/codegen/reversewrapper.py:
	* bindings/python/codegen/scmexpr.py:
	* bindings/python/rtspserver-types.defs:
	* bindings/python/rtspserver.defs:
	* bindings/python/rtspserver.override:
	* bindings/python/rtspservermodule.c:
	* configure.ac:
	  Add python bindings.

2009-01-08 14:53:47 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* bindings/Makefile.am:
	* configure.ac:
	  Don't go into python dir when requirements for python bindings are missing

2009-01-08 14:49:57 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* bindings/Makefile.am:
	* bindings/vala/Makefile.am:
	* configure.ac:
	  Install Vala bindings if vala is available

2008-12-12 16:22:02 +0100  Sebastian Pölsterl <sebp@k-d-w.org>

	* bindings/vala/gst-rtsp-server-0.10.deps:
	* bindings/vala/gst-rtsp-server-0.10.vapi:
	* bindings/vala/packages/gst-rtsp-server-0.10.deps:
	* bindings/vala/packages/gst-rtsp-server-0.10.excludes:
	* bindings/vala/packages/gst-rtsp-server-0.10.files:
	* bindings/vala/packages/gst-rtsp-server-0.10.gi:
	* bindings/vala/packages/gst-rtsp-server-0.10.metadata:
	* bindings/vala/packages/gst-rtsp-server-0.10.namespace:
	  Regenerated Vala bindings

2008-12-08 13:19:40 +0100  Sebastian Pölsterl <sebp@k-d-w.org>

	* bindings/vala/gst-rtsp-server.vapi:
	* bindings/vala/packages/gst-rtsp-server.metadata:
	  Fixed typo in included headers for vala bindings

2009-01-08 14:42:10 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* Makefile.am:
	* configure.ac:
	* pkgconfig/Makefile.am:
	* pkgconfig/gst-rtsp-server.pc.in:
	  Added pkgconfig file

2008-11-30 23:57:26 +0100  Sebastian Pölsterl <marduk@k-d-w.org>

	* bindings/vala/gst-rtsp-server.vapi:
	* bindings/vala/packages/gst-rtsp-server.excludes:
	* bindings/vala/packages/gst-rtsp-server.gi:
	* bindings/vala/packages/gst-rtsp-server.metadata:
	  Adjusted included headersfor Vala bindings. Ignore rtsp-url-compat.h

2008-11-30 23:41:20 +0100  Sebastian Pölsterl <marduk@k-d-w.org>

	* bindings/vala/gst-rtsp-server.vapi:
	* bindings/vala/packages/gst-rtsp-server.deps:
	* bindings/vala/packages/gst-rtsp-server.files:
	* bindings/vala/packages/gst-rtsp-server.gi:
	* bindings/vala/packages/gst-rtsp-server.metadata:
	* bindings/vala/packages/gst-rtsp-server.namespace:
	  Added Vala bindings

2008-10-25 23:36:16 +0200  Alessandro Decina <alessandro.d@gmail.com>

	* gst/rtsp-server/rtsp-session.c:
	  Change an obviously wrong return FALSE to return NULL; (cherry picked from commit 56d4fb48030db3ae45f3f0e60b29b36f3134322b)

2008-11-13 19:43:10 +0100  Sebastian Pölsterl <sebp@ubuntu.(none)>

	* examples/Makefile.am:
	* gst/rtsp-server/Makefile.am:
	  Put GStreamer version in library name

2009-01-08 13:51:26 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* examples/Makefile.am:
	* gst/rtsp-server/Makefile.am:
	  Fix some issues to pass distcheck

2009-01-08 13:41:33 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* gst/rtsp-server/rtsp-server.c:
	  Added port property to GstRTSPServer class.

2009-01-08 13:18:55 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* Makefile.am:
	* autogen.sh:
	* configure.ac:
	* examples/Makefile.am:
	* examples/main.c:
	* gst/Makefile.am:
	* gst/rtsp-server/Makefile.am:
	* gst/rtsp-server/rtsp-client.c:
	* gst/rtsp-server/rtsp-client.h:
	* gst/rtsp-server/rtsp-media.c:
	* gst/rtsp-server/rtsp-media.h:
	* gst/rtsp-server/rtsp-server.c:
	* gst/rtsp-server/rtsp-server.h:
	* gst/rtsp-server/rtsp-session-pool.c:
	* gst/rtsp-server/rtsp-session-pool.h:
	* gst/rtsp-server/rtsp-session.c:
	* gst/rtsp-server/rtsp-session.h:
	* src/Makefile.am:
	  Split in library and example program

2008-11-10 20:59:35 +0100  Sebastian Pölsterl <sebp@ubuntu.(none)>

	* src/rtsp-client.h:
	  Removed obsolete variable

2008-11-10 21:03:15 +0100  Sebastian Pölsterl <sebp@ubuntu.(none)>

	* src/rtsp-client.c:
	* src/rtsp-client.h:
	  Removed pipeline variable GstRTSPClient, because it's only used in one function

2009-01-08 11:22:58 +0100  Wim Taymans <wim.taymans@collabora.co.uk>

	* src/rtsp-media.c:
	  Set the payload types for the different payloaders. Maybe this shoulde be done automatically instead.

2008-10-23 12:23:27 +0200  Wim Taymans <wim@metal.(none)>

	* src/rtsp-session.c:
	  Initialize some more vars.

2008-10-23 12:14:55 +0200  Wim Taymans <wim@metal.(none)>

	* src/rtsp-session.c:
	  Initialize variable to avoid compiler warning.

2008-10-09 13:30:47 +0100  Simon McVittie <simon.mcvittie@collabora.co.uk>

	* .gitignore:
	  Add a reasonable generic .gitignore

